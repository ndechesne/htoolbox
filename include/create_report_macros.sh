#!/bin/bash -e

filename="report_macros.h"

cat > "$filename" << EOF
// This file is autogenerated and MUST NOT be included directly

#define HLOG_GENERIC_GLOBAL 0x1
#define HLOG_GENERIC_LOCAL  0x2
#define HLOG_GENERIC_BOTH   (HLOG_GENERIC_GLOBAL | HLOG_GENERIC_LOCAL)

#define hlog_global_is_worth(l) \\
  ((l) <= htoolbox::report.level())

#define hlog_local_is_worth(l) \\
  ((htoolbox::tl_report != NULL) && ((l) <= htoolbox::tl_report->level()))

#define hlog_is_worth(l) \\
  (hlog_global_is_worth(l) || hlog_local_is_worth(l))

// All macros below derive from this one
#define hlog_generic(m, l, t, i, s, b, f, ...) \\
  do { \\
    if ((m & HLOG_GENERIC_LOCAL) && hlog_local_is_worth(l)) \\
      htoolbox::tl_report->log(__FILE__,__LINE__,__FUNCTION__,(l),(t),(i), \\
        htoolbox::tl_thread_id,(s),(b),(f),##__VA_ARGS__); \\
    if ((m & HLOG_GENERIC_GLOBAL) && hlog_global_is_worth(l)) \\
      htoolbox::report.log(__FILE__,__LINE__,__FUNCTION__,(l),(t),(i), \\
        htoolbox::tl_thread_id,(s),(b),(f),##__VA_ARGS__); \\
  } while (0)

EOF

TEMP_FLAG="htoolbox::Report::HLOG_TEMPORARY"
for scope in '' _global _local; do
#   echo "scope=$scope"
  case $scope in
    _local)
      mode="HLOG_GENERIC_LOCAL"
      ;;
    _global)
      mode="HLOG_GENERIC_GLOBAL"
      ;;
    *)
      mode="HLOG_GENERIC_BOTH"
      ;;
    esac
  for suffix in '' _temp _arrow _buffer; do
#     echo "  suffix=$suffix"
    for level in alert error warning info verbose debug regression; do
      if [ "$suffix" == "_temp" -o "$suffix" == "_arrow" ]; then
        if [ "$level" != "verbose" -a "$level" != "debug" ]; then
          continue
        fi
      fi
      if [ "$suffix" == "_temp" ]; then
        flag="$TEMP_FLAG"
      else
        flag="0"
      fi
      first_arg=""
      if [ "$suffix" == "_arrow" ]; then
        first_arg="indent, "
        indent="(indent)"
      else
        indent="-1"
      fi
      if [ "$suffix" == "_buffer" ]; then
        first_arg="size, buffer, "
        buffer="(size), (buffer)"
      else
        buffer="0, NULL"
      fi
#       echo "    level=$level - hlog""$scope""_$level""$suffix"
      echo  >> "$filename"
      echo -n "#define hlog""$scope""_$level""$suffix" >> "$filename"
      echo "($first_arg""format, ...) \\" >> "$filename"
      echo "  hlog_generic($mode, htoolbox::$level, \\" >> "$filename"
      echo "    $flag, $indent, $buffer, (format), ##__VA_ARGS__)" >> "$filename"
    done
  done
done
