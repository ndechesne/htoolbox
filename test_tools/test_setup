#!/bin/bash -e

# Set mask
umask 0022

# Dir names
CONFIGDIR="etc"

TESTDIR="test1"
TESTDIR2="test2"
TESTDIRCIFS="test_cifs"
TESTDIRNFS="test_nfs"
TESTDIRSSH="test_ssh"
TESTDIRUSER="test_user"
TESTDBDIR="test_db"
TESTRESTORE="test_r"

ROOTDIRNFS="/home/User"
ROOTDIRSSH="/home/Blah"

# Create given directory, enter it
if [ -n "$1" ]; then
  rm -rf "$1" && mkdir "$1" && cd "$1" || exit 1
else
  # Clean
  rm -rf "$CONFIGDIR"
  rm -rf "$TESTDBDIR"
  rm -rf "$TESTDIR"
  rm -rf "$TESTDIR2"
  rm -rf "$TESTDIRCIFS"
  rm -rf "$TESTDIRNFS"
  rm -rf "$TESTDIRSSH"
  rm -rf "$TESTDIRUSER"
  rm -rf "$TESTRESTORE"
fi

# Create environment file
cat << EOF >> test_env
export CONFIGDIR="$CONFIGDIR"
export TESTDIR="$TESTDIR"
export TESTDIR2="$TESTDIR2"
export TESTDIRCIFS="$TESTDIRCIFS"
export TESTDIRNFS="$TESTDIRNFS"
export TESTDIRSSH="$TESTDIRSSH"
export TESTDIRUSER="$TESTDIRUSER"
export TESTDBDIR="$TESTDBDIR"
export TESTRESTORE="$TESTRESTORE"
export ROOTDIRNFS="$ROOTDIRNFS"
export ROOTDIRSSH="$ROOTDIRSSH"
EOF

# Test bench
mkdir "$TESTDIR"
mkdir "$TESTDIR/testdir"
echo "Hello world!" > "$TESTDIR/testfile"
touch -d "20061022 GMT" "$TESTDIR/testfile"
chgrp cdrom "$TESTDIR/testfile"
chmod 750 "$TESTDIR/testfile"
touch "$TESTDIR/testfile~"
ln -s "testfile" "$TESTDIR/testlink"
mkfifo "$TESTDIR/testpipe"

# Filters test
mkdir "$TESTDIR/subdir"
echo "Hello Moon!" > "$TESTDIR/subdir/testfile"
touch "$TESTDIR/subdir/testfile1"
echo "Hello Moon!" > "$TESTDIR/subdir/testfile2"
touch "$TESTDIR/test space"
mkdir "$TESTDIR/dir space"
touch "$TESTDIR/dir space/file space"
ln -s "linked space" "$TESTDIR/dir space/link space"

# Big file
dd if=/dev/zero of=test1/big_file bs=1M count=10 status=noxfer 2> /dev/null

# Strange names
touch "`echo -e "$TESTDIR/strange1\\01TAB\\tCR\\r"`"
touch "`echo -e "$TESTDIR/strange2\\01TAB\\tLF\\n"`"
touch "`echo -e "$TESTDIR/strange3\\01TAB\\tLF\\nCR\\r"`"

# CVS test
CVSDIR="$TESTDIR/cvs"
mkdir "$CVSDIR"
touch "$CVSDIR/filemod.o"
touch "$CVSDIR/filenew.c"
touch "$CVSDIR/fileoth"
touch -d "Wed Oct  4 18:04:40 UTC 2006" "$CVSDIR/fileutd.h"
mkdir "$CVSDIR/dirbad"
touch "$CVSDIR/dirbad/fileoth"
touch "$CVSDIR/dirbad/fileutd"
mkdir "$CVSDIR/diroth"
mkdir "$CVSDIR/dir space"
touch "$CVSDIR/dir space/file space"
touch "$CVSDIR/dir space/file other"
mkdir "$CVSDIR/dirutd"
touch "$CVSDIR/dirutd/fileoth"
touch "$CVSDIR/dirutd/fileutd"

mkdir "$CVSDIR/dir space/CVS"
cat << EOF > "$CVSDIR/dir space/CVS/Entries"
/file space/1.5/Sun May 30 22:19:13 2010//
D
EOF
echo "Some space root" > "$CVSDIR/dir space/CVS/Root"
echo "Some space thing" > "$CVSDIR/dir space/CVS/Whatever"

mkdir "$CVSDIR/dirutd/CVS"
cat << EOF > "$CVSDIR/dirutd/CVS/Entries"
/fileutd/1.2/Wed Oct  4 18:04:40 2006//
D
EOF
echo "Some root" > "$CVSDIR/dirutd/CVS/Root"
echo "Some thing" > "$CVSDIR/dirutd/CVS/Whatever"

mkdir "$CVSDIR/CVS"
cat << EOF > "$CVSDIR/CVS/Entries"
/filenew.c/0/dummy timestamp//
/filemod.o/1.1/Mon Oct  2 16:27:11 2006//D2007.12.16.23.00.00
/fileutd.h/1.2/Wed Oct  4 18:04:40 2006//
D/dirbad////
D/dirutd////
D/dir space////
EOF
echo "Some other root" > "$CVSDIR/CVS/Root"
echo "Some other thing" > "$CVSDIR/CVS/Whatever"

mkdir "$CVSDIR/CVS/Wherever"
touch "$CVSDIR/CVS/Wherever/Whichever"

# Subversion test
SVNDIR="$TESTDIR/svn"
mkdir "$SVNDIR"
touch "$SVNDIR/filemod.o"
touch "$SVNDIR/filenew.c"
touch "$SVNDIR/fileoth"
touch "$SVNDIR/fileutd.h"
mkdir "$SVNDIR/dir space"
touch "$SVNDIR/dir space/file space"
mkdir "$SVNDIR/dirbad"
touch "$SVNDIR/dirbad/fileoth"
touch "$SVNDIR/dirbad/fileutd"
mkdir "$SVNDIR/diroth"
mkdir "$SVNDIR/dirutd"
touch "$SVNDIR/dirutd/fileoth"
touch "$SVNDIR/dirutd/fileutd"

mkdir "$SVNDIR/dir space/.svn"
cat << EOF > "$SVNDIR/dir space/.svn/entries"
A      file space
?      file other
EOF
echo "Some format" > "$SVNDIR/dir space/.svn/format"
echo "Something" > "$SVNDIR/dir space/.svn/whatever"

mkdir "$SVNDIR/dirutd/.svn"
cat << EOF > "$SVNDIR/dirutd/.svn/entries"
C      fileutd
?      fileoth
EOF
echo "Some format" > "$SVNDIR/dirutd/.svn/format"
echo "Something" > "$SVNDIR/dirutd/.svn/whatever"

mkdir "$SVNDIR/.svn"
cat << EOF > "$SVNDIR/.svn/entries"
A      filenew.c
M      filemod.o
I      fileoth
 M     dirbad
?      diroth
EOF
echo "Some other format" > "$SVNDIR/.svn/format"
echo "Someotherthing" > "$SVNDIR/.svn/whatever"

mkdir "$SVNDIR/.svn/wherever"
touch "$SVNDIR/.svn/wherever/whichever"

# Multiple backup
mkdir "$TESTDIR2"
mkdir "$TESTDIR2/testdir"
dd if=/dev/zero of="$TESTDIR2/testfile" bs=142 count=1024 2> /dev/null
cp "../`dirname $0`/sample.gz" "$TESTDIR2/testfile2.gz"
touch -t 200610221134.56 "$TESTDIR2/testfile"
dd if=/dev/zero of="$TESTDIR2/testfile~" bs=512 count=1024 2> /dev/null
dd if=/dev/zero of="$TESTDIR2/testfile2" bs=253 count=1024 2> /dev/null
ln -s "testfile" "$TESTDIR2/testlink"

# CIFS test
mkdir -p "$TESTDIRCIFS/Backup"
mkdir -p "$TESTDIRCIFS/Test Dir"
touch "$TESTDIRCIFS/Test Dir/My File.TXT"
mkdir -p "$TESTDIRCIFS/Test Dir/My Dir"
echo 1 > "$TESTDIRCIFS/Test Dir/My Dir/a File.TXT"
echo 2 > "$TESTDIRCIFS/Test Dir/My Dir/another File.TXT"
cat << EOF > "$TESTDIRCIFS/Backup/Backup.LST"
subset 'xp'
# Ends in \", but should not fail
path "C:\Test Dir\"

  filter and silly
    condition filter      backup
    condition type        pipe
    condition name        a
    condition name_start  b
    condition name_end    c
    condition name_regex  d
    condition path        e
    condition path_start  f
    condition path_end    g
    condition path_regex  h
    condition size>=      1
    condition size>       2ki
    condition size<=      3MB
    condition size<       4GiB
    condition mode&       0777
    condition mode=       0644
EOF
cat << EOF > "$TESTDIRCIFS/Backup/Backup2.LST"
subset 'xp'
# Ends in \", but should not fail
path "C:\Test\"

  filter or crazy
    condition name_regex  '$^what is an impossible regex?'
    condition path_regex  '$^what is an impossible regex?'
    condition size>=      a
    condition size>       b
    condition size<=      c
    condition size<       d
    condition mode&       e
    condition mode=       f
    condition size>=      1Kb
    condition size>       2MiC
    condition size<=      3GB.
    condition size<       4iB
EOF

# NFS test
mkdir -p "$TESTDIRNFS/test"
touch "$TESTDIRNFS/test/File2.txt"
mkdir -p "$TESTDIRNFS/test/dir"
echo 3 > "$TESTDIRNFS/test/dir/file3.txt"
mkdir -p "$TESTDIRNFS/test2"
touch "$TESTDIRNFS/test2/File3.txt"
touch "$TESTDIRNFS/test2/File4.txt"
cat << EOF > "$TESTDIRNFS/hbackup.list"
report_copy_error_once
path "$ROOTDIRNFS/test/"

  filter or compress
    condition name File2.txt
    condition path dir/file3.txt

  compress compress
EOF

# SSH test
mkdir -p "$TESTDIRSSH/test"
echo ssh1 > "$TESTDIRSSH/test/File2.txt"
mkdir -p "$TESTDIRSSH/test/dir"
echo ssh3 > "$TESTDIRSSH/test/dir/file3.txt"
mkdir -p "$TESTDIRSSH/test1"
mkdir -p "$TESTDIRSSH/test2"
echo ssh3 > "$TESTDIRSSH/test2/File3.txt"
echo ssh4 > "$TESTDIRSSH/test2/File4.txt"
cat << EOF > "$TESTDIRSSH/hbackup.list"
report_copy_error_once
path "$ROOTDIRSSH/test/"

  filter or compress
    condition name File2.txt
    condition path dir/file3.txt

  compress compress
EOF

# User-mode test
mkdir -p "$TESTDIRUSER/testuser"
echo 10 > "$TESTDIRUSER/testuser/f1.txt"
mkdir -p "$TESTDIRUSER/testuser/subdir"
echo 20 > "$TESTDIRUSER/testuser/subdir/f2.txt"
mkdir -p "$TESTDIRUSER/testuser/subdir2"
echo 30 > "$TESTDIRUSER/testuser/subdir2/f3.txt"
echo 40 > "$TESTDIRUSER/testuser/subdir2/f4.txt"
mkdir -p "$TESTDIRUSER/.hbackup"
cat << EOF > "$TESTDIRUSER/.hbackup/config"
path "~/testuser/"
report_copy_error_once
EOF

# Restore
mkdir -p "$TESTRESTORE"

# Server config
mkdir "$CONFIGDIR"
cat << EOF > "$CONFIGDIR/hbackup.conf"
db "$TESTDBDIR"
  compress auto
  # Check backwards compatibility
  compress_auto

filter all nothing
  condition type pipe
  condition size> 10

ignore nothing

filter all backup
  condition type file
  condition path_end ~

filter any test_or
  condition filter backup
  condition !size< 1000

client myClient xp
  protocol smb
  users backup
  config C:\Backup\Backup.LST

client myClient
  protocol nfs
  users backup root
  hostname myClient
  config $ROOTDIRNFS/hbackup.list

client newClient
  protocol ssh
  option username user
  option password p4sS?
  config $ROOTDIRSSH/hbackup.list

client other
  protocol none
  hostname otherClient
  option username foo
  option password bar
  config $ROOTDIRSSH/hbackup.list
  # This is a comment
  filter and subdir
    condition path_start subdir
    condition !size< 100

  filter and bigfile
    condition size>= 10
    condition type file

  expire 1

  path test2//

  path "test1" # should work

    filter and not_object
      condition !path_end ".o"

    filter or to_be_ignored
      condition filter subdir
      condition filter backup
      condition !filter not_object

    ignore to_be_ignored

    compress bigfile

    parser cvs controlled
    parser svn modified

client myhost
  report_copy_error_once
  protocol file
  hostname myhost.mynetwork.lan
  timeout_nowarning
  config "$CONFIGDIR/localhost.list"
  expire 1

client client xp
  ignore backup
  protocol smb
  option username Myself
  option password flesyM
  option nocase
  hostname myClient
  config "C:\Backup\Backup.LST"

client aClient vista
  protocol smb
  filter and huge_file
    condition !filter backup
    condition !size< 100
  # Cannot end in \", would fail
  path "C:\Test Dir"
    filter and compress_m
      condition !filter huge_file
    compress compress_m
    ignore backup
    parser svn modified
    report_copy_error_once
EOF

# Client config
cat << EOF > "$CONFIGDIR/localhost.list"
# This is a comment
filter and subdir
  condition path_start subdir
  condition !size< 100
EOF
echo -e "\r" >> "$CONFIGDIR/localhost.list"
cat << EOF >> "$CONFIGDIR/localhost.list"
users biloute machin

ignore backup

filter and bigfile
  condition size>= 10
  condition type file

expire 1

path test2//

path "test1" # should work

  filter and not_object
    condition !path_end ".o"

  filter or to_be_ignored
    condition filter subdir
    condition !filter not_object

  ignore to_be_ignored

  compress bigfile

  parser cvs controlled
  parser svn modified

  filter and cvs_entries
    condition name Entries

  no_compress cvs_entries
EOF

# Broken config
cat << EOF > "$CONFIGDIR/broken.conf"
db "$TESTDBDIR"
db blah

timeout_nowarning
timeout_nowarning

report_copy_error_once
report_copy_error_once

filter all
  condition type file
  condition path_end ~

filter any test_or

client myClient
  protocol nfs
  users
  ignore test_or
  ignore

client other
  protocol ssh
  hostname otherClient
  hostname 192.168.0.132
  option I am happy
  option
  config /home/backup/Backup.list
  config /home/backup/Backup2.list
  # This is a comment
  filter and subdir
    condition path_start subdir
    condition !size< 100

  filter and bigfile 3
    condition size>= 10 yeah
    condition type

  expire 1
  expire 2 3

  path test2//

  path "test1" # should work

    filter and not_object
      condition !path_end ".o"

    filter or to_be_ignored
      condition filter subdir
      condition filter backup
      condition !filter not_object

    filter and blah

    filter or


    ignore to_be_ignored
    ignore to_be_ignored2

    compress bigfile
    compress bigfile2

    parser cvs controlled
    parser svn modified

client myhost
  hostname myhost.mynetwork.lan
  config "$CONFIGDIR/localhost.list"
  expire 1

  path blah
    ignore  2 3
    compress 4 5

client client xp
  protocol smb
  option username Myself
  option password flesyM
  option nocase
  hostname myClient
  config "C:\Backup\Backup.LST"

  path "C:\Crash\"
  path "C:\Crash\

  path blah
    ignore
    compress

what_the_f...?
EOF

cd ..
tar --remove-files -c -z -f $1.tar.gz $1
