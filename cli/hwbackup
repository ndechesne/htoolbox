#!/bin/bash -e

# Usage
usage () {
cat << EOF
`basename $0` options:
  -c config or --config config: give configuration file path
  -d config or --database db: give database path (supersedes -c)
  -v config or --verbose: be verbose
  -w config or --website: destination dir for web pages
EOF
}

# Xhtml
header() {
  echo '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/2002/REC-xhtml1-20020801/DTD/xhtml1-strict.dtd">'
  echo '<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">'
  echo '  <head>'
  echo '    <meta name="generator" content="HTML Tidy for Linux/x86 (vers 1 September 2005), see www.w3.org" />'
  echo '    <title>HBackup report</title>'
  echo '    <meta name="GENERATOR" content="Hand-coded HTML" />'
  echo '    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />'
  echo '  </head>'
  echo '  <body>'
}

footer() {
  echo '  </body>'
  echo '</html>'
}

title() {
  echo "    <h$1>$2</h$1>"
}

paragraph() {
  echo "    <p>$1</p>"
}

list_start() {
  echo "    <ul>"
}

list_item() {
  echo "    <li>$1</li>"
}

list_end() {
  echo "    </ul>"
}

file_date() {
  date -r "$1" +%F -u
}

file_time() {
  date -r "$1" +%T -u
}

# Options
unset HWBACKUP_CONFIG
unset HWBACKUP_DB
unset HWBACKUP_VERBOSE
unset HWBACKUP_WEB
while [ $# -gt 0 ]; do
  case "x$1" in
    "x-h"|"x--help")
      usage
      exit 0
      ;;
    "x-c"|"x--config")
      shift
      HWBACKUP_CONFIG=$1
      ;;
    "x-d"|"x--database")
      shift
      HWBACKUP_DB=$1
      ;;
    "x-v"|"x--verbose")
      HWBACKUP_VERBOSE="yes"
      ;;
    "x-w"|"x--website")
      shift
      HWBACKUP_WEB=$1
      ;;
    *)
      echo "Unknown option '$1'" >&2
      usage
      exit 1
      ;;
  esac
  shift
done

# DB
if [ -z "$HWBACKUP_DB" ]; then
  if [ -z "$HWBACKUP_CONFIG" ]; then
    HWBACKUP_CONFIG=/etc/hbackup/config
  fi
  if [ ! -r "$HWBACKUP_CONFIG" ]; then
    echo "Configuration file not accessible '$HWBACKUP_CONFIG'" >&2
    exit 2
  fi
  while read keyword value rest; do
    if [ "$keyword" == "db" ]; then
      HWBACKUP_DB=`eval echo $value`
      break
    fi
  done < "$HWBACKUP_CONFIG"
  if [ -z "$HWBACKUP_DB" ]; then
    echo "DB not found in configuration file '$HWBACKUP_CONFIG'" >&2
    exit 2
  fi
fi
if [ ! -d "$HWBACKUP_DB" ]; then
  echo "DB does not exist '$HWBACKUP_DB'" >&2
  exit 1
fi
if [ -n "$HWBACKUP_VERBOSE" ]; then
  echo "Looking at DB in '$HWBACKUP_DB'"
fi

# Website
if [ -z "$HWBACKUP_WEB" ]; then
  HWBACKUP_WEB=/var/www/hbackup
fi
if ! mkdir -p "$HWBACKUP_WEB" 2> /dev/null; then
  echo "Cannot create website in '$HWBACKUP_WEB'" >&2
  exit 2
fi
if [ -n "$HWBACKUP_VERBOSE" ]; then
  echo "Web pages will be created in '$HWBACKUP_WEB'"
fi

# Clients
CLIENTS=`ls "$HWBACKUP_DB"`
if [ -z "$CLIENTS" ]; then
  if [ -n "$HWBACKUP_VERBOSE" ]; then
    echo "No clients found"
  fi
  exit 0
fi
if [ -n "$HWBACKUP_VERBOSE" ]; then
  echo -n "Clients:"
  for client in $CLIENTS; do
    echo -n " '$client'"
  done
  echo
fi

# Front page
FRONT="$HWBACKUP_WEB/index.xhtml"
rm -f "$FRONT"
header >> "$FRONT"
title 1 "HBackup report" >>"$FRONT"

title 2 "Database" >> "$FRONT"
REF_FILE="$HWBACKUP_DB/.last-scan"
if [ -r "$REF_FILE" ]; then
  paragraph "Last full scan on `file_date \"$REF_FILE\"` at `file_time \"$REF_FILE\"`." >> "$FRONT"
else
  paragraph "Never fully scanned." >> "$FRONT"
fi
REF_FILE="$HWBACKUP_DB/.last-check"
if [ -r "$REF_FILE" ]; then
  paragraph "Last full check on `file_date \"$REF_FILE\"` at `file_time \"$REF_FILE\"`." >> "$FRONT"
else
  paragraph "Never fully checked." >> "$FRONT"
fi

title 2 "Clients" >> "$FRONT"
for client in $CLIENTS; do
  title 3 "$client" >> "$FRONT"
  REF_FILE="$HWBACKUP_DB/$client/.last-backup"
  if [ -r "$REF_FILE" ]; then
    paragraph "Last full backup on `file_date \"$REF_FILE\"` at `file_time \"$REF_FILE\"`." >> "$FRONT"
  else
    paragraph "Never fully backed up." >> "$FRONT"
  fi
done
footer >> "$FRONT"
