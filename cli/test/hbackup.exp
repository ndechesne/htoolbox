Version
HBackup (c) 2006-2010 Hervé Fache version 1.1c
Help
HBackup (c) 2006-2010 Hervé Fache
  -h,  --help
    Displays usage information and exits.

  --version
    Displays version information and exits.

  --,  --ignore_rest
    Ignores the rest of the labeled arguments following this flag.

  -c <file name>,  --config <file name>
    Specify configuration file

  -C <client>,  --client <client>  (accepted multiple times)
    Specify client name

  -d,  --debug
    Print debug information

  -D <UNIX epoch>,  --date <UNIX epoch>
    Specify date

  -f,  --fix
    Fix backup database

  -H,  --hardlinks
    Create hierarchy of hard links

  -i,  --initialize
    Initialize if needed

  -l,  --list
    List available data

  -L,  --symlinks
    Create hierarchy of symlinks

  -N,  --nolog
    Do not create a log file

  -P <path>,  --path <path>
    Specify path

  -q,  --quiet
    Be quiet

  -Q,  --veryquiet
    Do not even print warnings

  -r <directory>,  --restore <directory>
    Restore to directory

  -s,  --scan
    Scan DB for missing data

  -t,  --check
    Check DB for corrupted data

  -u,  --user
    Perform user-mode backup

  -v,  --verbose
    Be verbose about actions

Error
Error: -! -- Couldn't find match for argument
HBackup (c) 2006-2010 Hervé Fache
  -h,  --help
    Displays usage information and exits.

  --version
    Displays version information and exits.

  --,  --ignore_rest
    Ignores the rest of the labeled arguments following this flag.

  -c <file name>,  --config <file name>
    Specify configuration file

  -C <client>,  --client <client>  (accepted multiple times)
    Specify client name

  -d,  --debug
    Print debug information

  -D <UNIX epoch>,  --date <UNIX epoch>
    Specify date

  -f,  --fix
    Fix backup database

  -H,  --hardlinks
    Create hierarchy of hard links

  -i,  --initialize
    Initialize if needed

  -l,  --list
    List available data

  -L,  --symlinks
    Create hierarchy of symlinks

  -N,  --nolog
    Do not create a log file

  -P <path>,  --path <path>
    Specify path

  -q,  --quiet
    Be quiet

  -Q,  --veryquiet
    Do not even print warnings

  -r <directory>,  --restore <directory>
    Restore to directory

  -s,  --scan
    Scan DB for missing data

  -t,  --check
    Check DB for corrupted data

  -u,  --user
    Perform user-mode backup

  -v,  --verbose
    Be verbose about actions

List clients (missing DB path)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Error: Given DB path does not exist 'test_db'
List clients (empty DB path)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Error: Given DB path does not contain a database 'test_db'
Backup, DB missing
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Backing up in server mode
Error: Given DB path does not exist 'test_db'
Typical backup, initialize DB
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Backing up in server mode
Database initialized in 'test_db'
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
Register created for 'aClient.vista'
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
Ad      C:/Test Dir/My Dir
My Dir\r
Checking data, sizes: f=2 z=22 (22)
Adding uncompressed data for b026324c6904b2a9cb4b88d6d61c81d1-0
Backup::addHash(b026324c6904b2a9cb4b88d6d61c81d1)
Af f    C:/Test Dir/My Dir/a File.TXT
Checking data, sizes: f=2 z=22 (22)
Adding uncompressed data for 26ab0db90d72e28ad0ba1e22ee510510-0
Backup::addHash(26ab0db90d72e28ad0ba1e22ee510510)
Af f    C:/Test Dir/My Dir/another File.TXT
Checking data, sizes: f=0 z=20 (20)
Adding uncompressed data for d41d8cd98f00b204e9800998ecf8427e-0
Backup::addHash(d41d8cd98f00b204e9800998ecf8427e)
Af f    C:/Test Dir/My File.TXT
Register modified for 'aClient.vista'
Database closed for 'aClient.vista'
Backup::add(test_db/aClient.vista)
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Register created for 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
Ad      C:/Test Dir/My Dir
My Dir\r
Checking data, sizes: f=2 z=22 (22)
Af ~    C:/Test Dir/My Dir/a File.TXT
Checking data, sizes: f=2 z=22 (22)
Af ~    C:/Test Dir/My Dir/another File.TXT
Checking data, sizes: f=0 z=20 (20)
Af ~    C:/Test Dir/My File.TXT
Register modified for 'client.xp'
Database closed for 'client.xp'
Backup::add(test_db/client.xp)
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> No error if same file fails copy again
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Register created for 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
Checking data, sizes: f=0 z=20 (20)
Af ~    /home/User/test/File2.txt
Ad      /home/User/test/dir
dir\r
Checking data, sizes: f=2 z=22 (22)
Adding uncompressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
Backup::addHash(6d7fce9fee471194aa8b5b6e47267f03)
Af f    /home/User/test/dir/file3.txt
Register modified for 'myClient'
Database closed for 'myClient'
Backup::add(test_db/myClient)
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Register created for 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
Ad      C:/Test Dir/My Dir
My Dir\r
Checking data, sizes: f=2 z=22 (22)
Af ~    C:/Test Dir/My Dir/a File.TXT
Checking data, sizes: f=2 z=22 (22)
Af ~    C:/Test Dir/My Dir/another File.TXT
Checking data, sizes: f=0 z=20 (20)
Af ~    C:/Test Dir/My File.TXT
Register modified for 'myClient.xp'
Database closed for 'myClient.xp'
Backup::add(test_db/myClient.xp)
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> No error if same file fails copy again
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Register created for 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
File copy progress:   1.0%\r
File copy progress:   2.0%\r
File copy progress:   2.9%\r
File copy progress:   3.9%\r
File copy progress:   4.9%\r
File copy progress:   5.9%\r
File copy progress:   6.8%\r
File copy progress:   7.8%\r
File copy progress:   8.8%\r
File copy progress:   9.8%\r
File copy progress:  10.7%\r
File copy progress:  11.7%\r
File copy progress:  12.7%\r
File copy progress:  13.7%\r
File copy progress:  14.6%\r
File copy progress:  15.6%\r
File copy progress:  16.6%\r
File copy progress:  17.6%\r
File copy progress:  18.6%\r
File copy progress:  19.5%\r
File copy progress:  20.5%\r
File copy progress:  21.5%\r
File copy progress:  22.5%\r
File copy progress:  23.4%\r
File copy progress:  24.4%\r
File copy progress:  25.4%\r
File copy progress:  26.4%\r
File copy progress:  27.3%\r
File copy progress:  28.3%\r
File copy progress:  29.3%\r
File copy progress:  30.3%\r
File copy progress:  31.2%\r
File copy progress:  32.2%\r
File copy progress:  33.2%\r
File copy progress:  34.2%\r
File copy progress:  35.2%\r
File copy progress:  36.1%\r
File copy progress:  37.1%\r
File copy progress:  38.1%\r
File copy progress:  39.1%\r
File copy progress:  40.0%\r
File copy progress:  41.0%\r
File copy progress:  42.0%\r
File copy progress:  43.0%\r
File copy progress:  43.9%\r
File copy progress:  44.9%\r
File copy progress:  45.9%\r
File copy progress:  46.9%\r
File copy progress:  47.9%\r
File copy progress:  48.8%\r
File copy progress:  49.8%\r
File copy progress:  50.8%\r
File copy progress:  51.8%\r
File copy progress:  52.7%\r
File copy progress:  53.7%\r
File copy progress:  54.7%\r
File copy progress:  55.7%\r
File copy progress:  56.6%\r
File copy progress:  57.6%\r
File copy progress:  58.6%\r
File copy progress:  59.6%\r
File copy progress:  60.5%\r
File copy progress:  61.5%\r
File copy progress:  62.5%\r
File copy progress:  63.5%\r
File copy progress:  64.5%\r
File copy progress:  65.4%\r
File copy progress:  66.4%\r
File copy progress:  67.4%\r
File copy progress:  68.4%\r
File copy progress:  69.3%\r
File copy progress:  70.3%\r
File copy progress:  71.3%\r
File copy progress:  72.3%\r
File copy progress:  73.2%\r
File copy progress:  74.2%\r
File copy progress:  75.2%\r
File copy progress:  76.2%\r
File copy progress:  77.1%\r
File copy progress:  78.1%\r
File copy progress:  79.1%\r
File copy progress:  80.1%\r
File copy progress:  81.1%\r
File copy progress:  82.0%\r
File copy progress:  83.0%\r
File copy progress:  84.0%\r
File copy progress:  85.0%\r
File copy progress:  85.9%\r
File copy progress:  86.9%\r
File copy progress:  87.9%\r
File copy progress:  88.9%\r
File copy progress:  89.8%\r
File copy progress:  90.8%\r
File copy progress:  91.8%\r
File copy progress:  92.8%\r
File copy progress:  93.8%\r
File copy progress:  94.7%\r
File copy progress:  95.7%\r
File copy progress:  96.7%\r
File copy progress:  97.7%\r
File copy progress:  98.6%\r
File copy progress:  99.6%\r
File copy progress: 100.0%\r
Checking data, sizes: f=10485760 z=10208 (10367)
Adding compressed data for f1c9645dbc14efddc7d8a322685f26eb-0
Backup::addHash(f1c9645dbc14efddc7d8a322685f26eb)
Af z    test1/big_file
Ad      test1/cvs
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
Ad      test1/cvs/CVS
cvs/CVS\r
Adding uncompressed data for f899d6f61138a37484c8a2294656e903-0
Backup::addHash(f899d6f61138a37484c8a2294656e903)
Af f    test1/cvs/CVS/Entries
Checking data, sizes: f=16 z=36 (36)
Adding uncompressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
Backup::addHash(b90f8fa56ea1d39881d4a199c7a81d35)
Af f    test1/cvs/CVS/Root
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
Ad      test1/cvs/dir space
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
Ad      test1/cvs/dir space/CVS
cvs/dir space/CVS\r
Adding uncompressed data for 662ae0524981c10b4736be799fc8650a-0
Backup::addHash(662ae0524981c10b4736be799fc8650a)
Af f    test1/cvs/dir space/CVS/Entries
Checking data, sizes: f=16 z=36 (36)
Adding uncompressed data for 328b42839732650180b213aadebe494d-0
Backup::addHash(328b42839732650180b213aadebe494d)
Af f    test1/cvs/dir space/CVS/Root
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/cvs/dir space/file space
Ad      test1/cvs/dirbad
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
Ad      test1/cvs/dirutd
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
Ad      test1/cvs/dirutd/CVS
cvs/dirutd/CVS\r
Adding uncompressed data for 5252f242d27b8c2c9fdbdcbb33545d07-0
Backup::addHash(5252f242d27b8c2c9fdbdcbb33545d07)
Af f    test1/cvs/dirutd/CVS/Entries
Checking data, sizes: f=10 z=30 (30)
Adding uncompressed data for eb75fb33b2019ef3c840eb5ccdc2e795-0
Backup::addHash(eb75fb33b2019ef3c840eb5ccdc2e795)
Af f    test1/cvs/dirutd/CVS/Root
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/cvs/dirutd/fileutd
If f    test1/cvs/filemod.o
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/cvs/filenew.c
If p    test1/cvs/fileoth
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/cvs/fileutd.h
Ad      test1/dir space
dir space\r
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/dir space/file space
Al      test1/dir space/link space
Al      test1/longlink
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/strange1TAB	CR\r

Checking data, sizes: f=0 z=20 (20)
Af ~    test1/strange2TAB	LF
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/strange3TAB	LF
CR\r

Id f    test1/subdir
Ad      test1/svn
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
Ad      test1/svn/.svn
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Checking data, sizes: f=602 z=260 (264)
Adding compressed data for 5173c1e86196c05c124452a401e92a22-0
Backup::addHash(5173c1e86196c05c124452a401e92a22)
Af z    test1/svn/.svn/entries
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
Ad      test1/svn/dir space
svn/dir space\r
Ad      test1/svn/dir space/.svn
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Checking data, sizes: f=278 z=189 (191)
Adding compressed data for f2b4c9d3f0830dea53972d208979feb0-0
Backup::addHash(f2b4c9d3f0830dea53972d208979feb0)
Af z    test1/svn/dir space/.svn/entries
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/svn/dir space/file space
Ad      test1/svn/dirbad
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
Ad      test1/svn/dirutd
svn/dirutd\r
Ad      test1/svn/dirutd/.svn
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Checking data, sizes: f=388 z=211 (214)
Adding compressed data for 33b426a9cdc8a98729e5dbe6d5feb619-0
Backup::addHash(33b426a9cdc8a98729e5dbe6d5feb619)
Af z    test1/svn/dirutd/.svn/entries
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
Checking data, sizes: f=2 z=22 (22)
Af ~    test1/svn/dirutd/fileutd
If f    test1/svn/filemod.o
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/svn/filenew.c
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/test space
Ad      test1/testdir
testdir\r
Checking data, sizes: f=13 z=33 (33)
Adding uncompressed data for 59ca0efa9f5633cb0371bbc0355478d8-0
Backup::addHash(59ca0efa9f5633cb0371bbc0355478d8)
Af f    test1/testfile
If f    test1/testfile~
Al      test1/testlink
Ap      test1/testpipe
Backing up path 'test2'
Ad      test2/testdir
testdir\r
File copy progress:  70.4%\r
File copy progress: 100.0%\r
Checking data, sizes: f=145408 z=176 (178)
Adding compressed data for 3d546a1ce46c6ae10ad34ab8a81c542e-0
Backup::addHash(3d546a1ce46c6ae10ad34ab8a81c542e)
Af z    test2/testfile
File copy progress:  39.5%\r
File copy progress:  79.1%\r
File copy progress: 100.0%\r
Checking data, sizes: f=259072 z=286 (290)
Adding compressed data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
Backup::addHash(fb00cd74a5f35e89a7fbdd3c1d05375a)
Af z    test2/testfile2
File copy progress:  70.4%\r
File copy progress: 100.0%\r
Checking data, sizes: f=145461 z=145504 (147777)
Adding uncompressed data for f81f70dceaca8b0cec354f33fa3f0909-0
Backup::addHash(f81f70dceaca8b0cec354f33fa3f0909)
Af f    test2/testfile2.gz
If f    test2/testfile~
Al      test2/testlink
Register modified for 'myhost'
Database closed for 'myhost'
Backup::add(test_db/myhost)
Trying client 'newClient' using protocol 'ssh'
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah test_db/.mount/newClient
 -> Reading client configuration file for 'newClient'
 -> Client: newClient
 --> Protocol: ssh
 --> Options: username=user, password=p4sS?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/Blah/test
 ----> No error if same file fails copy again
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'newClient'
Register created for 'newClient'
Database open r/w for 'newClient'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/.mount/newClient
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah/test test_db/.mount/newClient
Checking data, sizes: f=5 z=25 (25)
Adding uncompressed data for b8bbb1294db5d59366b7d1827e2158d6-0
Backup::addHash(b8bbb1294db5d59366b7d1827e2158d6)
Af f    /home/Blah/test/File2.txt
Ad      /home/Blah/test/dir
dir\r
Checking data, sizes: f=5 z=25 (25)
Adding uncompressed data for 8a61083e712200a30c6ccf5f5c697b76-0
Backup::addHash(8a61083e712200a30c6ccf5f5c697b76)
Af f    /home/Blah/test/dir/file3.txt
Register modified for 'newClient'
Database closed for 'newClient'
Backup::add(test_db/newClient)
 -> fusermount -u test_db/.mount/newClient
Trying client 'other' using protocol 'none'
Error: Protocol not supported 'none' for 'other'
Database closed
Specify clients
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> client.xp
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Backing up in server mode
Database open in read/write mode
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Reading list of problematic checksums
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> No error if same file fails copy again
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Id f    test1/subdir
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
svn/dir space\r
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
If f    test1/testfile~
Backing up path 'test2'
testdir\r
If f    test2/testfile~
Database closed for 'myhost'
Database closed
User-mode backup
Backup::Backup(test_user/.hbackup/.backup)
 -> No file logging
 -> DB path: 'test_user/.hbackup'
 -> DB compression: later
 -> Selected clients:
 --> localhost
 -> Clients:
 --> Client: localhost
 ---> Protocol: file
 ---> Config: test_user/.hbackup/config
 ---> Expiry: none
Backing up in user mode
Database initialized in 'test_user/.hbackup'
Database open in read/write mode
 -> Reading client configuration file for 'localhost'
 -> Client: localhost
 --> Protocol: file
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Config: test_user/.hbackup/config
 --> Expiry: none
 --> Paths:
 ---> Path: test_user/testuser
 ----> No error if same file fails copy again
Reading list of problematic checksums
Register created for 'localhost'
Database open r/w for 'localhost'
Backing up path 'test_user/testuser'
Adding uncompressed data for 31d30eea8d0968d6458e0ad0027c9f80-0
Backup::addHash(31d30eea8d0968d6458e0ad0027c9f80)
Af f    test_user/testuser/f1.txt
Ad      test_user/testuser/subdir
subdir\r
Adding uncompressed data for dbbf8220893d497d403bb9cdf49db7a4-0
Backup::addHash(dbbf8220893d497d403bb9cdf49db7a4)
Af f    test_user/testuser/subdir/f2.txt
Ad      test_user/testuser/subdir2
subdir2\r
Adding uncompressed data for d5b4c7d9b06b60a7846c4529834c9812-0
Backup::addHash(d5b4c7d9b06b60a7846c4529834c9812)
Af f    test_user/testuser/subdir2/f3.txt
Adding uncompressed data for 90e2a51705594d033a3abe9d77b2b7ad-0
Backup::addHash(90e2a51705594d033a3abe9d77b2b7ad)
Af f    test_user/testuser/subdir2/f4.txt
Register modified for 'localhost'
Database closed for 'localhost'
Backup::add(test_user/.hbackup/localhost)
Database closed
User-mode backup: upper verbosity level
Backing up in user mode
Database open in read/write mode
Reading list of problematic checksums
Register created for 'localhost'
Database open r/w for 'localhost'
Backing up path 'test_user/testuser'
Af ~    test_user/testuser/f1.txt
Ad      test_user/testuser/subdir
subdir\r
Af ~    test_user/testuser/subdir/f2.txt
Ad      test_user/testuser/subdir2
subdir2\r
Af ~    test_user/testuser/subdir2/f3.txt
Af ~    test_user/testuser/subdir2/f4.txt
Register modified for 'localhost'
Database closed for 'localhost'
Database closed
User-mode backup: standard verbosity level
Backing up in user mode
Register created for 'localhost'
Backing up path 'test_user/testuser'
Af ~    test_user/testuser/f1.txt
Ad      test_user/testuser/subdir
Af ~    test_user/testuser/subdir/f2.txt
Ad      test_user/testuser/subdir2
Af ~    test_user/testuser/subdir2/f3.txt
Af ~    test_user/testuser/subdir2/f4.txt
User-mode backup: quiet
User-mode backup: very quiet
Fix DB
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Fixing database
Database open in read/write mode
Database closed
Scan DB
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Scanning database
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List contains 39 checksum(s)
List contains 20 unique checksum(s)
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
328b42839732650180b213aadebe494d-0 16\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
59ca0efa9f5633cb0371bbc0355478d8-0 13\r
662ae0524981c10b4736be799fc8650a-0 45\r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
8a61083e712200a30c6ccf5f5c697b76-0 5\r
b026324c6904b2a9cb4b88d6d61c81d1-0 2\r
b8bbb1294db5d59366b7d1827e2158d6-0 5\r
b90f8fa56ea1d39881d4a199c7a81d35-0 16\r
d41d8cd98f00b204e9800998ecf8427e-0 0 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 20 valid and 0 broken data file(s)     
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Database closed
Check DB
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Checking database
Database open in read-only mode
Crawling through DB data
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
328b42839732650180b213aadebe494d-0 16\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
59ca0efa9f5633cb0371bbc0355478d8-0 13\r
662ae0524981c10b4736be799fc8650a-0 45\r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
8a61083e712200a30c6ccf5f5c697b76-0 5\r
b026324c6904b2a9cb4b88d6d61c81d1-0 2\r
b8bbb1294db5d59366b7d1827e2158d6-0 5\r
b90f8fa56ea1d39881d4a199c7a81d35-0 16\r
d41d8cd98f00b204e9800998ecf8427e-0 0 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
File copy progress:  70.4%                \r
File copy progress: 100.0%\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461\r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 20 valid and 0 broken data file(s)     
Database closed
List clients
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Showing list
Database open in read-only mode
Database closed
	aClient.vista
	client.xp
	myClient
	myClient.xp
	myhost
	newClient
List paths in myhost
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Showing list
Database open in read-only mode
Database open r-o for 'myhost'
Database closed for 'myhost'
Database closed
	test1/
	test2/
List paths in myhost under test2/
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Showing list
Database open in read-only mode
Database open r-o for 'myhost'
Database closed for 'myhost'
Database closed
	test2/testdir/
	test2/testfile
	test2/testfile2
	test2/testfile2.gz
	test2/testlink
List paths in myhost under test1/cvs
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Showing list
Database open in read-only mode
Database open r-o for 'myhost'
Database closed for 'myhost'
Database closed
	test1/cvs/CVS/
	test1/cvs/dir space/
	test1/cvs/dirbad/
	test1/cvs/dirutd/
	test1/cvs/filenew.c
	test1/cvs/fileutd.h
List paths in both myhost and aClient.vista
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> aClient.vista
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Showing list
Database open in read-only mode
Database open r-o for 'aClient.vista'
Database closed for 'aClient.vista'
Database open r-o for 'myhost'
Database closed for 'myhost'
Database closed
	C:/
	test1/
	test2/
List paths in dual-boot client myClient
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> myClient
 --> myClient.xp
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Showing list
Database open in read-only mode
Database open r-o for 'myClient'
Database closed for 'myClient'
Database open r-o for 'myClient.xp'
Database closed for 'myClient.xp'
Database closed
	/home/
	C:/
List paths in all clients
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> aClient.vista
 --> client.xp
 --> myClient
 --> myClient.xp
 --> myhost
 --> newClient
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Showing list
Database open in read-only mode
Database open r-o for 'aClient.vista'
Database closed for 'aClient.vista'
Database open r-o for 'client.xp'
Database closed for 'client.xp'
Database open r-o for 'myClient'
Database closed for 'myClient'
Database open r-o for 'myClient.xp'
Database closed for 'myClient.xp'
Database open r-o for 'myhost'
Database closed for 'myhost'
Database open r-o for 'newClient'
Database closed for 'newClient'
Database closed
	C:/
	C:/
	/home/
	C:/
	test1/
	test2/
	/home/
Restore a file
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Restoring
Database open in read-only mode
Database open r-o for 'myhost'
U       test_r/test2/testfile
Database closed for 'myhost'
Database closed
Restore all data in a client/dir path that's not by itself in DB
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Restoring
Database open in read-only mode
Database open r-o for 'myhost'
U       test_r/test1/big_file
U       test_r/test1/cvs
U       test_r/test1/cvs/CVS
U       test_r/test1/cvs/CVS/Entries
U       test_r/test1/cvs/CVS/Root
U       test_r/test1/cvs/dir space
U       test_r/test1/cvs/dir space/CVS
U       test_r/test1/cvs/dir space/CVS/Entries
U       test_r/test1/cvs/dir space/CVS/Root
U       test_r/test1/cvs/dir space/file space
U       test_r/test1/cvs/dirbad
U       test_r/test1/cvs/dirutd
U       test_r/test1/cvs/dirutd/CVS
U       test_r/test1/cvs/dirutd/CVS/Entries
U       test_r/test1/cvs/dirutd/CVS/Root
U       test_r/test1/cvs/dirutd/fileutd
U       test_r/test1/cvs/filenew.c
U       test_r/test1/cvs/fileutd.h
U       test_r/test1/dir space
U       test_r/test1/dir space/file space
U       test_r/test1/dir space/link space
U       test_r/test1/longlink
U       test_r/test1/strange1TAB	CR\r

U       test_r/test1/strange2TAB	LF
U       test_r/test1/strange3TAB	LF
CR\r

U       test_r/test1/svn
U       test_r/test1/svn/.svn
U       test_r/test1/svn/.svn/entries
U       test_r/test1/svn/dir space
U       test_r/test1/svn/dir space/.svn
U       test_r/test1/svn/dir space/.svn/entries
U       test_r/test1/svn/dir space/file space
U       test_r/test1/svn/dirbad
U       test_r/test1/svn/dirutd
U       test_r/test1/svn/dirutd/.svn
U       test_r/test1/svn/dirutd/.svn/entries
U       test_r/test1/svn/dirutd/fileutd
U       test_r/test1/svn/filenew.c
U       test_r/test1/test space
U       test_r/test1/testdir
U       test_r/test1/testfile
U       test_r/test1/testlink
U       test_r/test1/testpipe
Database closed for 'myhost'
Database closed
Restore all data in a client/dir path
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Restoring
Database open in read-only mode
Database open r-o for 'myhost'
U       test_r/test1/cvs
U       test_r/test1/cvs/CVS
U       test_r/test1/cvs/CVS/Entries
U       test_r/test1/cvs/CVS/Root
U       test_r/test1/cvs/dir space
U       test_r/test1/cvs/dir space/CVS
U       test_r/test1/cvs/dir space/CVS/Entries
U       test_r/test1/cvs/dir space/CVS/Root
U       test_r/test1/cvs/dir space/file space
U       test_r/test1/cvs/dirbad
U       test_r/test1/cvs/dirutd
U       test_r/test1/cvs/dirutd/CVS
U       test_r/test1/cvs/dirutd/CVS/Entries
U       test_r/test1/cvs/dirutd/CVS/Root
U       test_r/test1/cvs/dirutd/fileutd
U       test_r/test1/cvs/filenew.c
U       test_r/test1/cvs/fileutd.h
Database closed for 'myhost'
Database closed
Restore all data in a client
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
Database open in read-only mode
Database closed
 -> Log path: 'hbackup.log'
 --> Max lines per log: 100000
 --> Backup(s): 10
 --> Level: verbose
 -> DB path: 'test_db'
 -> DB compression: automatic
 -> Parser plugins paths:
 --> ../../../parsers/.libs
 -> Parsers found:
 --> cvs (CVS)
 --> svn (Subversion)
 -> Selected clients:
 --> myhost
 -> Clients:
 --> Client: aClient
 ---> Required subset: vista
 ---> Protocol: smb
 ---> Expiry: none
 ---> Filter: and huge_file
 ----> Condition: not filter backup
 ----> Condition: not size< 100
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: C:/Test Dir
 -----> No error if same file fails copy again
 -----> Filter: and compress_m
 ------> Condition: not filter huge_file
 -----> Ignore filters:
 ------> nothing
 ------> backup
 -----> Compress filter: compress_m
 -----> Parser: Subversion
 --> Client: client
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Hostname: myClient
 ---> Options: username=Myself, password=flesyM, nocase
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 ----> backup
 --> Client: myClient
 ---> Protocol: nfs
 ---> Users: backup, root
 ---> Config: /home/User/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myClient
 ---> Required subset: xp
 ---> Protocol: smb
 ---> Users: backup
 ---> Config: C:/Backup/Backup.LST
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: myhost
 ---> Protocol: file
 ---> Hostname: myhost.mynetwork.lan
 ---> No warning on time out
 ---> Config: etc/localhost.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> No error if same file fails copy again
 ---> Ignore filters:
 ----> nothing
 --> Client: newClient
 ---> Protocol: ssh
 ---> Options: username=user, password=p4sS?
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: none
 ---> Ignore filters:
 ----> nothing
 --> Client: other
 ---> Protocol: none
 ---> Hostname: otherClient
 ---> Options: username=foo, password=bar
 ---> Config: /home/Blah/hbackup.list
 ---> Expiry: 86400 second(s) / 1 day(s)
 ---> Filter: and subdir
 ----> Condition: path_start subdir
 ----> Condition: not size< 100
 ---> Filter: and bigfile
 ----> Condition: size>= 10
 ----> Condition: type f
 ---> Ignore filters:
 ----> nothing
 ---> Paths:
 ----> Path: test1
 -----> Filter: and not_object
 ------> Condition: not path_end .o
 -----> Filter: or to_be_ignored
 ------> Condition: filter subdir
 ------> Condition: filter backup
 ------> Condition: not filter not_object
 -----> Ignore filters:
 ------> nothing
 ------> to_be_ignored
 -----> Compress filter: bigfile
 -----> Parser: CVS
 -----> Parser: Subversion
 ----> Path: test2
 -----> Ignore filters:
 ------> nothing
 -> Filter: and nothing
 --> Condition: type p
 --> Condition: size> 10
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
 -> Filter: or test_or
 --> Condition: filter backup
 --> Condition: not size< 1000
 -> Ignore filters:
 --> nothing
Restoring
Database open in read-only mode
Database open r-o for 'myhost'
U       test_r/test1/big_file
U       test_r/test1/cvs
U       test_r/test1/cvs/CVS
U       test_r/test1/cvs/CVS/Entries
U       test_r/test1/cvs/CVS/Root
U       test_r/test1/cvs/dir space
U       test_r/test1/cvs/dir space/CVS
U       test_r/test1/cvs/dir space/CVS/Entries
U       test_r/test1/cvs/dir space/CVS/Root
U       test_r/test1/cvs/dir space/file space
U       test_r/test1/cvs/dirbad
U       test_r/test1/cvs/dirutd
U       test_r/test1/cvs/dirutd/CVS
U       test_r/test1/cvs/dirutd/CVS/Entries
U       test_r/test1/cvs/dirutd/CVS/Root
U       test_r/test1/cvs/dirutd/fileutd
U       test_r/test1/cvs/filenew.c
U       test_r/test1/cvs/fileutd.h
U       test_r/test1/dir space
U       test_r/test1/dir space/file space
U       test_r/test1/dir space/link space
U       test_r/test1/longlink
U       test_r/test1/strange1TAB	CR\r

U       test_r/test1/strange2TAB	LF
U       test_r/test1/strange3TAB	LF
CR\r

U       test_r/test1/svn
U       test_r/test1/svn/.svn
U       test_r/test1/svn/.svn/entries
U       test_r/test1/svn/dir space
U       test_r/test1/svn/dir space/.svn
U       test_r/test1/svn/dir space/.svn/entries
U       test_r/test1/svn/dir space/file space
U       test_r/test1/svn/dirbad
U       test_r/test1/svn/dirutd
U       test_r/test1/svn/dirutd/.svn
U       test_r/test1/svn/dirutd/.svn/entries
U       test_r/test1/svn/dirutd/fileutd
U       test_r/test1/svn/filenew.c
U       test_r/test1/test space
U       test_r/test1/testdir
U       test_r/test1/testfile
U       test_r/test1/testlink
U       test_r/test1/testpipe
U       test_r/test2/testdir
U       test_r/test2/testfile
U       test_r/test2/testfile2
U       test_r/test2/testfile2.gz
File copy progress:  70.4%\r
File copy progress: 100.0%\r
U       test_r/test2/testlink
Database closed for 'myhost'
Database closed
Broken configuration
 -> Reading configuration file 'etc/broken.conf'
Backup::Backup(test_db/.backup)
Error: Keyword 'db' redefined in 'blah'
Error: after line 0: need at most 1 occurence(s) of keyword 'db'
Error: after line 0: need at most 1 occurence(s) of keyword 'report_copy_error_once'
Error: at line 7: keyword 'filter' requires 2 parameter(s), found 1
Error: after line 11: missing keyword 'condition'
Error: after line 13: need at most 1 occurence(s) of keyword 'ignore'
Error: at line 15: keyword 'users' requires at least 1 parameter(s), found 0
Error: at line 17: keyword 'ignore' requires 1 parameter(s), found 0
Error: after line 19: need at most 1 occurence(s) of keyword 'config'
Error: after line 19: need at most 1 occurence(s) of keyword 'expire'
Error: after line 19: need at most 1 occurence(s) of keyword 'hostname'
Error: at line 23: keyword 'option' requires at most 2 parameter(s), found 3
Error: at line 24: keyword 'option' requires at least 1 parameter(s), found 0
Error: at line 32: keyword 'filter' requires 2 parameter(s), found 3
Error: at line 33: keyword 'condition' requires 2 parameter(s), found 3
Error: at line 34: keyword 'condition' requires 2 parameter(s), found 1
Error: at line 37: keyword 'expire' requires 1 parameter(s), found 2
Error: after line 41: need at most 1 occurence(s) of keyword 'compress'
Error: after line 41: need at most 1 occurence(s) of keyword 'ignore'
Error: after line 51: missing keyword 'condition'
Error: at line 53: keyword 'filter' requires 2 parameter(s), found 1
Error: after line 53: missing keyword 'condition'
Error: after line 65: missing keyword 'protocol'
Error: at line 71: keyword 'ignore' requires 1 parameter(s), found 2
Error: at line 72: keyword 'compress' requires 1 parameter(s), found 2
Error: at line 85: keyword 'ignore' requires 1 parameter(s), found 0
Error: at line 86: keyword 'compress' requires 1 parameter(s), found 0
Error: at line 88: keyword 'what_the_f...?' incorrect or misplaced, aborting
