no thread limit
activity callback(idle): user = 'user_string'
sched.thread created
sched.loop enter
sched.queue has data (0/0)
sched.1 starting
sched.loop thread 1 created
sched.loop: becoming busy (1/1)
activity callback(busy): user = 'user_string'
sched.loop enter
sched.1.loop enter
sched.1.loop has data
task enter: data = 'data1' user = 'user1'
sched.queue has data (1/1)
sched.2 starting
sched.loop thread 2 created
sched.loop: remaining busy (2/2)
sched.loop enter
sched.2.loop enter
sched.2.loop has data
task enter: data = 'data2' user = 'user1'
2 thread(s)
sched.loop queue closed
sched.loop wait for busy thread(s) (2/2)
task exit: data = 'tata1'
sched.1.loop enter
sched.loop: closing but busy (1/2)
sched.loop stop idle thread 1 (1/2)
sched.1 stopping
sched.1.loop exit
sched.1 joined
sched.loop wait for busy thread(s) (1/1)
task exit: data = 'tata2'
sched.2.loop enter
sched.loop: closing and idle (0/1)
activity callback(idle): user = 'user_string'
sched.loop stop idle thread 2 (0/1)
sched.2 stopping
sched.2.loop exit
sched.2 joined
sched.loop exit
sched.thread joined
out queue:
  'tata1'
  'tata2'
thread limit = 1
activity callback(idle): user = 'user_string'
sched.thread created
sched.loop enter
sched.queue has data (0/0)
sched.1 starting
sched.loop thread 1 created
sched.loop: becoming busy (1/1)
activity callback(busy): user = 'user_string'
sched.loop enter
sched.1.loop enter
sched.1.loop has data
task enter: data = 'data1' user = 'user2'
sched.queue has data (1/1)
sched.loop wait for a thread to get idle
1 thread(s)
task exit: data = 'tata1'
sched.1.loop enter
sched.loop: remaining busy (1/1)
sched.loop enter
sched.loop: signalled but busy (1/1)
sched.loop enter
sched.loop queue closed
sched.loop wait for busy thread(s) (1/1)
sched.1.loop has data
task enter: data = 'data2' user = 'user2'
task exit: data = 'tata2'
sched.1.loop enter
sched.loop: closing and idle (0/1)
activity callback(idle): user = 'user_string'
sched.loop stop idle thread 1 (0/1)
sched.1 stopping
sched.1.loop exit
sched.1 joined
sched.loop exit
sched.thread joined
out queue:
  'tata1'
  'tata2'
no thread limit, 10 objects
activity callback(idle): user = 'user_string'
sched.thread created
sched.loop enter
sched.queue has data (0/0)
sched.1 starting
sched.loop thread 1 created
sched.loop: becoming busy (1/1)
activity callback(busy): user = 'user_string'
sched.loop enter
sched.1.loop enter
sched.1.loop has data
task enter: data = 'data1' user = 'user3'
sched.queue has data (1/1)
sched.2 starting
sched.loop thread 2 created
sched.loop: remaining busy (2/2)
sched.loop enter
sched.2.loop enter
sched.2.loop has data
task enter: data = 'data2' user = 'user3'
sched.queue has data (2/2)
sched.3 starting
sched.loop thread 3 created
sched.loop: remaining busy (3/3)
sched.loop enter
sched.3.loop enter
sched.3.loop has data
task enter: data = 'data3' user = 'user3'
sched.queue has data (3/3)
sched.4 starting
sched.loop thread 4 created
sched.loop: remaining busy (4/4)
sched.4.loop enter
sched.4.loop has data
task enter: data = 'data4' user = 'user3'
sched.loop enter
task exit: data = 'tata1'
sched.1.loop enter
sched.loop: signalled but busy (3/4)
sched.loop enter
sched.queue has data (3/4)
sched.loop: remaining busy (4/4)
sched.loop enter
sched.1.loop has data
task enter: data = 'data5' user = 'user3'
task exit: data = 'tata2'
sched.2.loop enter
sched.loop: signalled but busy (3/4)
sched.loop enter
sched.queue has data (3/4)
sched.loop: remaining busy (4/4)
sched.loop enter
sched.2.loop has data
task enter: data = 'data6' user = 'user3'
task exit: data = 'tata3'
sched.3.loop enter
sched.loop: signalled but busy (3/4)
sched.loop enter
sched.queue has data (3/4)
sched.loop: remaining busy (4/4)
sched.loop enter
sched.3.loop has data
task enter: data = 'data7' user = 'user3'
task exit: data = 'tata4'
sched.loop: signalled but busy (3/4)
sched.loop enter
sched.queue has data (3/4)
sched.loop: remaining busy (4/4)
sched.loop enter
sched.4.loop enter
sched.4.loop has data
task enter: data = 'data8' user = 'user3'
task exit: data = 'tata5'
sched.1.loop enter
sched.loop: signalled but busy (3/4)
sched.loop enter
sched.queue has data (3/4)
sched.loop: remaining busy (4/4)
sched.loop enter
sched.1.loop has data
task enter: data = 'data9' user = 'user3'
task exit: data = 'tata6'
sched.2.loop enter
sched.loop: signalled but busy (3/4)
sched.loop enter
sched.queue has data (3/4)
sched.loop: remaining busy (4/4)
sched.loop enter
sched.2.loop has data
task enter: data = 'data10' user = 'user3'
4 thread(s)
sched.loop queue closed
sched.loop wait for busy thread(s) (4/4)
task exit: data = 'tata7'
sched.3.loop enter
sched.loop: closing but busy (3/4)
sched.loop stop idle thread 3 (3/4)
sched.3 stopping
sched.3.loop exit
sched.3 joined
sched.loop wait for busy thread(s) (3/3)
task exit: data = 'tata8'
sched.4.loop enter
sched.loop: closing but busy (2/3)
sched.loop stop idle thread 4 (2/3)
sched.4 stopping
sched.4.loop exit
sched.4 joined
sched.loop wait for busy thread(s) (2/2)
task exit: data = 'tata9'
sched.1.loop enter
sched.loop: closing but busy (1/2)
sched.loop stop idle thread 1 (1/2)
sched.1 stopping
sched.1.loop exit
sched.1 joined
sched.loop wait for busy thread(s) (1/1)
task exit: data = 'tata10'
sched.2.loop enter
sched.loop: closing and idle (0/1)
activity callback(idle): user = 'user_string'
sched.loop stop idle thread 2 (0/1)
sched.2 stopping
sched.2.loop exit
sched.2 joined
sched.loop exit
sched.thread joined
out queue:
  'tata1'
  'tata2'
  'tata3'
  'tata4'
  'tata5'
  'tata6'
  'tata7'
  'tata8'
  'tata9'
  'tata10'
