no thread limit
activity callback(idle): user = 'user_string'
sched.loop enter
sched.thread created
sched.loop 0 busy 0 idle 0 total
sched.worker1.thread created
sched.loop enter
sched.worker1.loop enter
sched.worker1.activity_callback: busy
activity callback(busy): user = 'user_string'
task enter: data = 'data1' user = 'user1'
sched.loop 1 busy 0 idle 1 total
sched.worker2.thread created
sched.loop enter
2 thread(s)
sched.queue closed
sched wait for 2 busy worker(s)
sched.worker2.loop enter
sched.worker2.activity_callback: busy
task enter: data = 'data2' user = 'user1'
task exit: data = 'tata1'
sched.worker1.activity_callback: idle, system: 1 busy/2 total
sched.worker1 stopping
sched.worker1.loop enter
sched.worker1.loop exit
sched.worker1 joined
sched wait for 1 busy worker(s)
task exit: data = 'tata2'
sched.worker2.activity_callback: idle, system: 0 busy/1 total
activity callback(idle): user = 'user_string'
sched.worker2 stopping
sched.worker2.loop enter
sched.worker2.loop exit
sched.worker2 joined
sched all worker thread(s) joined
sched.loop exit
sched.thread joined
out queue:
  'tata1'
  'tata2'
thread limit = 1
activity callback(idle): user = 'user_string'
sched.loop enter
sched.thread created
sched.loop 0 busy 0 idle 0 total
sched.worker1.thread created
sched.loop enter
sched.loop 1 busy 0 idle 1 total
sched.loop wait for thread to get idle
1 thread(s)
sched.worker1.loop enter
sched.worker1.activity_callback: busy
activity callback(busy): user = 'user_string'
task enter: data = 'data1' user = 'user2'
task exit: data = 'tata1'
sched.worker1.activity_callback: idle, system: 0 busy/1 total
activity callback(idle): user = 'user_string'
sched.loop enter
sched.queue closed
sched wait for 1 busy worker(s)
sched.worker1.loop enter
sched.worker1.activity_callback: busy
activity callback(busy): user = 'user_string'
task enter: data = 'data2' user = 'user2'
task exit: data = 'tata2'
sched.worker1.activity_callback: idle, system: 0 busy/1 total
activity callback(idle): user = 'user_string'
sched.worker1 stopping
sched.worker1.loop enter
sched.worker1.loop exit
sched.worker1 joined
sched all worker thread(s) joined
sched.loop exit
sched.thread joined
out queue:
  'tata1'
  'tata2'
no thread limit, 10 objects
activity callback(idle): user = 'user_string'
sched.thread created
sched.loop enter
sched.loop 0 busy 0 idle 0 total
sched.worker1.thread created
sched.loop enter
sched.worker1.loop enter
sched.worker1.activity_callback: busy
activity callback(busy): user = 'user_string'
task enter: data = 'data1' user = 'user3'
sched.loop 1 busy 0 idle 1 total
sched.worker2.thread created
sched.loop enter
sched.worker2.loop enter
sched.worker2.activity_callback: busy
task enter: data = 'data2' user = 'user3'
sched.loop 2 busy 0 idle 2 total
sched.worker3.thread created
sched.loop enter
sched.worker3.loop enter
sched.worker3.activity_callback: busy
task enter: data = 'data3' user = 'user3'
sched.loop 3 busy 0 idle 3 total
sched.worker4.thread created
sched.loop enter
sched.worker4.loop enter
sched.worker4.activity_callback: busy
task enter: data = 'data4' user = 'user3'
sched.loop 4 busy 0 idle 4 total
sched.worker5.thread created
sched.loop enter
task exit: data = 'tata1'
sched.worker1.activity_callback: idle, system: 4 busy/5 total
sched.worker5.loop enter
sched.worker5.activity_callback: busy
task enter: data = 'data5' user = 'user3'
sched.loop 4 busy 1 idle 5 total
sched.loop enter
sched.worker1.loop enter
sched.worker1.activity_callback: busy
task enter: data = 'data6' user = 'user3'
task exit: data = 'tata2'
sched.worker2.activity_callback: idle, system: 4 busy/5 total
sched.loop 4 busy 1 idle 5 total
sched.loop enter
sched.worker2.loop enter
sched.worker2.activity_callback: busy
task enter: data = 'data7' user = 'user3'
task exit: data = 'tata3'
sched.worker3.activity_callback: idle, system: 4 busy/5 total
sched.loop 4 busy 1 idle 5 total
sched.loop enter
sched.worker3.loop enter
sched.worker3.activity_callback: busy
task enter: data = 'data8' user = 'user3'
task exit: data = 'tata4'
sched.worker4.activity_callback: idle, system: 4 busy/5 total
sched.loop 4 busy 1 idle 5 total
sched.loop enter
sched.worker4.loop enter
sched.worker4.activity_callback: busy
task enter: data = 'data9' user = 'user3'
task exit: data = 'tata5'
sched.worker5.activity_callback: idle, system: 4 busy/5 total
sched.loop 4 busy 1 idle 5 total
sched.loop enter
task exit: data = 'tata6'
sched.worker1.activity_callback: idle, system: 4 busy/5 total
5 thread(s)
sched.queue closed
sched.worker1 stopping
sched.worker5.loop enter
sched.worker5.activity_callback: busy
task enter: data = 'data10' user = 'user3'
sched.worker1.loop enter
sched.worker1.loop exit
sched.worker1 joined
sched wait for 4 busy worker(s)
task exit: data = 'tata7'
sched.worker2.activity_callback: idle, system: 3 busy/4 total
sched.worker2 stopping
sched.worker2.loop enter
sched.worker2.loop exit
sched.worker2 joined
sched wait for 3 busy worker(s)
task exit: data = 'tata8'
sched.worker3.activity_callback: idle, system: 2 busy/3 total
sched.worker3 stopping
sched.worker3.loop enter
sched.worker3.loop exit
sched.worker3 joined
sched wait for 2 busy worker(s)
task exit: data = 'tata9'
sched.worker4.activity_callback: idle, system: 1 busy/2 total
sched.worker4 stopping
sched.worker4.loop enter
sched.worker4.loop exit
sched.worker4 joined
sched wait for 1 busy worker(s)
task exit: data = 'tata10'
sched.worker5.activity_callback: idle, system: 0 busy/1 total
activity callback(idle): user = 'user_string'
sched.worker5 stopping
sched.worker5.loop enter
sched.worker5.loop exit
sched.worker5 joined
sched all worker thread(s) joined
sched.loop exit
sched.thread joined
out queue:
  'tata1'
  'tata2'
  'tata3'
  'tata4'
  'tata5'
  'tata6'
  'tata7'
  'tata8'
  'tata9'
  'tata10'
