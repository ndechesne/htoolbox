>List 0 client(s):
 --> Client: localhost
>List 1 client(s):
Client: localhost
-> file://localhost etc/doesnotexist
Database initialized in test_db
 -> Database open in read/write mode
Backup client 'localhost' using protocol 'file'
Client configuration file not found etc/doesnotexist
 -> Journal is empty, not merging
 -> Database closed
>List 0 client(s):
 --> Client: myClient
>List 1 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
 --> Client: myClient2
>List 2 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
Client: myClient2
-> smb://myClient C:/Backup/Backup.LST
Options: username=Myself password=flesyM
 --> Client: otherClient
>List 3 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
Client: myClient2
-> smb://myClient C:/Backup/Backup.LST
Options: username=Myself password=flesyM
Client: otherClient
-> ssh://otherClient c:/home/backup/Backup.list
 --> Client: Client
>List 4 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
Client: myClient2
-> smb://myClient C:/Backup/Backup.LST
Options: username=Myself password=flesyM
Client: otherClient
-> ssh://otherClient c:/home/backup/Backup.list
Client: Client
-> smb://Client C:/home/BlaH/Backup.list
Options: username=user iocharset=utf8
 --> Client: Client2
>List 5 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
Client: myClient2
-> smb://myClient C:/Backup/Backup.LST
Options: username=Myself password=flesyM
Client: otherClient
-> ssh://otherClient c:/home/backup/Backup.list
Client: Client
-> smb://Client C:/home/BlaH/Backup.list
Options: username=user iocharset=utf8
Client: Client2
-> smb://Client C:/home/BlaH/Backup.list
Options: nocase username=user password=
 --> Client: Client3
>List 6 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
Client: myClient2
-> smb://myClient C:/Backup/Backup.LST
Options: username=Myself password=flesyM
Client: otherClient
-> ssh://otherClient c:/home/backup/Backup.list
Client: Client
-> smb://Client C:/home/BlaH/Backup.list
Options: username=user iocharset=utf8
Client: Client2
-> smb://Client C:/home/BlaH/Backup.list
Options: nocase username=user password=
Client: Client3
-> smb://Client C:/home/BlaH/Backup.list
Options: username=
 --> Client: Client4
>List 7 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
Client: myClient2
-> smb://myClient C:/Backup/Backup.LST
Options: username=Myself password=flesyM
Client: otherClient
-> ssh://otherClient c:/home/backup/Backup.list
Client: Client
-> smb://Client C:/home/BlaH/Backup.list
Options: username=user iocharset=utf8
Client: Client2
-> smb://Client C:/home/BlaH/Backup.list
Options: nocase username=user password=
Client: Client3
-> smb://Client C:/home/BlaH/Backup.list
Options: username=
Client: Client4
-> smb://Client C:/home/BlaH/Backup.list
Options: username= password=
 -> Database open in read/write mode
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
 --> Path: /home/User/test2
Backup path '/home/User/test'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User/test test_db/mount
A /home/User/test/File2.txt (0 B)
Adding file data to DB in: test_db/data/d41d8cd98f00b204e9800998ecf8427e-0
A /home/User/test/dir
 -> Dir dir
A /home/User/test/dir/file3.txt (2 B)
Adding file data to DB in: test_db/data/6d7fce9fee471194aa8b5b6e47267f03-0
Backup path '/home/User/test2'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User/test2 test_db/mount
A /home/User/test2/File3.txt (0 B)
A /home/User/test2/File4.txt (0 B)
 -> umount test_db/mount
 -> mount -t cifs -o ro,noatime,nocase,username=Myself,password=flesyM //myClient/C$ test_db/mount
Backup client 'myClient2' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
A C:/Test/Dir
 -> Dir Dir
A C:/Test/Dir/a File.TXT (2 B)
Adding file data to DB in: test_db/data/b026324c6904b2a9cb4b88d6d61c81d1-0
A C:/Test/Dir/another File.TXT (2 B)
Adding file data to DB in: test_db/data/26ab0db90d72e28ad0ba1e22ee510510-0
A C:/Test/File.TXT (0 B)
 -> umount test_db/mount
Protocol not supported: ssh
 -> mount -t cifs -o ro,noatime,nocase,username=user,iocharset=utf8 //Client/C$ test_db/mount
Backup client 'Client' using protocol 'smb'
Client configuration file not found test_db/mount/home/BlaH/Backup.list
 -> umount test_db/mount
 -> mount -t cifs -o ro,noatime,nocase,nocase,username=user,password= //Client/C$ test_db/mount
Backup client 'Client2' using protocol 'smb'
Client configuration file not found test_db/mount/home/BlaH/Backup.list
 -> umount test_db/mount
 -> mount -t cifs -o ro,noatime,nocase,username= //Client/C$ test_db/mount
Backup client 'Client3' using protocol 'smb'
Client configuration file not found test_db/mount/home/BlaH/Backup.list
 -> umount test_db/mount
 -> mount -t cifs -o ro,noatime,nocase,username=,password= //Client/C$ test_db/mount
Backup client 'Client4' using protocol 'smb'
Client configuration file not found test_db/mount/home/BlaH/Backup.list
 -> umount test_db/mount
 -> Database closed
 --> Client: testhost
>List 1 client(s):
Client: testhost
-> file://localhost etc/localhost.list
 -> Database open in read/write mode
Backup client 'testhost' using protocol 'file'
 -> Reading client configuration file
 --> client-wide filter and subdir
 ---> condition path_start subdir
 ---> condition not size< 100
 --> client-wide filter and bigfile
 ---> condition size>= 10
 ---> condition type file
 --> expiry 1 day(s)
 --> Path: test2
 --> Path: test1
 --> path-wide filter and not_object
 ---> condition not path_end .o
 --> path-wide filter or to_be_ignored
 ---> condition filter subdir
 ---> condition filter backup
 ---> condition not filter not_object
Backup path 'test1'
A test1/bzr
 -> Dir bzr
A test1/bzr/.bzr
 -> Dir bzr/.bzr
A test1/bzr/dirbad
 -> Dir bzr/dirbad
A test1/bzr/dirbad/fileoth (0 B)
A test1/bzr/dirbad/fileutd (0 B)
A test1/bzr/diroth
 -> Dir bzr/diroth
A test1/bzr/dirutd
 -> Dir bzr/dirutd
A test1/bzr/dirutd/fileoth (0 B)
A test1/bzr/dirutd/fileutd (0 B)
A test1/bzr/filenew.c (0 B)
A test1/bzr/fileoth (0 B)
A test1/bzr/fileutd.h (0 B)
A test1/cvs
 -> Dir cvs
 -> Parsing CVS entries
 --> filenew.c	f	0
 --> filemod.o	f	1159806431
 --> fileutd.h	f	1159985080
 --> dirbad	d	0
 --> dirutd	d	0
A test1/cvs/CVS
 -> Dir cvs/CVS
A test1/cvs/CVS/Entries (161 B)
Adding compressed file data to DB in: test_db/data/fef51838cd3cfe8ed96355742eb71fbd-0
A test1/cvs/CVS/Root (16 B)
Adding compressed file data to DB in: test_db/data/b90f8fa56ea1d39881d4a199c7a81d35-0
A test1/cvs/dirbad
 -> Dir cvs/dirbad
Directory should be under CVS control: test1/cvs/dirbad
A test1/cvs/dirutd
 -> Dir cvs/dirutd
 -> Parsing CVS entries
 --> fileutd	f	1159985080
A test1/cvs/dirutd/CVS
 -> Dir cvs/dirutd/CVS
A test1/cvs/dirutd/CVS/Entries (42 B)
Adding compressed file data to DB in: test_db/data/5252f242d27b8c2c9fdbdcbb33545d07-0
A test1/cvs/dirutd/CVS/Root (10 B)
Adding compressed file data to DB in: test_db/data/eb75fb33b2019ef3c840eb5ccdc2e795-0
A test1/cvs/dirutd/fileutd (0 B)
A test1/cvs/filenew.c (0 B)
A test1/cvs/fileutd.h (0 B)
A test1/dir space
 -> Dir dir space
A test1/dir space/file space (0 B)
A test1/svn
 -> Dir svn
 -> Parsing Subversion entries
 --> filenew.c	m
 --> filemod.o	m
 --> fileoth	i
 --> diroth	o
A test1/svn/.svn
 -> Dir svn/.svn
A test1/svn/.svn/entries (77 B)
Adding compressed file data to DB in: test_db/data/0f2ea973d77135dc3d06c8e68da6dc59-0
A test1/svn/dirbad
 -> Dir svn/dirbad
Directory should be under Subversion control: test1/svn/dirbad
A test1/svn/dirutd
 -> Dir svn/dirutd
 -> Parsing Subversion entries
 --> fileutd	m
 --> fileoth	o
A test1/svn/dirutd/.svn
 -> Dir svn/dirutd/.svn
A test1/svn/dirutd/.svn/entries (30 B)
Adding compressed file data to DB in: test_db/data/8bdef5751e46ed57d237cbe3f4a5061c-0
A test1/svn/dirutd/fileutd (0 B)
A test1/svn/filenew.c (0 B)
A test1/test space (0 B)
A test1/testdir
 -> Dir testdir
A test1/testfile (13 B)
Adding compressed file data to DB in: test_db/data/59ca0efa9f5633cb0371bbc0355478d8-0
A test1/testlink
A test1/testpipe
Backup path 'test2'
A test2/testdir
 -> Dir testdir
A test2/testfile (145 kB)
Adding file data to DB in: test_db/data/3d546a1ce46c6ae10ad34ab8a81c542e-0
A test2/testfile2 (259 kB)
Adding file data to DB in: test_db/data/fb00cd74a5f35e89a7fbdd3c1d05375a-0
A test2/testfile~ (524 kB)
Adding file data to DB in: test_db/data/59071590099d21dd439896592338bf95-0
A test2/testlink
 -> Database closed
 --> Client: testhost
>List 1 client(s):
Client: testhost
-> file://testhost etc/localhost.list
 -> Database open in read/write mode
Backup client 'testhost' using protocol 'file'
 -> Reading client configuration file
 --> client-wide filter and subdir
 ---> condition path_start subdir
 ---> condition not size< 100
 --> client-wide filter and bigfile
 ---> condition size>= 10
 ---> condition type file
 --> expiry 1 day(s)
 --> Path: test2
 --> Path: test1
 --> path-wide filter and not_object
 ---> condition not path_end .o
 --> path-wide filter or to_be_ignored
 ---> condition filter subdir
 ---> condition filter backup
 ---> condition not filter not_object
Backup path 'test1'
 -> Dir bzr
 -> Dir bzr/.bzr
 -> Dir bzr/dirbad
 -> Dir bzr/diroth
 -> Dir bzr/dirutd
 -> Dir cvs
 -> Parsing CVS entries
 --> filenew.c	f	0
 --> filemod.o	f	1159806431
 --> fileutd.h	f	1159985080
 --> dirbad	d	0
 --> dirutd	d	0
 -> Dir cvs/CVS
 -> Dir cvs/dirbad
Directory should be under CVS control: test1/cvs/dirbad
 -> Dir cvs/dirutd
 -> Parsing CVS entries
 --> fileutd	f	1159985080
 -> Dir cvs/dirutd/CVS
 -> Dir dir space
 -> Dir svn
 -> Parsing Subversion entries
 --> filenew.c	m
 --> filemod.o	m
 --> fileoth	i
 --> diroth	o
 -> Dir svn/.svn
 -> Dir svn/dirbad
Directory should be under Subversion control: test1/svn/dirbad
 -> Dir svn/dirutd
 -> Parsing Subversion entries
 --> fileutd	m
 --> fileoth	o
 -> Dir svn/dirutd/.svn
 -> Dir testdir
Backup path 'test2'
 -> Dir testdir
 -> Journal is empty, not merging
 -> Database closed
 --> Client: testhost
>List 1 client(s):
Client: testhost
-> file://testhost etc/localhost.list
 -> Database open in read/write mode
Backup client 'testhost' using protocol 'file'
 -> Reading client configuration file
 --> client-wide filter and subdir
 ---> condition path_start subdir
 ---> condition not size< 100
 --> client-wide filter and bigfile
 ---> condition size>= 10
 ---> condition type file
 --> expiry 1 day(s)
 --> Path: test2
 --> Path: test1
 --> path-wide filter and not_object
 ---> condition not path_end .o
 --> path-wide filter or to_be_ignored
 ---> condition filter subdir
 ---> condition filter backup
 ---> condition not filter not_object
 --> Path: test1/subdir
Path inside another. This is not supported
 -> Journal is empty, not merging
 -> Database closed
 --> Client: testhost
>List 1 client(s):
Client: testhost
-> file://testhost etc/localhost.list2
 -> Database open in read/write mode
Backup client 'testhost' using protocol 'file'
 -> Reading client configuration file
 --> client-wide filter and subdir
 ---> condition path_start subdir
 ---> condition not size< 100
 --> client-wide filter and bigfile
 ---> condition size>= 10
 ---> condition type file
 --> Path: test2/subdir
 --> Path: test2
Path inside another: this is not supported
 --> Path: test1
 --> path-wide filter and not_object
 ---> condition not path_end .o
 --> path-wide filter or to_be_ignored
 ---> condition filter subdir
 ---> condition filter backup
 ---> condition not filter not_object
 --> Path: test1/subdir
Path inside another. This is not supported
backup failed
 -> Journal is empty, not merging
 -> Database closed

Test: missing clients
 --> Client: myhost2
 -> Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase //myhost2/C$ test_db/mount
Backup client 'myhost2' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
A C:/Test/Dir
 -> Dir Dir
A C:/Test/Dir/a File.TXT (2 B)
A C:/Test/Dir/another File.TXT (2 B)
A C:/Test/File.TXT (0 B)
 -> umount test_db/mount
 -> Database closed
 --> Client: myhost3
 -> Database open in read/write mode
 -> mount -t nfs -o ro,noatime,nolock myhost3:/home/User test_db/mount
Backup client 'myhost3' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myhost3:/home/User/test test_db/mount
A /home/User/test/File2.txt (0 B)
A /home/User/test/dir
 -> Dir dir
A /home/User/test/dir/file3.txt (2 B)
 -> umount test_db/mount
 -> Database closed
 --> Client: myhost
 -> Database open in read/write mode
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Path: test1/cvs
Backup path 'test1/cvs'
A test1/cvs/CVS
 -> Dir CVS
A test1/cvs/CVS/Entries (161 B)
A test1/cvs/CVS/Root (16 B)
A test1/cvs/CVS/Whatever (17 B)
Adding file data to DB in: test_db/data/9283e2c51868272850bd2d89b63c58e8-0
A test1/cvs/CVS/Wherever
 -> Dir CVS/Wherever
A test1/cvs/CVS/Wherever/Whichever (0 B)
A test1/cvs/dirbad
 -> Dir dirbad
A test1/cvs/dirbad/fileoth (0 B)
A test1/cvs/dirbad/fileutd (0 B)
A test1/cvs/diroth
 -> Dir diroth
A test1/cvs/dirutd
 -> Dir dirutd
A test1/cvs/dirutd/CVS
 -> Dir dirutd/CVS
A test1/cvs/dirutd/CVS/Entries (42 B)
A test1/cvs/dirutd/CVS/Root (10 B)
A test1/cvs/dirutd/CVS/Whatever (11 B)
Adding file data to DB in: test_db/data/caecaacc7fdee8a7667d4f4f315858a9-0
A test1/cvs/dirutd/fileoth (0 B)
A test1/cvs/dirutd/fileutd (0 B)
A test1/cvs/filemod.o (0 B)
A test1/cvs/filenew.c (0 B)
A test1/cvs/fileoth (0 B)
A test1/cvs/fileutd.h (0 B)
 -> Database closed

Clients in DB
 -> Database open in read-only mode
 -> Database closed
Records found: 6
 myClient#
 myClient2$
 myhost#
 myhost2$
 myhost3#
 testhost#

Paths in 'myhost#' client in DB
 -> Database open in read-only mode
 -> Database closed
Records found: 1
 test1

Paths in 'myhost#' client under test1 in DB
 -> Database open in read-only mode
 -> Database closed
Records found: 1
 test1/cvs

Paths in 'myhost#' client under test1/cvs in DB
 -> Database open in read-only mode
 -> Database closed
Records found: 8
 test1/cvs/CVS
 test1/cvs/dirbad
 test1/cvs/diroth
 test1/cvs/dirutd
 test1/cvs/filemod.o
 test1/cvs/filenew.c
 test1/cvs/fileoth
 test1/cvs/fileutd.h

Paths in 'myhost#' client under test1/cvs/diroth in DB
 -> Database open in read-only mode
 -> Database closed
Records found: 0

Paths in 'myhost#' client under test1/cvs/dirutd in DB
 -> Database open in read-only mode
 -> Database closed
Records found: 3
 test1/cvs/dirutd/CVS
 test1/cvs/dirutd/fileoth
 test1/cvs/dirutd/fileutd
Create list of clients
 --> Client: myhost
 --> Client: myhost2
 --> Client: myhost3
>List 3 client(s):
Client: myhost
-> file://myhost etc/testhost.list
Client: myhost2
-> smb://myhost2 C:/Backup/testhost2.list
Client: myhost3
-> nfs://myhost3 /home/User/testhost3.list
 -> Database open in read/write mode
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Path: test1/cvs
Backup path 'test1/cvs'
 -> Dir CVS
 -> Dir CVS/Wherever
 -> Dir dirbad
 -> Dir diroth
 -> Dir dirutd
 -> Dir dirutd/CVS
 -> mount -t cifs -o ro,noatime,nocase //myhost2/C$ test_db/mount
Backup client 'myhost2' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myhost3:/home/User test_db/mount
Backup client 'myhost3' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myhost3:/home/User/test test_db/mount
 -> Dir dir
 -> umount test_db/mount
 -> Journal is empty, not merging
 -> Database closed
Create list of clients
 --> Client: myhost2
 --> Client: myhost3
>List 2 client(s):
Client: myhost2
-> smb://myhost2 C:/Backup/testhost2.list
Client: myhost3
-> nfs://myhost3 /home/User/testhost3.list
 -> Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase //myhost2/C$ test_db/mount
Backup client 'myhost2' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myhost3:/home/User test_db/mount
Backup client 'myhost3' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myhost3:/home/User/test test_db/mount
 -> Dir dir
 -> umount test_db/mount
 -> Journal is empty, not merging
 -> Database closed
Create list of clients
 --> Client: myhost
 --> Client: myhost3
>List 2 client(s):
Client: myhost
-> file://myhost etc/testhost.list
Client: myhost3
-> nfs://myhost3 /home/User/testhost3.list
 -> Database open in read/write mode
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Path: test1/cvs
Backup path 'test1/cvs'
 -> Dir CVS
 -> Dir CVS/Wherever
 -> Dir dirbad
 -> Dir diroth
 -> Dir dirutd
 -> Dir dirutd/CVS
 -> mount -t nfs -o ro,noatime,nolock myhost3:/home/User test_db/mount
Backup client 'myhost3' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myhost3:/home/User/test test_db/mount
 -> Dir dir
 -> umount test_db/mount
 -> Journal is empty, not merging
 -> Database closed
Create list of clients
 --> Client: myhost
 --> Client: myhost2
>List 2 client(s):
Client: myhost
-> file://myhost etc/testhost.list
Client: myhost2
-> smb://myhost2 C:/Backup/testhost2.list
 -> Database open in read/write mode
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Path: test1/cvs
Backup path 'test1/cvs'
 -> Dir CVS
 -> Dir CVS/Wherever
 -> Dir dirbad
 -> Dir diroth
 -> Dir dirutd
 -> Dir dirutd/CVS
 -> mount -t cifs -o ro,noatime,nocase //myhost2/C$ test_db/mount
Backup client 'myhost2' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount test_db/mount
 -> Journal is empty, not merging
 -> Database closed
Second mount fails
 --> Client: myClient
>List 1 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
 -> Database open in read/write mode
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
 --> Path: /home/User/test2
Backup path '/home/User/test'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User/test test_db/mount
 -> Dir dir
Backup path '/home/User/test2'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User/test2 test_db/mount
clients: backup: mount failed for /home/User/test2
 -> Journal is empty, not merging
 -> Database closed
First mount fails
 --> Client: myClient
>List 1 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
 -> Database open in read/write mode
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
 --> Path: /home/User/test2
Backup path '/home/User/test'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User/test test_db/mount
clients: backup: mount failed for /home/User/test
 -> Journal is empty, not merging
 -> Database closed
Works again
 --> Client: myClient
>List 1 client(s):
Client: myClient
-> nfs://myClient /home/User/hbackup.list
 -> Database open in read/write mode
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
 --> Path: /home/User/test2
Backup path '/home/User/test'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User/test test_db/mount
 -> Dir dir
Backup path '/home/User/test2'
 -> umount test_db/mount
 -> mount -t nfs -o ro,noatime,nolock myClient:/home/User/test2 test_db/mount
 -> umount test_db/mount
 -> Journal is empty, not merging
 -> Database closed
Test with dual boot client
 --> Client: myClient
>List 1 client(s):
Client: myClient
-> smb://myClient C:/Backup/testhost2.list
 -> Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase //myClient/C$ test_db/mount
Backup client 'myClient' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
A C:/Test/Dir
 -> Dir Dir
A C:/Test/Dir/a File.TXT (2 B)
A C:/Test/Dir/another File.TXT (2 B)
A C:/Test/File.TXT (0 B)
 -> umount test_db/mount
 -> Database closed

Clients in DB
 -> Database open in read-only mode
 -> Database closed
Records found: 7
 myClient#
 myClient$
 myClient2$
 myhost#
 myhost2$
 myhost3#
 testhost#
