Global filter
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end ~
>List 0 client(s):
>List 1 client(s):
 -> Client: localhost
 --> Protocol: file
 --> Config: etc/doesnotexist
 --> Expiry: none
Database initialized: test_db
Database open in read/write mode
Error: etc/doesnotexist: Client configuration file not found
Database closed
>List 0 client(s):
>List 1 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
>List 2 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
>List 3 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
>List 4 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
>List 5 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
>List 6 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
>List 7 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: Client
 --> Protocol: smb
 --> Options: username=user, iocharset=utf8
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
>List 8 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: Client
 --> Protocol: smb
 --> Options: username=user, iocharset=utf8
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client2
 --> Protocol: smb
 --> Hostname: Client
 --> Options: nocase, username=user, password=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
>List 9 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: Client
 --> Protocol: smb
 --> Options: username=user, iocharset=utf8
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client2
 --> Protocol: smb
 --> Hostname: Client
 --> Options: nocase, username=user, password=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client3
 --> Protocol: smb
 --> Hostname: Client
 --> Options: username=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
>List 10 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: Client
 --> Protocol: smb
 --> Options: username=user, iocharset=utf8
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client2
 --> Protocol: smb
 --> Hostname: Client
 --> Options: nocase, username=user, password=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client3
 --> Protocol: smb
 --> Hostname: Client
 --> Options: username=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client4
 --> Protocol: smb
 --> Hostname: Client
 --> Options: username=, password=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths: 
 ---> Path: /home/User/test
 ----> No error if same file fails copy again
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
 ---> Path: /home/User/test2
 ----> No error if same file fails copy again
Backing up client: myClient
Reading list of problematic checksums
Register created: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
Adding compressed data for d41d8cd98f00b204e9800998ecf8427e-0
Af z    /home/User/test/File2.txt
Ad      /home/User/test/dir
dir\r
   \r
Adding compressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
Af z    /home/User/test/dir/file3.txt
Backing up path: /home/User/test2
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test2 test_db/mount
Replacing with uncompressed data for d41d8cd98f00b204e9800998ecf8427e-0
Af fr   /home/User/test2/File3.txt
Af ~    /home/User/test2/File4.txt
Register modified: myClient
Database closed: myClient
 -> umount -fl test_db/mount
Trying client 'myClient2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM //myClient/C$ test_db/mount
 -> Reading client configuration file: myClient2
Error: Cannot decode decimal value
Error: test_db/mount/Backup/Backup2.LST: 8: Failed to add condition
Error: Cannot decode decimal value
Error: test_db/mount/Backup/Backup2.LST: 9: Failed to add condition
Error: Cannot decode decimal value
Error: test_db/mount/Backup/Backup2.LST: 10: Failed to add condition
Error: Cannot decode decimal value
Error: test_db/mount/Backup/Backup2.LST: 11: Failed to add condition
Error: Cannot decode octal value
Error: test_db/mount/Backup/Backup2.LST: 12: Failed to add condition
Error: Cannot decode octal value
Error: test_db/mount/Backup/Backup2.LST: 13: Failed to add condition
Error: Cannot decode unit, must be 'iB' or 'B'
Error: test_db/mount/Backup/Backup2.LST: 14: Failed to add condition
Error: Cannot decode unit, must be 'iB' or 'B'
Error: test_db/mount/Backup/Backup2.LST: 15: Failed to add condition
Error: Cannot decode multiplier
Error: test_db/mount/Backup/Backup2.LST: 17: Failed to add condition
 -> umount -fl test_db/mount
Trying client 'otherClient' using protocol 'ssh'
 -> echo barZ? | sshfs -o password_stdin foo@otherClient:/home/Blah test_db/mount
 -> Reading client configuration file: otherClient
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths: 
 ---> Path: /home/Blah/test
 ----> No error if same file fails copy again
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: otherClient
Register created: otherClient
Database open r/w: otherClient
Backing up path: /home/Blah/test
 -> fusermount -u test_db/mount
 -> echo barZ? | sshfs -o password_stdin foo@otherClient:/home/Blah/test test_db/mount
Adding compressed data for b8bbb1294db5d59366b7d1827e2158d6-0
Af z    /home/Blah/test/File2.txt
Ad      /home/Blah/test/dir
dir\r
   \r
Adding compressed data for 8a61083e712200a30c6ccf5f5c697b76-0
Af z    /home/Blah/test/dir/file3.txt
Register modified: otherClient
Database closed: otherClient
 -> fusermount -u test_db/mount
Trying client 'otherClient1' using protocol 'ssh'
 -> echo barZ? | sshfs -o password_stdin otherClient:/home/Blah test_db/mount
 -> Reading client configuration file: otherClient1
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths: 
 ---> Path: /home/Blah/test
 ----> No error if same file fails copy again
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: otherClient1
Register created: otherClient1
Database open r/w: otherClient1
Backing up path: /home/Blah/test
 -> fusermount -u test_db/mount
 -> echo barZ? | sshfs -o password_stdin otherClient:/home/Blah/test test_db/mount
Af ~    /home/Blah/test/File2.txt
Ad      /home/Blah/test/dir
dir\r
   \r
Af ~    /home/Blah/test/dir/file3.txt
Register modified: otherClient1
Database closed: otherClient1
 -> fusermount -u test_db/mount
Trying client 'otherClient2' using protocol 'ssh'
 -> sshfs foo@otherClient:/home/Blah test_db/mount
Warning: otherClient2: Connection timed out connecting to client
Trying client 'otherClient3' using protocol 'ssh'
 -> sshfs otherClient:/home/Blah test_db/mount
Warning: otherClient3: Connection timed out connecting to client
Trying client 'Client' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=user,iocharset=utf8 //Client/C$ test_db/mount
Error: test_db/mount/home/BlaH/Backup.list: Client configuration file not found
 -> umount -fl test_db/mount
Trying client 'Client2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,nocase,username=user,password= //Client/C$ test_db/mount
Error: test_db/mount/home/BlaH/Backup.list: Client configuration file not found
 -> umount -fl test_db/mount
Trying client 'Client3' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username= //Client/C$ test_db/mount
Error: test_db/mount/home/BlaH/Backup.list: Client configuration file not found
 -> umount -fl test_db/mount
Trying client 'Client4' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=,password= //Client/C$ test_db/mount
Error: test_db/mount/home/BlaH/Backup.list: Client configuration file not found
 -> umount -fl test_db/mount
Database closed
>List 1 client(s):
 -> Client: testhost
 --> Protocol: file
 --> Hostname: localhost
 --> Config: etc/localhost.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file: testhost
 -> Client: testhost
 --> Protocol: file
 --> Hostname: localhost
 --> Users: biloute, machin
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> backup
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Ignore filters:
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> backup
Backing up client: testhost
Reading list of problematic checksums
Register created: testhost
Database open r/w: testhost
Backing up path: test1
Done:   5.0%\r
Done:  10.0%\r
Done:  15.0%\r
Done:  20.0%\r
Done:  25.0%\r
Done:  30.0%\r
Done:  35.0%\r
Done:  40.0%\r
Done:  45.0%\r
Done:  50.0%\r
Done:  55.0%\r
Done:  60.0%\r
Done:  65.0%\r
Done:  70.0%\r
Done:  75.0%\r
Done:  80.0%\r
Done:  85.0%\r
Done:  90.0%\r
Done:  95.0%\r
            \r
Adding compressed data for f1c9645dbc14efddc7d8a322685f26eb-0
Af z    test1/big_file
Ad      test1/cvs
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
Ad      test1/cvs/CVS
cvs/CVS\r
       \r
Adding uncompressed data for fef51838cd3cfe8ed96355742eb71fbd-0
Af f    test1/cvs/CVS/Entries
Adding compressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
Af z    test1/cvs/CVS/Root
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
Ad      test1/cvs/dirbad
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
Ad      test1/cvs/dirutd
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
Ad      test1/cvs/dirutd/CVS
cvs/dirutd/CVS\r
              \r
Adding uncompressed data for 5252f242d27b8c2c9fdbdcbb33545d07-0
Af f    test1/cvs/dirutd/CVS/Entries
Adding compressed data for eb75fb33b2019ef3c840eb5ccdc2e795-0
Af z    test1/cvs/dirutd/CVS/Root
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
Af ~    test1/cvs/dirutd/fileutd
If f    test1/cvs/filemod.o
Af ~    test1/cvs/filenew.c
If p    test1/cvs/fileoth
Af ~    test1/cvs/fileutd.h
Ad      test1/dir space
dir space\r
         \r
Af ~    test1/dir space/file space
Al      test1/dir space/link space
Af ~    test1/strange1TAB	CR\r

Af ~    test1/strange2TAB	LF
Error: strange3TAB	LF
CR\r
: File name contains LF
If n    test1/strange3TAB	LF
CR\r

Id f    test1/subdir
Ad      test1/svn
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
Ad      test1/svn/.svn
svn/.svn\r
        \r
Adding compressed data for 0f2ea973d77135dc3d06c8e68da6dc59-0
Af z    test1/svn/.svn/entries
If p    test1/svn/.svn/format
If p    test1/svn/.svn/whatever
Id p    test1/svn/.svn/wherever
Ad      test1/svn/dirbad
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
Ad      test1/svn/dirutd
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
Ad      test1/svn/dirutd/.svn
svn/dirutd/.svn\r
               \r
Adding compressed data for 8bdef5751e46ed57d237cbe3f4a5061c-0
Af z    test1/svn/dirutd/.svn/entries
If p    test1/svn/dirutd/.svn/format
If p    test1/svn/dirutd/.svn/whatever
If p    test1/svn/dirutd/fileoth
Af ~    test1/svn/dirutd/fileutd
If f    test1/svn/filemod.o
Af ~    test1/svn/filenew.c
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
Af ~    test1/test space
Ad      test1/testdir
testdir\r
       \r
Adding compressed data for 59ca0efa9f5633cb0371bbc0355478d8-0
Af z    test1/testfile
If f    test1/testfile~
Al      test1/testlink
Ap      test1/testpipe
Backing up path: test2
Ad      test2/testdir
testdir\r
       \r
Adding uncompressed data for 3d546a1ce46c6ae10ad34ab8a81c542e-0
Af f    test2/testfile
Adding uncompressed data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
Af f    test2/testfile2
Adding uncompressed data for f81f70dceaca8b0cec354f33fa3f0909-0
Af f    test2/testfile2.gz
If f    test2/testfile~
Al      test2/testlink
Register modified: testhost
Database closed: testhost
Database closed
>List 1 client(s):
 -> Client: testhost
 --> Protocol: file
 --> Config: etc/localhost.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file: testhost
 -> Client: testhost
 --> Protocol: file
 --> Users: biloute, machin
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> backup
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Ignore filters:
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> backup
Backing up client: testhost
Reading list of problematic checksums
Database open r/w: testhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
         \r
Error: strange3TAB	LF
CR\r
: File name contains LF
If n    test1/strange3TAB	LF
CR\r

Id f    test1/subdir
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
svn/.svn\r
        \r
If p    test1/svn/.svn/format
If p    test1/svn/.svn/whatever
Id p    test1/svn/.svn/wherever
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
svn/dirutd/.svn\r
               \r
If p    test1/svn/dirutd/.svn/format
If p    test1/svn/dirutd/.svn/whatever
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
       \r
If f    test1/testfile~
Backing up path: test2
testdir\r
       \r
If f    test2/testfile~
Database closed: testhost
Database closed
>List 1 client(s):
 -> Client: testhost
 --> Protocol: file
 --> Config: etc/localhost.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file: testhost
Error: etc/localhost.list: 38: Path inside another
Database closed
>List 1 client(s):
 -> Client: testhost
 --> Protocol: file
 --> Config: etc/localhost.list2
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file: testhost
Error: etc/localhost.list2: 16: Path inside another
Error: etc/localhost.list2: 38: Path inside another
backup failed
Database closed

Test: missing clients
Database open in read/write mode
Trying client 'myhost2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myhost2/C$ test_db/mount
 -> Reading client configuration file: myhost2
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
Backing up client: myhost2
Reading list of problematic checksums
Register created: myhost2
Database open r/w: myhost2
Backing up path: C:/Test Dir
Ad      C:/Test Dir/My Dir
My Dir\r
      \r
Adding uncompressed data for b026324c6904b2a9cb4b88d6d61c81d1-0
Af f    C:/Test Dir/My Dir/a File.TXT
Adding uncompressed data for 26ab0db90d72e28ad0ba1e22ee510510-0
Af f    C:/Test Dir/My Dir/another File.TXT
Af ~    C:/Test Dir/My File.TXT
Register modified: myhost2
Database closed: myhost2
 -> umount -fl test_db/mount
Database closed
Database open in read/write mode
Trying client 'myhost3' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User test_db/mount
 -> Reading client configuration file: myhost3
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
Backing up client: myhost3
Reading list of problematic checksums
Register created: myhost3
Database open r/w: myhost3
Backing up path: /home/User/test
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User/test test_db/mount
Af ~    /home/User/test/File2.txt
Ad      /home/User/test/dir
dir\r
   \r
Replacing with uncompressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
Af fr   /home/User/test/dir/file3.txt
Register modified: myhost3
Database closed: myhost3
 -> umount -fl test_db/mount
Database closed
Database open in read/write mode
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 --> Paths: 
 ---> Path: test1/cvs
Backing up client: myhost
Reading list of problematic checksums
Register created: myhost
Database open r/w: myhost
Backing up path: test1/cvs
Ad      test1/cvs/CVS
CVS\r
   \r
Af ~    test1/cvs/CVS/Entries
Replacing with uncompressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
Af fr   test1/cvs/CVS/Root
Adding uncompressed data for 9283e2c51868272850bd2d89b63c58e8-0
Af f    test1/cvs/CVS/Whatever
Ad      test1/cvs/CVS/Wherever
CVS/Wherever\r
            \r
Af ~    test1/cvs/CVS/Wherever/Whichever
Ad      test1/cvs/dirbad
dirbad\r
      \r
Af ~    test1/cvs/dirbad/fileoth
Af ~    test1/cvs/dirbad/fileutd
Ad      test1/cvs/diroth
diroth\r
      \r
Ad      test1/cvs/dirutd
dirutd\r
      \r
Ad      test1/cvs/dirutd/CVS
dirutd/CVS\r
          \r
Af ~    test1/cvs/dirutd/CVS/Entries
Replacing with uncompressed data for eb75fb33b2019ef3c840eb5ccdc2e795-0
Af fr   test1/cvs/dirutd/CVS/Root
Adding uncompressed data for caecaacc7fdee8a7667d4f4f315858a9-0
Af f    test1/cvs/dirutd/CVS/Whatever
Af ~    test1/cvs/dirutd/fileoth
Af ~    test1/cvs/dirutd/fileutd
Af ~    test1/cvs/filemod.o
Af ~    test1/cvs/filenew.c
Af ~    test1/cvs/fileoth
Af ~    test1/cvs/fileutd.h
Register modified: myhost
Database closed: myhost
Database closed
Database open in read-only mode

Clients in DB
Records found: 7
 myClient
 myhost
 myhost2
 myhost3
 otherClient
 otherClient1
 testhost

Paths in 'myhost' client in DB
Database open r-o: myhost
Database closed: myhost
Records found: 1
 test1/

Paths in 'myhost' client under test1 in DB
Database open r-o: myhost
Database closed: myhost
Records found: 1
 test1/cvs/

Paths in 'myhost' client under test1/cvs/ in DB
Database open r-o: myhost
Database closed: myhost
Records found: 8
 test1/cvs/CVS/
 test1/cvs/dirbad/
 test1/cvs/diroth/
 test1/cvs/dirutd/
 test1/cvs/filemod.o
 test1/cvs/filenew.c
 test1/cvs/fileoth
 test1/cvs/fileutd.h

Paths in 'myhost' client under test1/cvs/diroth in DB
Database open r-o: myhost
Database closed: myhost
Records found: 0

Paths in 'myhost' client under test1/cvs/dirutd in DB
Database open r-o: myhost
Database closed: myhost
Records found: 3
 test1/cvs/dirutd/CVS/
 test1/cvs/dirutd/fileoth
 test1/cvs/dirutd/fileutd

Paths in 'not_here' client
Error: not_here: Directory does not exist, aborting
Database closed
Create list of clients
>List 3 client(s):
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 --> Paths: 
 ---> Path: test1/cvs
Backing up client: myhost
Reading list of problematic checksums
Database open r/w: myhost
Backing up path: test1/cvs
CVS\r
CVS/Wherever\r
dirbad      \r
diroth\r
dirutd\r
dirutd/CVS\r
          \r
Database closed: myhost
Trying client 'myhost2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myhost2/C$ test_db/mount
 -> Reading client configuration file: myhost2
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
Backing up client: myhost2
Database open r/w: myhost2
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myhost2
 -> umount -fl test_db/mount
Trying client 'myhost3' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User test_db/mount
 -> Reading client configuration file: myhost3
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
Backing up client: myhost3
Database open r/w: myhost3
Backing up path: /home/User/test
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User/test test_db/mount
dir\r
   \r
Database closed: myhost3
 -> umount -fl test_db/mount
Database closed
Create list of clients
>List 2 client(s):
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myhost2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myhost2/C$ test_db/mount
 -> Reading client configuration file: myhost2
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
Backing up client: myhost2
Reading list of problematic checksums
Database open r/w: myhost2
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myhost2
 -> umount -fl test_db/mount
Trying client 'myhost3' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User test_db/mount
 -> Reading client configuration file: myhost3
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
Backing up client: myhost3
Database open r/w: myhost3
Backing up path: /home/User/test
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User/test test_db/mount
dir\r
   \r
Database closed: myhost3
 -> umount -fl test_db/mount
Database closed
Create list of clients
>List 2 client(s):
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 --> Paths: 
 ---> Path: test1/cvs
Backing up client: myhost
Reading list of problematic checksums
Database open r/w: myhost
Backing up path: test1/cvs
CVS\r
CVS/Wherever\r
dirbad      \r
diroth\r
dirutd\r
dirutd/CVS\r
          \r
Database closed: myhost
Trying client 'myhost3' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User test_db/mount
 -> Reading client configuration file: myhost3
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
Backing up client: myhost3
Database open r/w: myhost3
Backing up path: /home/User/test
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User/test test_db/mount
dir\r
   \r
Database closed: myhost3
 -> umount -fl test_db/mount
Database closed
Create list of clients
>List 2 client(s):
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 --> Paths: 
 ---> Path: test1/cvs
Backing up client: myhost
Reading list of problematic checksums
Database open r/w: myhost
Backing up path: test1/cvs
CVS\r
CVS/Wherever\r
dirbad      \r
diroth\r
dirutd\r
dirutd/CVS\r
          \r
Database closed: myhost
Trying client 'myhost2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myhost2/C$ test_db/mount
 -> Reading client configuration file: myhost2
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
Backing up client: myhost2
Database open r/w: myhost2
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myhost2
 -> umount -fl test_db/mount
Database closed
Second mount fails
>List 1 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths: 
 ---> Path: /home/User/test
 ----> No error if same file fails copy again
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
 ---> Path: /home/User/test2
 ----> No error if same file fails copy again
Backing up client: myClient
Reading list of problematic checksums
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
dir\r
   \r
Backing up path: /home/User/test2
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test2 test_db/mount
Error: myClient: Connection timed out - aborting client
Database closed: myClient
Database closed
First mount fails
>List 1 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths: 
 ---> Path: /home/User/test
 ----> No error if same file fails copy again
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
 ---> Path: /home/User/test2
 ----> No error if same file fails copy again
Backing up client: myClient
Reading list of problematic checksums
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
Error: myClient: Connection timed out - aborting client
Database closed: myClient
Database closed
Works again
>List 1 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths: 
 ---> Path: /home/User/test
 ----> No error if same file fails copy again
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
 ---> Path: /home/User/test2
 ----> No error if same file fails copy again
Backing up client: myClient
Reading list of problematic checksums
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
dir\r
   \r
Backing up path: /home/User/test2
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test2 test_db/mount
Database closed: myClient
 -> umount -fl test_db/mount
Database closed
Test with dual boot client
>List 1 client(s):
 -> Client: myClient
 --> Required subset: xp
 --> Protocol: smb
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/mount
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
Reading list of problematic checksums
Register created: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
Ad      C:/Test Dir/My Dir
My Dir\r
      \r
Af ~    C:/Test Dir/My Dir/a File.TXT
Af ~    C:/Test Dir/My Dir/another File.TXT
Af ~    C:/Test Dir/My File.TXT
Register modified: myClient.xp
Database closed: myClient.xp
 -> umount -fl test_db/mount
Database closed

Clients in DB
Records found: 8
 myClient
 myClient.xp
 myhost
 myhost2
 myhost3
 otherClient
 otherClient1
 testhost
