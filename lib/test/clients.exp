Global filter
 -> Filter: and backup
 --> Condition: type f
 --> Condition: path_end '~'
>List 0 client(s):
>List 1 client(s):
 -> Client: localhost
 --> Protocol: file
 --> Config: etc/doesnotexist
 --> Expiry: none
Database initialized in 'test_db'
Database open in read/write mode
 -> Reading client configuration file for 'localhost'
Error: failed to open configuration file 'etc/doesnotexist': No such file or directory
Database closed
>List 0 client(s):
>List 1 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
>List 2 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
>List 3 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
>List 4 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
>List 5 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
>List 6 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
>List 7 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: Client
 --> Protocol: smb
 --> Options: username=user, iocharset=utf8
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
>List 8 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: Client
 --> Protocol: smb
 --> Options: username=user, iocharset=utf8
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client2
 --> Protocol: smb
 --> Hostname: Client
 --> Options: nocase, username=user, password=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
>List 9 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: Client
 --> Protocol: smb
 --> Options: username=user, iocharset=utf8
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client2
 --> Protocol: smb
 --> Hostname: Client
 --> Options: nocase, username=user, password=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client3
 --> Protocol: smb
 --> Hostname: Client
 --> Options: username=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
>List 10 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 -> Client: myClient2
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM
 --> Config: C:/Backup/Backup2.LST
 --> Expiry: none
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient2
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: username=foo
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: otherClient3
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 -> Client: Client
 --> Protocol: smb
 --> Options: username=user, iocharset=utf8
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client2
 --> Protocol: smb
 --> Hostname: Client
 --> Options: nocase, username=user, password=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client3
 --> Protocol: smb
 --> Hostname: Client
 --> Options: username=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
 -> Client: Client4
 --> Protocol: smb
 --> Hostname: Client
 --> Options: username=, password=
 --> Config: C:/home/BlaH/Backup.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Compress filter: compress
 ---> Path: /home/User/test2
Backing up client 'myClient'
Reading list of problematic checksums
Register created for 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
Adding compressed data for d41d8cd98f00b204e9800998ecf8427e-0
Backup::addHash(d41d8cd98f00b204e9800998ecf8427e-0)
Af z    /home/User/test/File2.txt
Ad      /home/User/test/dir
dir\r
Adding compressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
Backup::addHash(6d7fce9fee471194aa8b5b6e47267f03-0)
Af z    /home/User/test/dir/file3.txt
Backing up path '/home/User/test2'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test2 test_db/mount
Replacing with uncompressed data for d41d8cd98f00b204e9800998ecf8427e-0
Backup::addHash(d41d8cd98f00b204e9800998ecf8427e-0)
Af fr   /home/User/test2/File3.txt
Af ~    /home/User/test2/File4.txt
Register modified for 'myClient'
Database closed for 'myClient'
Backup::add(test_db/myClient)
 -> umount -fl test_db/mount
Trying client 'myClient2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM //myClient/C$ test_db/mount
 -> Reading client configuration file for 'myClient2'
Error: test_db/mount/Backup/Backup2.LST:8 cannot decode decimal value 'a'
Error: test_db/mount/Backup/Backup2.LST:8 failed to add condition 'size>='
 -> umount -fl test_db/mount
Trying client 'otherClient' using protocol 'ssh'
 -> echo barZ? | sshfs -o password_stdin foo@otherClient:/home/Blah test_db/mount
 -> Reading client configuration file for 'otherClient'
 -> Client: otherClient
 --> Protocol: ssh
 --> Options: username=foo, password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths:
 ---> Path: /home/Blah/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Compress filter: compress
Backing up client 'otherClient'
Register created for 'otherClient'
Database open r/w for 'otherClient'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/mount
 -> echo barZ? | sshfs -o password_stdin foo@otherClient:/home/Blah/test test_db/mount
Adding compressed data for b8bbb1294db5d59366b7d1827e2158d6-0
Backup::addHash(b8bbb1294db5d59366b7d1827e2158d6-0)
Af z    /home/Blah/test/File2.txt
Ad      /home/Blah/test/dir
dir\r
Adding compressed data for 8a61083e712200a30c6ccf5f5c697b76-0
Backup::addHash(8a61083e712200a30c6ccf5f5c697b76-0)
Af z    /home/Blah/test/dir/file3.txt
Register modified for 'otherClient'
Database closed for 'otherClient'
Backup::add(test_db/otherClient)
 -> fusermount -u test_db/mount
Trying client 'otherClient1' using protocol 'ssh'
 -> echo barZ? | sshfs -o password_stdin otherClient:/home/Blah test_db/mount
 -> Reading client configuration file for 'otherClient1'
 -> Client: otherClient1
 --> Protocol: ssh
 --> Hostname: otherClient
 --> Options: password=barZ?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths:
 ---> Path: /home/Blah/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Compress filter: compress
Backing up client 'otherClient1'
Register created for 'otherClient1'
Database open r/w for 'otherClient1'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/mount
 -> echo barZ? | sshfs -o password_stdin otherClient:/home/Blah/test test_db/mount
Af ~    /home/Blah/test/File2.txt
Ad      /home/Blah/test/dir
dir\r
Af ~    /home/Blah/test/dir/file3.txt
Register modified for 'otherClient1'
Database closed for 'otherClient1'
Backup::add(test_db/otherClient1)
 -> fusermount -u test_db/mount
Trying client 'otherClient2' using protocol 'ssh'
 -> sshfs foo@otherClient:/home/Blah test_db/mount
Warning: Connection timed out connecting to client 'otherClient2'
Trying client 'otherClient3' using protocol 'ssh'
 -> sshfs otherClient:/home/Blah test_db/mount
Warning: Connection timed out connecting to client 'otherClient3'
Trying client 'Client' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=user,iocharset=utf8 //Client/C$ test_db/mount
 -> Reading client configuration file for 'Client'
Error: failed to open configuration file 'test_db/mount/home/BlaH/Backup.list': No such file or directory
 -> umount -fl test_db/mount
Trying client 'Client2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,nocase,username=user,password= //Client/C$ test_db/mount
 -> Reading client configuration file for 'Client2'
Error: failed to open configuration file 'test_db/mount/home/BlaH/Backup.list': No such file or directory
 -> umount -fl test_db/mount
Trying client 'Client3' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username= //Client/C$ test_db/mount
 -> Reading client configuration file for 'Client3'
Error: failed to open configuration file 'test_db/mount/home/BlaH/Backup.list': No such file or directory
 -> umount -fl test_db/mount
Trying client 'Client4' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=,password= //Client/C$ test_db/mount
 -> Reading client configuration file for 'Client4'
Error: failed to open configuration file 'test_db/mount/home/BlaH/Backup.list': No such file or directory
 -> umount -fl test_db/mount
Database closed
>List 1 client(s):
 -> Client: testhost
 --> Protocol: file
 --> Hostname: localhost
 --> Config: etc/localhost.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file for 'testhost'
 -> Client: testhost
 --> Protocol: file
 --> Hostname: localhost
 --> Users: biloute, machin
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> backup
Backing up client 'testhost'
Reading list of problematic checksums
Register created for 'testhost'
Database open r/w for 'testhost'
Backing up path 'test1'
Copy:   1.0%\r
Copy:   2.0%\r
Copy:   2.9%\r
Copy:   3.9%\r
Copy:   4.9%\r
Copy:   5.9%\r
Copy:   6.8%\r
Copy:   7.8%\r
Copy:   8.8%\r
Copy:   9.8%\r
Copy:  10.7%\r
Copy:  11.7%\r
Copy:  12.7%\r
Copy:  13.7%\r
Copy:  14.6%\r
Copy:  15.6%\r
Copy:  16.6%\r
Copy:  17.6%\r
Copy:  18.6%\r
Copy:  19.5%\r
Copy:  20.5%\r
Copy:  21.5%\r
Copy:  22.5%\r
Copy:  23.4%\r
Copy:  24.4%\r
Copy:  25.4%\r
Copy:  26.4%\r
Copy:  27.3%\r
Copy:  28.3%\r
Copy:  29.3%\r
Copy:  30.3%\r
Copy:  31.2%\r
Copy:  32.2%\r
Copy:  33.2%\r
Copy:  34.2%\r
Copy:  35.2%\r
Copy:  36.1%\r
Copy:  37.1%\r
Copy:  38.1%\r
Copy:  39.1%\r
Copy:  40.0%\r
Copy:  41.0%\r
Copy:  42.0%\r
Copy:  43.0%\r
Copy:  43.9%\r
Copy:  44.9%\r
Copy:  45.9%\r
Copy:  46.9%\r
Copy:  47.9%\r
Copy:  48.8%\r
Copy:  49.8%\r
Copy:  50.8%\r
Copy:  51.8%\r
Copy:  52.7%\r
Copy:  53.7%\r
Copy:  54.7%\r
Copy:  55.7%\r
Copy:  56.6%\r
Copy:  57.6%\r
Copy:  58.6%\r
Copy:  59.6%\r
Copy:  60.5%\r
Copy:  61.5%\r
Copy:  62.5%\r
Copy:  63.5%\r
Copy:  64.5%\r
Copy:  65.4%\r
Copy:  66.4%\r
Copy:  67.4%\r
Copy:  68.4%\r
Copy:  69.3%\r
Copy:  70.3%\r
Copy:  71.3%\r
Copy:  72.3%\r
Copy:  73.2%\r
Copy:  74.2%\r
Copy:  75.2%\r
Copy:  76.2%\r
Copy:  77.1%\r
Copy:  78.1%\r
Copy:  79.1%\r
Copy:  80.1%\r
Copy:  81.1%\r
Copy:  82.0%\r
Copy:  83.0%\r
Copy:  84.0%\r
Copy:  85.0%\r
Copy:  85.9%\r
Copy:  86.9%\r
Copy:  87.9%\r
Copy:  88.9%\r
Copy:  89.8%\r
Copy:  90.8%\r
Copy:  91.8%\r
Copy:  92.8%\r
Copy:  93.8%\r
Copy:  94.7%\r
Copy:  95.7%\r
Copy:  96.7%\r
Copy:  97.7%\r
Copy:  98.6%\r
Copy:  99.6%\r
Copy: 100.0%\r
Adding compressed data for f1c9645dbc14efddc7d8a322685f26eb-0
Backup::addHash(f1c9645dbc14efddc7d8a322685f26eb-0)
Af z    test1/big_file
Ad      test1/cvs
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
Ad      test1/cvs/CVS
cvs/CVS\r
Adding uncompressed data for f899d6f61138a37484c8a2294656e903-0
Backup::addHash(f899d6f61138a37484c8a2294656e903-0)
Af f    test1/cvs/CVS/Entries
Adding compressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
Backup::addHash(b90f8fa56ea1d39881d4a199c7a81d35-0)
Af z    test1/cvs/CVS/Root
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
Ad      test1/cvs/dir space
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
Ad      test1/cvs/dir space/CVS
cvs/dir space/CVS\r
Adding uncompressed data for 662ae0524981c10b4736be799fc8650a-0
Backup::addHash(662ae0524981c10b4736be799fc8650a-0)
Af f    test1/cvs/dir space/CVS/Entries
Adding compressed data for 328b42839732650180b213aadebe494d-0
Backup::addHash(328b42839732650180b213aadebe494d-0)
Af z    test1/cvs/dir space/CVS/Root
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
Af ~    test1/cvs/dir space/file space
Ad      test1/cvs/dirbad
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
Ad      test1/cvs/dirutd
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
Ad      test1/cvs/dirutd/CVS
cvs/dirutd/CVS\r
Adding uncompressed data for 5252f242d27b8c2c9fdbdcbb33545d07-0
Backup::addHash(5252f242d27b8c2c9fdbdcbb33545d07-0)
Af f    test1/cvs/dirutd/CVS/Entries
Adding compressed data for eb75fb33b2019ef3c840eb5ccdc2e795-0
Backup::addHash(eb75fb33b2019ef3c840eb5ccdc2e795-0)
Af z    test1/cvs/dirutd/CVS/Root
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
Af ~    test1/cvs/dirutd/fileutd
If f    test1/cvs/filemod.o
Af ~    test1/cvs/filenew.c
If p    test1/cvs/fileoth
Af ~    test1/cvs/fileutd.h
Ad      test1/dir space
dir space\r
Af ~    test1/dir space/file space
Al      test1/dir space/link space
Al      test1/longlink
Af ~    test1/strange1TAB	CR\r

Af ~    test1/strange2TAB	LF
Af ~    test1/strange3TAB	LF
CR\r

Id f    test1/subdir
Ad      test1/svn
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
Ad      test1/svn/.svn
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Adding compressed data for 5173c1e86196c05c124452a401e92a22-0
Backup::addHash(5173c1e86196c05c124452a401e92a22-0)
Af z    test1/svn/.svn/entries
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
Ad      test1/svn/dir space
svn/dir space\r
Ad      test1/svn/dir space/.svn
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Adding compressed data for f2b4c9d3f0830dea53972d208979feb0-0
Backup::addHash(f2b4c9d3f0830dea53972d208979feb0-0)
Af z    test1/svn/dir space/.svn/entries
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
Af ~    test1/svn/dir space/file space
Ad      test1/svn/dirbad
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
Ad      test1/svn/dirutd
svn/dirutd\r
Ad      test1/svn/dirutd/.svn
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Adding compressed data for 33b426a9cdc8a98729e5dbe6d5feb619-0
Backup::addHash(33b426a9cdc8a98729e5dbe6d5feb619-0)
Af z    test1/svn/dirutd/.svn/entries
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
Adding uncompressed data for 26ab0db90d72e28ad0ba1e22ee510510-0
Backup::addHash(26ab0db90d72e28ad0ba1e22ee510510-0)
Af f    test1/svn/dirutd/fileutd
If f    test1/svn/filemod.o
Af ~    test1/svn/filenew.c
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
Af ~    test1/test space
Ad      test1/testdir
testdir\r
Adding compressed data for 59ca0efa9f5633cb0371bbc0355478d8-0
Backup::addHash(59ca0efa9f5633cb0371bbc0355478d8-0)
Af z    test1/testfile
If f    test1/testfile~
Al      test1/testlink
Ap      test1/testpipe
Backing up path 'test2'
Ad      test2/testdir
testdir\r
Copy:  70.4%\r
Copy: 100.0%\r
Adding uncompressed data for 3d546a1ce46c6ae10ad34ab8a81c542e-0
Backup::addHash(3d546a1ce46c6ae10ad34ab8a81c542e-0)
Af f    test2/testfile
Copy:  39.5%\r
Copy:  79.1%\r
Copy: 100.0%\r
Adding uncompressed data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
Backup::addHash(fb00cd74a5f35e89a7fbdd3c1d05375a-0)
Af f    test2/testfile2
Copy:  70.4%\r
Copy: 100.0%\r
Adding uncompressed data for f81f70dceaca8b0cec354f33fa3f0909-0
Backup::addHash(f81f70dceaca8b0cec354f33fa3f0909-0)
Af f    test2/testfile2.gz
If f    test2/testfile~
Al      test2/testlink
Register modified for 'testhost'
Database closed for 'testhost'
Backup::add(test_db/testhost)
Database closed
>List 1 client(s):
 -> Client: testhost
 --> Protocol: file
 --> Config: etc/localhost.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file for 'testhost'
 -> Client: testhost
 --> Protocol: file
 --> Users: biloute, machin
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> backup
Backing up client 'testhost'
Reading list of problematic checksums
Database open r/w for 'testhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Id f    test1/subdir
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
svn/dir space\r
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
If f    test1/testfile~
Backing up path 'test2'
testdir\r
If f    test2/testfile~
Database closed for 'testhost'
Database closed
>List 1 client(s):
 -> Client: testhost
 --> Protocol: file
 --> Config: etc/localhost.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file for 'testhost'
Error: etc/localhost.list:38 path inside another 'test1/subdir'
Database closed
>List 1 client(s):
 -> Client: testhost
 --> Protocol: file
 --> Config: etc/localhost.list2
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file for 'testhost'
Error: etc/localhost.list2:16 path inside another 'test2//'
backup failed
Database closed

Test: missing clients
Database open in read/write mode
Trying client 'myhost2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myhost2/C$ test_db/mount
 -> Reading client configuration file for 'myhost2'
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 --> Paths:
 ---> Path: C:/Test Dir
Backing up client 'myhost2'
Reading list of problematic checksums
Register created for 'myhost2'
Database open r/w for 'myhost2'
Backing up path 'C:/Test Dir'
Ad      C:/Test Dir/My Dir
My Dir\r
Adding uncompressed data for b026324c6904b2a9cb4b88d6d61c81d1-0
Backup::addHash(b026324c6904b2a9cb4b88d6d61c81d1-0)
Af f    C:/Test Dir/My Dir/a File.TXT
Af ~    C:/Test Dir/My Dir/another File.TXT
Af ~    C:/Test Dir/My File.TXT
Register modified for 'myhost2'
Database closed for 'myhost2'
Backup::add(test_db/myhost2)
 -> umount -fl test_db/mount
Database closed
Database open in read/write mode
Trying client 'myhost3' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User test_db/mount
 -> Reading client configuration file for 'myhost3'
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
 --> Paths:
 ---> Path: /home/User/test
Backing up client 'myhost3'
Reading list of problematic checksums
Register created for 'myhost3'
Database open r/w for 'myhost3'
Backing up path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User/test test_db/mount
Af ~    /home/User/test/File2.txt
Ad      /home/User/test/dir
dir\r
Replacing with uncompressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
Backup::addHash(6d7fce9fee471194aa8b5b6e47267f03-0)
Af fr   /home/User/test/dir/file3.txt
Register modified for 'myhost3'
Database closed for 'myhost3'
Backup::add(test_db/myhost3)
 -> umount -fl test_db/mount
Database closed
Database open in read/write mode
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 --> Paths:
 ---> Path: test1/cvs
Backing up client 'myhost'
Reading list of problematic checksums
Register created for 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1/cvs'
Ad      test1/cvs/CVS
CVS\r
Af ~    test1/cvs/CVS/Entries
Replacing with uncompressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
Backup::addHash(b90f8fa56ea1d39881d4a199c7a81d35-0)
Af fr   test1/cvs/CVS/Root
Adding uncompressed data for 9283e2c51868272850bd2d89b63c58e8-0
Backup::addHash(9283e2c51868272850bd2d89b63c58e8-0)
Af f    test1/cvs/CVS/Whatever
Ad      test1/cvs/CVS/Wherever
CVS/Wherever\r
Af ~    test1/cvs/CVS/Wherever/Whichever
Ad      test1/cvs/dir space
dir space\r
Ad      test1/cvs/dir space/CVS
dir space/CVS\r
Af ~    test1/cvs/dir space/CVS/Entries
Replacing with uncompressed data for 328b42839732650180b213aadebe494d-0
Backup::addHash(328b42839732650180b213aadebe494d-0)
Af fr   test1/cvs/dir space/CVS/Root
Adding uncompressed data for 947c302ec365383856310621ac3fbf2f-0
Backup::addHash(947c302ec365383856310621ac3fbf2f-0)
Af f    test1/cvs/dir space/CVS/Whatever
Af ~    test1/cvs/dir space/file other
Af ~    test1/cvs/dir space/file space
Ad      test1/cvs/dirbad
dirbad\r
Af ~    test1/cvs/dirbad/fileoth
Af ~    test1/cvs/dirbad/fileutd
Ad      test1/cvs/diroth
diroth\r
Ad      test1/cvs/dirutd
dirutd\r
Ad      test1/cvs/dirutd/CVS
dirutd/CVS\r
Af ~    test1/cvs/dirutd/CVS/Entries
Replacing with uncompressed data for eb75fb33b2019ef3c840eb5ccdc2e795-0
Backup::addHash(eb75fb33b2019ef3c840eb5ccdc2e795-0)
Af fr   test1/cvs/dirutd/CVS/Root
Adding uncompressed data for caecaacc7fdee8a7667d4f4f315858a9-0
Backup::addHash(caecaacc7fdee8a7667d4f4f315858a9-0)
Af f    test1/cvs/dirutd/CVS/Whatever
Af ~    test1/cvs/dirutd/fileoth
Af ~    test1/cvs/dirutd/fileutd
Af ~    test1/cvs/filemod.o
Af ~    test1/cvs/filenew.c
Af ~    test1/cvs/fileoth
Af ~    test1/cvs/fileutd.h
Register modified for 'myhost'
Database closed for 'myhost'
Backup::add(test_db/myhost)
Database closed
Database open in read-only mode

Clients in DB
Records found: 7
 myClient
 myhost
 myhost2
 myhost3
 otherClient
 otherClient1
 testhost

Paths in 'myhost' client in DB
Database open r-o for 'myhost'
Database closed for 'myhost'
Records found: 1
 test1/

Paths in 'myhost' client under test1 in DB
Database open r-o for 'myhost'
Database closed for 'myhost'
Records found: 1
 test1/cvs/

Paths in 'myhost' client under test1/cvs/ in DB
Database open r-o for 'myhost'
Database closed for 'myhost'
Records found: 9
 test1/cvs/CVS/
 test1/cvs/dir space/
 test1/cvs/dirbad/
 test1/cvs/diroth/
 test1/cvs/dirutd/
 test1/cvs/filemod.o
 test1/cvs/filenew.c
 test1/cvs/fileoth
 test1/cvs/fileutd.h

Paths in 'myhost' client under test1/cvs/diroth in DB
Database open r-o for 'myhost'
Database closed for 'myhost'
Records found: 0

Paths in 'myhost' client under test1/cvs/dirutd in DB
Database open r-o for 'myhost'
Database closed for 'myhost'
Records found: 3
 test1/cvs/dirutd/CVS/
 test1/cvs/dirutd/fileoth
 test1/cvs/dirutd/fileutd

Paths in 'not_here' client
Error: Directory does not exist 'not_here', aborting
Database closed
Create list of clients
>List 3 client(s):
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 --> Paths:
 ---> Path: test1/cvs
Backing up client 'myhost'
Reading list of problematic checksums
Database open r/w for 'myhost'
Backing up path 'test1/cvs'
CVS\r
CVS/Wherever\r
dir space   \r
dir space/CVS\r
dirbad       \r
diroth\r
dirutd\r
dirutd/CVS\r
Database closed for 'myhost'
Trying client 'myhost2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myhost2/C$ test_db/mount
 -> Reading client configuration file for 'myhost2'
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 --> Paths:
 ---> Path: C:/Test Dir
Backing up client 'myhost2'
Database open r/w for 'myhost2'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myhost2'
 -> umount -fl test_db/mount
Trying client 'myhost3' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User test_db/mount
 -> Reading client configuration file for 'myhost3'
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
 --> Paths:
 ---> Path: /home/User/test
Backing up client 'myhost3'
Database open r/w for 'myhost3'
Backing up path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User/test test_db/mount
dir\r
Database closed for 'myhost3'
 -> umount -fl test_db/mount
Database closed
Create list of clients
>List 2 client(s):
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myhost2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myhost2/C$ test_db/mount
 -> Reading client configuration file for 'myhost2'
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 --> Paths:
 ---> Path: C:/Test Dir
Backing up client 'myhost2'
Reading list of problematic checksums
Database open r/w for 'myhost2'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myhost2'
 -> umount -fl test_db/mount
Trying client 'myhost3' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User test_db/mount
 -> Reading client configuration file for 'myhost3'
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
 --> Paths:
 ---> Path: /home/User/test
Backing up client 'myhost3'
Database open r/w for 'myhost3'
Backing up path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User/test test_db/mount
dir\r
Database closed for 'myhost3'
 -> umount -fl test_db/mount
Database closed
Create list of clients
>List 2 client(s):
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 --> Paths:
 ---> Path: test1/cvs
Backing up client 'myhost'
Reading list of problematic checksums
Database open r/w for 'myhost'
Backing up path 'test1/cvs'
CVS\r
CVS/Wherever\r
dir space   \r
dir space/CVS\r
dirbad       \r
diroth\r
dirutd\r
dirutd/CVS\r
Database closed for 'myhost'
Trying client 'myhost3' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User test_db/mount
 -> Reading client configuration file for 'myhost3'
 -> Client: myhost3
 --> Protocol: nfs
 --> Config: /home/User/testhost3.list
 --> Expiry: none
 --> Paths:
 ---> Path: /home/User/test
Backing up client 'myhost3'
Database open r/w for 'myhost3'
Backing up path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myhost3:/home/User/test test_db/mount
dir\r
Database closed for 'myhost3'
 -> umount -fl test_db/mount
Database closed
Create list of clients
>List 2 client(s):
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
Database open in read/write mode
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Config: etc/testhost.list
 --> Expiry: none
 --> Paths:
 ---> Path: test1/cvs
Backing up client 'myhost'
Reading list of problematic checksums
Database open r/w for 'myhost'
Backing up path 'test1/cvs'
CVS\r
CVS/Wherever\r
dir space   \r
dir space/CVS\r
dirbad       \r
diroth\r
dirutd\r
dirutd/CVS\r
Database closed for 'myhost'
Trying client 'myhost2' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myhost2/C$ test_db/mount
 -> Reading client configuration file for 'myhost2'
 -> Client: myhost2
 --> Protocol: smb
 --> Config: C:/Backup/testhost2.list
 --> Expiry: none
 --> Paths:
 ---> Path: C:/Test Dir
Backing up client 'myhost2'
Database open r/w for 'myhost2'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myhost2'
 -> umount -fl test_db/mount
Database closed
Second mount fails
>List 1 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Compress filter: compress
 ---> Path: /home/User/test2
Backing up client 'myClient'
Reading list of problematic checksums
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
dir\r
Backing up path '/home/User/test2'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test2 test_db/mount
Error: Connection timed out connecting to client 'myClient', aborting client
Database closed for 'myClient'
Database closed
First mount fails
>List 1 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Compress filter: compress
 ---> Path: /home/User/test2
Backing up client 'myClient'
Reading list of problematic checksums
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
Error: Connection timed out connecting to client 'myClient', aborting client
Database closed for 'myClient'
Database closed
Works again
>List 1 client(s):
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Compress filter: compress
 ---> Path: /home/User/test2
Backing up client 'myClient'
Reading list of problematic checksums
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
dir\r
Backing up path '/home/User/test2'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test2 test_db/mount
Database closed for 'myClient'
 -> umount -fl test_db/mount
Database closed
Test with dual boot client
>List 1 client(s):
 -> Client: myClient
 --> Required subset: xp
 --> Protocol: smb
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
Database open in read/write mode
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/mount
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
Backing up client 'myClient.xp'
Reading list of problematic checksums
Register created for 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
Ad      C:/Test Dir/My Dir
My Dir\r
Af ~    C:/Test Dir/My Dir/a File.TXT
Af ~    C:/Test Dir/My Dir/another File.TXT
Af ~    C:/Test Dir/My File.TXT
Register modified for 'myClient.xp'
Database closed for 'myClient.xp'
Backup::add(test_db/myClient.xp)
 -> umount -fl test_db/mount
Database closed

Clients in DB
Records found: 8
 myClient
 myClient.xp
 myhost
 myhost2
 myhost3
 otherClient
 otherClient1
 testhost
