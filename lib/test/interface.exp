
Test: wrong config file
Error: : No such file or directory opening file

Test: backup, not initialized
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Error: Given DB path does not exist: test_db

Test: check config
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 -> Reading client configuration file: localhost
 -> Client: localhost
 --> Protocol: file
 --> Config: test_user/.hbackup/config
 --> Expiry: none
 --> Paths: 
 ---> Path: test_user/testuser
 ----> No error if same file fails copy again

Test: typical backup
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database initialized: test_db
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
List created: aClient.vista
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
A d     C:/Test Dir/My Dir
My Dir\r
      \r
Checking data, sizes: f=2 z=36 (36)
Adding uncompressed data for b026324c6904b2a9cb4b88d6d61c81d1-0
A f     C:/Test Dir/My Dir/a File.TXT
Checking data, sizes: f=2 z=36 (36)
Adding uncompressed data for 26ab0db90d72e28ad0ba1e22ee510510-0
A f     C:/Test Dir/My Dir/another File.TXT
Checking data, sizes: f=0 z=0 (0)
Adding uncompressed data for d41d8cd98f00b204e9800998ecf8427e-0
A f     C:/Test Dir/My File.TXT
Database modified: aClient.vista
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
List created: client.xp
Database open r/w: client.xp
Backing up path: C:/Test Dir
A d     C:/Test Dir/My Dir
My Dir\r
      \r
Checking data, sizes: f=2 z=36 (36)
A ~     C:/Test Dir/My Dir/a File.TXT
Checking data, sizes: f=2 z=36 (36)
A ~     C:/Test Dir/My Dir/another File.TXT
Checking data, sizes: f=0 z=0 (0)
A ~     C:/Test Dir/My File.TXT
Database modified: client.xp
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
List created: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
Checking data, sizes: f=0 z=0 (0)
A ~     /home/User/test/File2.txt
A d     /home/User/test/dir
dir\r
   \r
Checking data, sizes: f=2 z=36 (36)
Adding uncompressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
A f     /home/User/test/dir/file3.txt
Database modified: myClient
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
List created: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
A d     C:/Test Dir/My Dir
My Dir\r
      \r
Checking data, sizes: f=2 z=36 (36)
A ~     C:/Test Dir/My Dir/a File.TXT
Checking data, sizes: f=2 z=36 (36)
A ~     C:/Test Dir/My Dir/another File.TXT
Checking data, sizes: f=0 z=0 (0)
A ~     C:/Test Dir/My File.TXT
Database modified: myClient.xp
Database closed: myClient.xp
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
List created: myhost
Database open r/w: myhost
Backing up path: test1
Done:   5.0%\r
Done:  10.0%\r
Done:  15.0%\r
Done:  20.0%\r
Done:  25.0%\r
Done:  30.0%\r
Done:  35.0%\r
Done:  40.0%\r
Done:  45.0%\r
Done:  50.0%\r
Done:  55.0%\r
Done:  60.0%\r
Done:  65.0%\r
Done:  70.0%\r
Done:  75.0%\r
Done:  80.0%\r
Done:  85.0%\r
Done:  90.0%\r
Done:  95.0%\r
            \r
Checking data, sizes: f=10485760 z=10222 (10381)
Adding compressed data for f1c9645dbc14efddc7d8a322685f26eb-0
A z     test1/big_file
A d     test1/cvs
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
A d     test1/cvs/CVS
cvs/CVS\r
       \r
Adding uncompressed data for fef51838cd3cfe8ed96355742eb71fbd-0
A f     test1/cvs/CVS/Entries
Checking data, sizes: f=16 z=50 (50)
Adding uncompressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
A f     test1/cvs/CVS/Root
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
A d     test1/cvs/dirbad
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
A d     test1/cvs/dirutd
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
A d     test1/cvs/dirutd/CVS
cvs/dirutd/CVS\r
              \r
Adding uncompressed data for 5252f242d27b8c2c9fdbdcbb33545d07-0
A f     test1/cvs/dirutd/CVS/Entries
Checking data, sizes: f=10 z=44 (44)
Adding uncompressed data for eb75fb33b2019ef3c840eb5ccdc2e795-0
A f     test1/cvs/dirutd/CVS/Root
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
Checking data, sizes: f=0 z=0 (0)
A ~     test1/cvs/dirutd/fileutd
I f f   test1/cvs/filemod.o
Checking data, sizes: f=0 z=0 (0)
A ~     test1/cvs/filenew.c
I f p   test1/cvs/fileoth
Checking data, sizes: f=0 z=0 (0)
A ~     test1/cvs/fileutd.h
A d     test1/dir space
dir space\r
         \r
Checking data, sizes: f=0 z=0 (0)
A ~     test1/dir space/file space
A l     test1/dir space/link space
I d f   test1/subdir
A d     test1/svn
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
A d     test1/svn/.svn
svn/.svn\r
        \r
Checking data, sizes: f=77 z=79 (80)
Adding uncompressed data for 0f2ea973d77135dc3d06c8e68da6dc59-0
A f     test1/svn/.svn/entries
I f p   test1/svn/.svn/format
I f p   test1/svn/.svn/whatever
I d p   test1/svn/.svn/wherever
A d     test1/svn/dirbad
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
I f p   test1/svn/dirbad/fileoth
I f p   test1/svn/dirbad/fileutd
I d p   test1/svn/diroth
A d     test1/svn/dirutd
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
A d     test1/svn/dirutd/.svn
svn/dirutd/.svn\r
               \r
Checking data, sizes: f=30 z=52 (52)
Adding uncompressed data for 8bdef5751e46ed57d237cbe3f4a5061c-0
A f     test1/svn/dirutd/.svn/entries
I f p   test1/svn/dirutd/.svn/format
I f p   test1/svn/dirutd/.svn/whatever
I f p   test1/svn/dirutd/fileoth
Checking data, sizes: f=0 z=0 (0)
A ~     test1/svn/dirutd/fileutd
I f f   test1/svn/filemod.o
Checking data, sizes: f=0 z=0 (0)
A ~     test1/svn/filenew.c
I f p   test1/svn/fileoth
I f p   test1/svn/fileutd.h
Checking data, sizes: f=0 z=0 (0)
A ~     test1/test space
A d     test1/testdir
testdir\r
       \r
Checking data, sizes: f=13 z=47 (47)
Adding uncompressed data for 59ca0efa9f5633cb0371bbc0355478d8-0
A f     test1/testfile
I f f   test1/testfile~
A l     test1/testlink
A p     test1/testpipe
Backing up path: test2
A d     test2/testdir
testdir\r
       \r
Checking data, sizes: f=145408 z=190 (192)
Adding compressed data for 3d546a1ce46c6ae10ad34ab8a81c542e-0
A z     test2/testfile
Checking data, sizes: f=259072 z=300 (304)
Adding compressed data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
A z     test2/testfile2
Checking data, sizes: f=145461 z=145518 (147791)
Adding uncompressed data for f81f70dceaca8b0cec354f33fa3f0909-0
A f     test2/testfile2.gz
Checking data, sizes: f=524288 z=557 (565)
Adding compressed data for 59071590099d21dd439896592338bf95-0
A z     test2/testfile~
A l     test2/testlink
Database modified: myhost
Database closed: myhost
Trying client 'other' using protocol 'ssh'
Error: other: Protocol not supported ssh
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"

Test: same backup
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
      \r
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
   \r
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myClient.xp
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
Database open r/w: myhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
I f f   test1/cvs/filemod.o
I f p   test1/cvs/fileoth
dir space\r
         \r
I d f   test1/subdir
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
svn/.svn\r
        \r
I f p   test1/svn/.svn/format
I f p   test1/svn/.svn/whatever
I d p   test1/svn/.svn/wherever
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
I f p   test1/svn/dirbad/fileoth
I f p   test1/svn/dirbad/fileutd
I d p   test1/svn/diroth
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
svn/dirutd/.svn\r
               \r
I f p   test1/svn/dirutd/.svn/format
I f p   test1/svn/dirutd/.svn/whatever
I f p   test1/svn/dirutd/fileoth
I f f   test1/svn/filemod.o
I f p   test1/svn/fileoth
I f p   test1/svn/fileutd.h
testdir\r
       \r
I f f   test1/testfile~
Backing up path: test2
testdir\r
       \r
Database closed: myhost
Trying client 'other' using protocol 'ssh'
Error: other: Protocol not supported ssh
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"

Test: interrupted backup
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
      \r
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
   \r
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myClient.xp
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
Database open r/w: myhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
I f f   test1/cvs/filemod.o
I f p   test1/cvs/fileoth
dir space\r
         \r
Killing trigger reached: 2
Error: myhost:test1/dir space/big_file: Operation canceled backing up file
A !     test1/dir space/big_file
Database closed: myhost
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Warning: Previous backup interrupted: myhost
Database modified: myhost
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
      \r
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
   \r
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myClient.xp
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
Database open r/w: myhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
I f f   test1/cvs/filemod.o
I f p   test1/cvs/fileoth
dir space\r
         \r
Killing trigger reached: 2
! !     test1/dir space/big_file
Database closed: myhost
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"

Test: force-compress DB data

Test: specify clients
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Reading list of problematic checksums
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
Database open r/w: myhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
I f f   test1/cvs/filemod.o
I f p   test1/cvs/fileoth
dir space\r
         \r
Checking data, sizes: f=512000 z=545 (553)
Adding compressed data for 816df6f64deba63b029ca19d880ee10a-0
! z     test1/dir space/big_file
I d f   test1/subdir
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
svn/.svn\r
        \r
I f p   test1/svn/.svn/format
I f p   test1/svn/.svn/whatever
I d p   test1/svn/.svn/wherever
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
I f p   test1/svn/dirbad/fileoth
I f p   test1/svn/dirbad/fileutd
I d p   test1/svn/diroth
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
svn/dirutd/.svn\r
               \r
I f p   test1/svn/dirutd/.svn/format
I f p   test1/svn/dirutd/.svn/whatever
I f p   test1/svn/dirutd/fileoth
I f f   test1/svn/filemod.o
I f p   test1/svn/fileoth
I f p   test1/svn/fileutd.h
testdir\r
       \r
I f f   test1/testfile~
Backing up path: test2
testdir\r
       \r
Database modified: myhost
Database closed: myhost
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"

Test: scan DB
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 17 checksums
Crawling through DB
0f2ea973d77135dc3d06c8e68da6dc59-0 77\r
26ab0db90d72e28ad0ba1e22ee510510-0 2 \r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
59ca0efa9f5633cb0371bbc0355478d8-0 13    \r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
b90f8fa56ea1d39881d4a199c7a81d35-0 16\r
d41d8cd98f00b204e9800998ecf8427e-0 0 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
fef51838cd3cfe8ed96355742eb71fbd-0 161   \r
                                      \r
Found 17 valid and 0 broken data files
Checksum(s) from list: 17
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 17
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Database closed

Test: check DB
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Crawling through DB data
0f2ea973d77135dc3d06c8e68da6dc59-0 77\r
26ab0db90d72e28ad0ba1e22ee510510-0 2 \r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
59ca0efa9f5633cb0371bbc0355478d8-0 13    \r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
b90f8fa56ea1d39881d4a199c7a81d35-0 16\r
d41d8cd98f00b204e9800998ecf8427e-0 0 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
fef51838cd3cfe8ed96355742eb71fbd-0 161   \r
                                      \r
Found 17 valid and 0 broken data files
Database closed

Test: list clients
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Value: aClient.vista
Value: client.xp
Value: myClient
Value: myClient.xp
Value: myhost
Database closed

Test: list paths in UNIX client 'myClient'
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
Database closed: myClient
Value: /home/
Database closed

Test: list paths in DOS client 'client.xp'
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: client.xp
Database closed: client.xp
Value: C:/
Database closed

Test: restore file
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myhost
U test_r/test2/testfile
Database closed: myhost
Database closed

Test: restore dir
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myhost
U test_r/test1/big_file
U test_r/test1/cvs
U test_r/test1/cvs/CVS
U test_r/test1/cvs/CVS/Entries
U test_r/test1/cvs/CVS/Root
U test_r/test1/cvs/dirbad
U test_r/test1/cvs/dirutd
U test_r/test1/cvs/dirutd/CVS
U test_r/test1/cvs/dirutd/CVS/Entries
U test_r/test1/cvs/dirutd/CVS/Root
U test_r/test1/cvs/dirutd/fileutd
U test_r/test1/cvs/filenew.c
U test_r/test1/cvs/fileutd.h
U test_r/test1/dir space
U test_r/test1/dir space/big_file
U test_r/test1/dir space/file space
U test_r/test1/dir space/link space
U test_r/test1/svn
U test_r/test1/svn/.svn
U test_r/test1/svn/.svn/entries
U test_r/test1/svn/dirbad
U test_r/test1/svn/dirutd
U test_r/test1/svn/dirutd/.svn
U test_r/test1/svn/dirutd/.svn/entries
U test_r/test1/svn/dirutd/fileutd
U test_r/test1/svn/filenew.c
U test_r/test1/test space
U test_r/test1/testdir
U test_r/test1/testfile
U test_r/test1/testlink
U test_r/test1/testpipe
Database closed: myhost
Database closed
test1/testfile metadata: gid = 24, mtime = 1161475200, perms = 0750

Test: restore subdir
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myhost
U test_r/test1/cvs
U test_r/test1/cvs/CVS
U test_r/test1/cvs/CVS/Entries
U test_r/test1/cvs/CVS/Root
U test_r/test1/cvs/dirbad
U test_r/test1/cvs/dirutd
U test_r/test1/cvs/dirutd/CVS
U test_r/test1/cvs/dirutd/CVS/Entries
U test_r/test1/cvs/dirutd/CVS/Root
U test_r/test1/cvs/dirutd/fileutd
U test_r/test1/cvs/filenew.c
U test_r/test1/cvs/fileutd.h
Database closed: myhost
Database closed

Test: restore client
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myhost
U test_r/test1/big_file
U test_r/test1/cvs
U test_r/test1/cvs/CVS
U test_r/test1/cvs/CVS/Entries
U test_r/test1/cvs/CVS/Root
U test_r/test1/cvs/dirbad
U test_r/test1/cvs/dirutd
U test_r/test1/cvs/dirutd/CVS
U test_r/test1/cvs/dirutd/CVS/Entries
U test_r/test1/cvs/dirutd/CVS/Root
U test_r/test1/cvs/dirutd/fileutd
U test_r/test1/cvs/filenew.c
U test_r/test1/cvs/fileutd.h
U test_r/test1/dir space
U test_r/test1/dir space/big_file
U test_r/test1/dir space/file space
U test_r/test1/dir space/link space
U test_r/test1/svn
U test_r/test1/svn/.svn
U test_r/test1/svn/.svn/entries
U test_r/test1/svn/dirbad
U test_r/test1/svn/dirutd
U test_r/test1/svn/dirutd/.svn
U test_r/test1/svn/dirutd/.svn/entries
U test_r/test1/svn/dirutd/fileutd
U test_r/test1/svn/filenew.c
U test_r/test1/test space
U test_r/test1/testdir
U test_r/test1/testfile
U test_r/test1/testlink
U test_r/test1/testpipe
U test_r/test2/testdir
U test_r/test2/testfile
U test_r/test2/testfile2
U test_r/test2/testfile2.gz
U test_r/test2/testfile~
U test_r/test2/testlink
Database closed: myhost
Database closed

Test: typical backup
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
      \r
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
   \r
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myClient.xp
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
Database open r/w: myhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
I f f   test1/cvs/filemod.o
I f p   test1/cvs/fileoth
dir space\r
         \r
I d f   test1/subdir
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
svn/.svn\r
        \r
I f p   test1/svn/.svn/format
I f p   test1/svn/.svn/whatever
I d p   test1/svn/.svn/wherever
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
I f p   test1/svn/dirbad/fileoth
I f p   test1/svn/dirbad/fileutd
I d p   test1/svn/diroth
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
svn/dirutd/.svn\r
               \r
I f p   test1/svn/dirutd/.svn/format
I f p   test1/svn/dirutd/.svn/whatever
I f p   test1/svn/dirutd/fileoth
I f f   test1/svn/filemod.o
I f p   test1/svn/fileoth
I f p   test1/svn/fileutd.h
testdir\r
       \r
I f f   test1/testfile~
Backing up path: test2
testdir\r
       \r
Database closed: myhost
Trying client 'other' using protocol 'ssh'
Error: other: Protocol not supported ssh
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"

Test: specify clients
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Reading list of problematic checksums
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
   \r
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"

Test: user-mode backup
 --> DB path: test_user/.hbackup
 --> Selected clients:
 ---> localhost
 --> Clients:
 ---> Client: localhost
 ----> Protocol: file
 ----> Config: test_user/.hbackup/config
 ----> Expiry: none
Database initialized: test_user/.hbackup
Database open in read/write mode
 -> Reading client configuration file: localhost
 -> Client: localhost
 --> Protocol: file
 --> Config: test_user/.hbackup/config
 --> Expiry: none
 --> Paths: 
 ---> Path: test_user/testuser
 ----> No error if same file fails copy again
Reading list of problematic checksums
List created: localhost
Database open r/w: localhost
Backing up path: test_user/testuser
Adding uncompressed data for 31d30eea8d0968d6458e0ad0027c9f80-0
A f     test_user/testuser/f1.txt
A d     test_user/testuser/subdir
subdir\r
      \r
Adding uncompressed data for dbbf8220893d497d403bb9cdf49db7a4-0
A f     test_user/testuser/subdir/f2.txt
A d     test_user/testuser/subdir2
subdir2\r
       \r
Adding uncompressed data for d5b4c7d9b06b60a7846c4529834c9812-0
A f     test_user/testuser/subdir2/f3.txt
Adding uncompressed data for 90e2a51705594d033a3abe9d77b2b7ad-0
A f     test_user/testuser/subdir2/f4.txt
Database modified: localhost
Database closed: localhost
Database closed

Test: list clients
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Value: aClient.vista
Value: client.xp
Value: myClient
Value: myClient.xp
Value: myhost
Database closed

Test: list paths in DOS client 'myClient.xp'
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
Database closed: myClient.xp
Value: C:/
Database closed

Test: list paths in dual-boot client 'myClient*'
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
Database closed: myClient
Database open r-o: myClient.xp
Database closed: myClient.xp
Value: /home/
Value: C:/
Database closed

Test: list sub-paths in UNIX client 'myClient'
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
Database closed: myClient
Value: /home/User/
Database closed

Test: list sub-paths in DOS client 'myClient.xp', 'C:'
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
Database closed: myClient.xp
Value: C:/Test Dir/
Database closed

Test: restore file (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
U test_r//home/User/test/File2.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
f	test_r/home/User/test/File2.txt

Test: restore subdir (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
U test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
U test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt

Test: restore dir (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
U test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
U test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt

Test: restore client (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
U test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
U test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt

Test: restore file (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
f	test_r/C:/Test Dir/My File.TXT

Test: restore subdir (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
U test_r/C:/Test Dir/My Dir/a File.TXT
U test_r/C:/Test Dir/My Dir/another File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT

Test: restore dir (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
U test_r/C:/Test Dir/My Dir/a File.TXT
U test_r/C:/Test Dir/My Dir/another File.TXT
U test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT

Test: restore client (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
U test_r/C:/Test Dir/My Dir/a File.TXT
U test_r/C:/Test Dir/My Dir/another File.TXT
U test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT

Test: restore client (dual-boot)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
U test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
U test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
U test_r/C:/Test Dir/My Dir/a File.TXT
U test_r/C:/Test Dir/My Dir/another File.TXT
U test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt

Test: restore (symlinks) file (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
L test_r//home/User/test/File2.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
l	test_r/home/User/test/File2.txt

Test: restore (symlinks) subdir (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
L test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
L test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
l	test_r/home/User/test/dir/file3.txt.gz
l	test_r/home/User/test/File2.txt

Test: restore (symlinks) dir (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
L test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
L test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
l	test_r/home/User/test/dir/file3.txt.gz
l	test_r/home/User/test/File2.txt

Test: restore (symlinks) client (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
L test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
L test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
l	test_r/home/User/test/dir/file3.txt.gz
l	test_r/home/User/test/File2.txt

Test: restore (symlinks) file (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
L test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
l	test_r/C:/Test Dir/My File.TXT

Test: restore (symlinks) subdir (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
L test_r/C:/Test Dir/My Dir/a File.TXT
L test_r/C:/Test Dir/My Dir/another File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
l	test_r/C:/Test Dir/My Dir/a File.TXT
l	test_r/C:/Test Dir/My Dir/another File.TXT

Test: restore (symlinks) dir (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
L test_r/C:/Test Dir/My Dir/a File.TXT
L test_r/C:/Test Dir/My Dir/another File.TXT
L test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
l	test_r/C:/Test Dir/My Dir/a File.TXT
l	test_r/C:/Test Dir/My Dir/another File.TXT
l	test_r/C:/Test Dir/My File.TXT

Test: restore (symlinks) client (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
L test_r/C:/Test Dir/My Dir/a File.TXT
L test_r/C:/Test Dir/My Dir/another File.TXT
L test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
l	test_r/C:/Test Dir/My Dir/a File.TXT
l	test_r/C:/Test Dir/My Dir/another File.TXT
l	test_r/C:/Test Dir/My File.TXT

Test: restore (symlinks) client (dual-boot)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
L test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
L test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
L test_r/C:/Test Dir/My Dir/a File.TXT
L test_r/C:/Test Dir/My Dir/another File.TXT
L test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
test_db/.data/6d7fce9fee471194aa8b5b6e47267f03-0/data.gz
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
l	test_r/C:/Test Dir/My Dir/a File.TXT
l	test_r/C:/Test Dir/My Dir/another File.TXT
l	test_r/C:/Test Dir/My File.TXT
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
l	test_r/home/User/test/dir/file3.txt.gz
l	test_r/home/User/test/File2.txt

Test: restore (hard links) file (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
H test_r//home/User/test/File2.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
f	test_r/home/User/test/File2.txt

Test: restore (hard links) subdir (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
H test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
H test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt.gz
f	test_r/home/User/test/File2.txt

Test: restore (hard links) dir (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
H test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
H test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt.gz
f	test_r/home/User/test/File2.txt

Test: restore (hard links) client (UNIX)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
H test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
H test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt.gz
f	test_r/home/User/test/File2.txt

Test: restore (hard links) file (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
H test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
f	test_r/C:/Test Dir/My File.TXT

Test: restore (hard links) subdir (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
H test_r/C:/Test Dir/My Dir/a File.TXT
H test_r/C:/Test Dir/My Dir/another File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT

Test: restore (hard links) dir (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
H test_r/C:/Test Dir/My Dir/a File.TXT
H test_r/C:/Test Dir/My Dir/another File.TXT
H test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT

Test: restore (hard links) client (DOS)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
H test_r/C:/Test Dir/My Dir/a File.TXT
H test_r/C:/Test Dir/My Dir/another File.TXT
H test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT

Test: restore (hard links) client (dual-boot)
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Selected clients:
 ---> myClient
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Database open r-o: myClient
H test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
H test_r//home/User/test/dir/file3.txt
Database closed: myClient
Database open r-o: myClient.xp
U test_r/C:/Test Dir/My Dir
H test_r/C:/Test Dir/My Dir/a File.TXT
H test_r/C:/Test Dir/My Dir/another File.TXT
H test_r/C:/Test Dir/My File.TXT
Database closed: myClient.xp
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt.gz
f	test_r/home/User/test/File2.txt

Test: check for corrupted data
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Check
Database open in read-only mode
Crawling through DB data
0f2ea973d77135dc3d06c8e68da6dc59-0 1\r
                                    \r
Error: 0f2ea973d77135dc3d06c8e68da6dc59-0: Data corrupted
Checksum: 68b329da9893e34099c7d8ad5cb9c940
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
                                         \r
Error: 59ca0efa9f5633cb0371bbc0355478d8-0: Data missing
6d7fce9fee471194aa8b5b6e47267f03-0 2\r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
b90f8fa56ea1d39881d4a199c7a81d35-0 1\r
                                    \r
Error: b90f8fa56ea1d39881d4a199c7a81d35-0: Data corrupted
Checksum: 68b329da9893e34099c7d8ad5cb9c940
d41d8cd98f00b204e9800998ecf8427e-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
fef51838cd3cfe8ed96355742eb71fbd-0 1     \r
                                    \r
Error: fef51838cd3cfe8ed96355742eb71fbd-0: Data corrupted
Checksum: 68b329da9893e34099c7d8ad5cb9c940
Found 13 valid and 4 broken data files
Database closed

Test: check for corrupted data again
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Check
Database open in read-only mode
Crawling through DB data
0f2ea973d77135dc3d06c8e68da6dc59-0 1\r
                                    \r
Error: 0f2ea973d77135dc3d06c8e68da6dc59-0: Data corruption reported
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
                                         \r
Error: 59ca0efa9f5633cb0371bbc0355478d8-0: Data missing
6d7fce9fee471194aa8b5b6e47267f03-0 2\r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
b90f8fa56ea1d39881d4a199c7a81d35-0 1\r
                                    \r
Error: b90f8fa56ea1d39881d4a199c7a81d35-0: Data corruption reported
d41d8cd98f00b204e9800998ecf8427e-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
fef51838cd3cfe8ed96355742eb71fbd-0 1     \r
                                    \r
Error: fef51838cd3cfe8ed96355742eb71fbd-0: Data corruption reported
Found 13 valid and 4 broken data files
Database closed

Test: scan for missing data
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Just scan
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 16 checksums
Crawling through DB
Error: 0f2ea973d77135dc3d06c8e68da6dc59-0: Data missing
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
                                         \r
Error: 59ca0efa9f5633cb0371bbc0355478d8-0: Data missing
6d7fce9fee471194aa8b5b6e47267f03-0 2\r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
b90f8fa56ea1d39881d4a199c7a81d35-0 1\r
                                    \r
b90f8fa56ea1d39881d4a199c7a81d35-0: Remove corrupted data
d41d8cd98f00b204e9800998ecf8427e-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
fef51838cd3cfe8ed96355742eb71fbd-0 1     \r
                                    \r
fef51838cd3cfe8ed96355742eb71fbd-0: Remove corrupted data
Found 13 valid and 4 broken data files
Checksum(s) from list: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 13
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Obsolete checksum(s): 1
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
Warning: Problematic checksum(s): 5
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0: missing
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0: missing
 -> d41d8cd98f00b204e9800998ecf8427e-0: inconsistent
 -> fef51838cd3cfe8ed96355742eb71fbd-0: missing
Missing checksums list updated
List of problematic checksums contains 5 item(s)
Database closed
Just scan again
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 16 checksums
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
6d7fce9fee471194aa8b5b6e47267f03-0 2     \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
d41d8cd98f00b204e9800998ecf8427e-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
                                         \r
Found 13 valid and 0 broken data files
Checksum(s) from list: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 13
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Obsolete checksum(s): 1
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
Warning: Problematic checksum(s): 5
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0: missing
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0: missing
 -> d41d8cd98f00b204e9800998ecf8427e-0: inconsistent
 -> fef51838cd3cfe8ed96355742eb71fbd-0: missing
Missing checksums list updated
List of problematic checksums contains 5 item(s)
Database closed

Test: scan for obsolete data, case1
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Just scan
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 16 checksums
Crawling through DB
00000000000000000000000000000000-0 0\r
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
6d7fce9fee471194aa8b5b6e47267f03-0 2     \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
88888888888888888888888888888888-0 0     \r
8bdef5751e46ed57d237cbe3f4a5061c-0 30\r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
d41d8cd98f00b204e9800998ecf8427e-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
ffffffffffffffffffffffffffffffff-0 0     \r
                                    \r
Found 16 valid and 0 broken data files
Checksum(s) from list: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 16
 -> 00000000000000000000000000000000-0, 0
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 88888888888888888888888888888888-0, 0
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> ffffffffffffffffffffffffffffffff-0, 0
Obsolete checksum(s): 4
 -> 00000000000000000000000000000000-0
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
 -> 88888888888888888888888888888888-0
 -> ffffffffffffffffffffffffffffffff-0
Warning: Problematic checksum(s): 5
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0: missing
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0: missing
 -> d41d8cd98f00b204e9800998ecf8427e-0: inconsistent
 -> fef51838cd3cfe8ed96355742eb71fbd-0: missing
Missing checksums list updated
List of problematic checksums contains 5 item(s)
Database closed
Scan and remove
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 16 checksums
Crawling through DB
00000000000000000000000000000000-0 0\r
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
6d7fce9fee471194aa8b5b6e47267f03-0 2     \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
88888888888888888888888888888888-0 0     \r
8bdef5751e46ed57d237cbe3f4a5061c-0 30\r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
d41d8cd98f00b204e9800998ecf8427e-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
ffffffffffffffffffffffffffffffff-0 0     \r
                                    \r
Found 16 valid and 0 broken data files
Checksum(s) from list: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 16
 -> 00000000000000000000000000000000-0, 0
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 88888888888888888888888888888888-0, 0
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> ffffffffffffffffffffffffffffffff-0, 0
Obsolete checksum(s): 4
 -> 00000000000000000000000000000000-0: removed
 -> 6d7fce9fee471194aa8b5b6e47267f03-0: removed
 -> 88888888888888888888888888888888-0: removed
 -> ffffffffffffffffffffffffffffffff-0: removed
Warning: Problematic checksum(s): 5
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0: missing
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0: missing
 -> d41d8cd98f00b204e9800998ecf8427e-0: inconsistent
 -> fef51838cd3cfe8ed96355742eb71fbd-0: missing
Missing checksums list updated
List of problematic checksums contains 5 item(s)
Database closed
Just scan again
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 16 checksums
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
d41d8cd98f00b204e9800998ecf8427e-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
                                         \r
Found 12 valid and 0 broken data files
Checksum(s) from list: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 12
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Warning: Problematic checksum(s): 5
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0: missing
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0: missing
 -> d41d8cd98f00b204e9800998ecf8427e-0: inconsistent
 -> fef51838cd3cfe8ed96355742eb71fbd-0: missing
Missing checksums list updated
List of problematic checksums contains 5 item(s)
Database closed

Test: scan for obsolete data, case 2
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Just scan
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 16 checksums
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
33333333333333333333333333333333-0 0\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
77777777777777777777777777777777-0 0     \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
d41d8cd98f00b204e9800998ecf8427e-0 0\r
dddddddddddddddddddddddddddddddd-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
                                         \r
Found 15 valid and 0 broken data files
Checksum(s) from list: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 15
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 33333333333333333333333333333333-0, 0
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 77777777777777777777777777777777-0, 0
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> dddddddddddddddddddddddddddddddd-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Obsolete checksum(s): 3
 -> 33333333333333333333333333333333-0
 -> 77777777777777777777777777777777-0
 -> dddddddddddddddddddddddddddddddd-0
Warning: Problematic checksum(s): 5
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0: missing
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0: missing
 -> d41d8cd98f00b204e9800998ecf8427e-0: inconsistent
 -> fef51838cd3cfe8ed96355742eb71fbd-0: missing
Missing checksums list updated
List of problematic checksums contains 5 item(s)
Database closed
Scan and remove
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 16 checksums
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
33333333333333333333333333333333-0 0\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
77777777777777777777777777777777-0 0     \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
d41d8cd98f00b204e9800998ecf8427e-0 0\r
dddddddddddddddddddddddddddddddd-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
                                         \r
Found 15 valid and 0 broken data files
Checksum(s) from list: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 15
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 33333333333333333333333333333333-0, 0
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 77777777777777777777777777777777-0, 0
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> dddddddddddddddddddddddddddddddd-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Obsolete checksum(s): 3
 -> 33333333333333333333333333333333-0: removed
 -> 77777777777777777777777777777777-0: removed
 -> dddddddddddddddddddddddddddddddd-0: removed
Warning: Problematic checksum(s): 5
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0: missing
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0: missing
 -> d41d8cd98f00b204e9800998ecf8427e-0: inconsistent
 -> fef51838cd3cfe8ed96355742eb71fbd-0: missing
Missing checksums list updated
List of problematic checksums contains 5 item(s)
Database closed
Just scan again
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 16 checksums
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
d41d8cd98f00b204e9800998ecf8427e-0 0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072\r
                                         \r
Found 12 valid and 0 broken data files
Checksum(s) from list: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 12
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Warning: Problematic checksum(s): 5
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0: missing
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0: missing
 -> d41d8cd98f00b204e9800998ecf8427e-0: inconsistent
 -> fef51838cd3cfe8ed96355742eb71fbd-0: missing
Missing checksums list updated
List of problematic checksums contains 5 item(s)
Database closed

Test: backup recovers broken checksums + replace data
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
 -> Missing: 0f2ea973d77135dc3d06c8e68da6dc59-0
 -> Missing: 59ca0efa9f5633cb0371bbc0355478d8-0
 -> Missing: b90f8fa56ea1d39881d4a199c7a81d35-0
 -> Inconsistent: d41d8cd98f00b204e9800998ecf8427e-0
 -> Missing: fef51838cd3cfe8ed96355742eb71fbd-0
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
      \r
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
   \r
Checking data, sizes: f=2 z=36 (36)
Adding uncompressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
C f     /home/User/test/dir/file3.txt
Database modified: myClient
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myClient.xp
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
Database open r/w: myhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
Adding uncompressed data for fef51838cd3cfe8ed96355742eb71fbd-0
R f     test1/cvs/CVS/Entries
Checking data, sizes: f=16 z=50 (50)
Adding uncompressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
R f     test1/cvs/CVS/Root
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
I f f   test1/cvs/filemod.o
I f p   test1/cvs/fileoth
dir space\r
         \r
I d f   test1/subdir
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
svn/.svn\r
        \r
Checking data, sizes: f=77 z=79 (80)
Adding uncompressed data for 0f2ea973d77135dc3d06c8e68da6dc59-0
R f     test1/svn/.svn/entries
I f p   test1/svn/.svn/format
I f p   test1/svn/.svn/whatever
I d p   test1/svn/.svn/wherever
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
I f p   test1/svn/dirbad/fileoth
I f p   test1/svn/dirbad/fileutd
I d p   test1/svn/diroth
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
svn/dirutd/.svn\r
               \r
I f p   test1/svn/dirutd/.svn/format
I f p   test1/svn/dirutd/.svn/whatever
I f p   test1/svn/dirutd/fileoth
I f f   test1/svn/filemod.o
I f p   test1/svn/fileoth
I f p   test1/svn/fileutd.h
testdir\r
       \r
I f f   test1/testfile~
D       test1/testfile
Backing up path: test2
testdir\r
       \r
Checking data, sizes: f=259072 z=300 (304)
Replacing with compressed data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
M z r   test2/testfile2
Database modified: myhost
Database closed: myhost
Trying client 'other' using protocol 'ssh'
Error: other: Protocol not supported ssh
Missing checksums list updated
List of problematic checksums contains 2 item(s)
Database closed
data
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"

Test: second backup should not recover again
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
 -> Missing: 59ca0efa9f5633cb0371bbc0355478d8-0
 -> Inconsistent: d41d8cd98f00b204e9800998ecf8427e-0
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
      \r
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
   \r
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myClient.xp
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
Database open r/w: myhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
I f f   test1/cvs/filemod.o
I f p   test1/cvs/fileoth
dir space\r
         \r
I d f   test1/subdir
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
svn/.svn\r
        \r
I f p   test1/svn/.svn/format
I f p   test1/svn/.svn/whatever
I d p   test1/svn/.svn/wherever
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
I f p   test1/svn/dirbad/fileoth
I f p   test1/svn/dirbad/fileutd
I d p   test1/svn/diroth
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
svn/dirutd/.svn\r
               \r
I f p   test1/svn/dirutd/.svn/format
I f p   test1/svn/dirutd/.svn/whatever
I f p   test1/svn/dirutd/fileoth
I f f   test1/svn/filemod.o
I f p   test1/svn/fileoth
I f p   test1/svn/fileutd.h
testdir\r
       \r
I f f   test1/testfile~
Backing up path: test2
testdir\r
       \r
Database closed: myhost
Trying client 'other' using protocol 'ssh'
Error: other: Protocol not supported ssh
List of problematic checksums contains 2 item(s)
Database closed
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 17 checksums
Crawling through DB
0f2ea973d77135dc3d06c8e68da6dc59-0 77\r
26ab0db90d72e28ad0ba1e22ee510510-0 2 \r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 -1    \r
                                     \r
Checking data, sizes: f=42 z=76 (77)
Replacing with uncompressed data for 5252f242d27b8c2c9fdbdcbb33545d07-0
5252f242d27b8c2c9fdbdcbb33545d07-0: converted
59071590099d21dd439896592338bf95-0 524288\r
6d7fce9fee471194aa8b5b6e47267f03-0 2     \r
816df6f64deba63b029ca19d880ee10a-0 -1\r
                                     \r
Checking data, sizes: f=512000 z=545 (553)
Replacing with compressed data for 816df6f64deba63b029ca19d880ee10a-0
816df6f64deba63b029ca19d880ee10a-0: converted
8bdef5751e46ed57d237cbe3f4a5061c-0 30\r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
b90f8fa56ea1d39881d4a199c7a81d35-0 16\r
d41d8cd98f00b204e9800998ecf8427e-0 0 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 185   \r
fef51838cd3cfe8ed96355742eb71fbd-0 161\r
                                      \r
Found 16 valid and 0 broken data files
Checksum(s) from list: 17
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 16
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 185
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Warning: Problematic checksum(s): 2
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0: inconsistent
Missing checksums list updated
List of problematic checksums contains 2 item(s)
Database closed
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read-only mode
Crawling through DB data
0f2ea973d77135dc3d06c8e68da6dc59-0 77\r
26ab0db90d72e28ad0ba1e22ee510510-0 2 \r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
6d7fce9fee471194aa8b5b6e47267f03-0 2     \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
b90f8fa56ea1d39881d4a199c7a81d35-0 16\r
d41d8cd98f00b204e9800998ecf8427e-0 0 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 185   \r
                                      \r
Error: fb00cd74a5f35e89a7fbdd3c1d05375a-0: Data corrupted
Checksum: 0de026794b4612fbca289ed619a3ea9a
fef51838cd3cfe8ed96355742eb71fbd-0 161\r
                                      \r
Found 15 valid and 1 broken data files
Database closed
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Reading list: aClient.vista
Reading list: client.xp
Reading list: myClient
Reading list: myClient.xp
Reading list: myhost
Found 17 checksums
Crawling through DB
0f2ea973d77135dc3d06c8e68da6dc59-0 77\r
26ab0db90d72e28ad0ba1e22ee510510-0 2 \r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408\r
5252f242d27b8c2c9fdbdcbb33545d07-0 42    \r
59071590099d21dd439896592338bf95-0 524288\r
6d7fce9fee471194aa8b5b6e47267f03-0 2     \r
816df6f64deba63b029ca19d880ee10a-0 512000\r
8bdef5751e46ed57d237cbe3f4a5061c-0 30    \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 \r
b90f8fa56ea1d39881d4a199c7a81d35-0 16\r
d41d8cd98f00b204e9800998ecf8427e-0 0 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461  \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 185   \r
                                      \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0: Remove corrupted data
fef51838cd3cfe8ed96355742eb71fbd-0 161\r
                                      \r
Found 15 valid and 1 broken data files
Checksum(s) from list: 17
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Checksum(s) with data: 15
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0, 77
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59071590099d21dd439896592338bf95-0, 524288
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0, 30
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> fef51838cd3cfe8ed96355742eb71fbd-0, 161
Warning: Problematic checksum(s): 2
 -> 59ca0efa9f5633cb0371bbc0355478d8-0: missing
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0: missing
Missing checksums list updated
List of problematic checksums contains 2 item(s)
Database closed
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
 -> Missing: 59ca0efa9f5633cb0371bbc0355478d8-0
 -> Missing: fb00cd74a5f35e89a7fbdd3c1d05375a-0
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
      \r
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file: client.xp
 -> Client: client
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: client.xp
Database open r/w: client.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: client.xp
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file: myClient
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> No error if same file fails copy again
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> Paths: 
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name File2.txt
 -----> Condition: path dir/file3.txt
 ----> Compress filter: compress
Backing up client: myClient
Database open r/w: myClient
Backing up path: /home/User/test
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
   \r
Database closed: myClient
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file: myClient.xp
 -> Client: myClient
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Paths: 
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name a
 -----> Condition: name_start b
 -----> Condition: name_end c
 -----> Condition: name_regex d
 -----> Condition: path e
 -----> Condition: path_start f
 -----> Condition: path_end g
 -----> Condition: name_regex h
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 777
 -----> Condition: mode= 644
Backing up client: myClient.xp
Database open r/w: myClient.xp
Backing up path: C:/Test Dir
My Dir\r
      \r
Database closed: myClient.xp
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file: myhost
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> No error if same file fails copy again
 --> Config: etc/localhost.list
 --> Expiry: 86400s (1d)
 --> Filter: and subdir
 ---> Condition: path_start subdir
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Paths: 
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end .o
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: filter backup
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name Entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Ignore filter: to_be_ignored
 ---> Path: test2
Backing up client: myhost
Database open r/w: myhost
Backing up path: test1
cvs\r
   \r
 -> Parsing CVS entries
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
       \r
I f p   test1/cvs/CVS/Whatever
I d p   test1/cvs/CVS/Wherever
cvs/dirbad\r
          \r
Warning: test1/cvs/dirbad: Directory should be under CVS control
I f p   test1/cvs/dirbad/fileoth
I f p   test1/cvs/dirbad/fileutd
I d p   test1/cvs/diroth
cvs/dirutd\r
          \r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
              \r
I f p   test1/cvs/dirutd/CVS/Whatever
I f p   test1/cvs/dirutd/fileoth
I f f   test1/cvs/filemod.o
I f p   test1/cvs/fileoth
dir space\r
         \r
I d f   test1/subdir
svn\r
   \r
 -> Parsing Subversion entries
 --> diroth: o
 --> filemod.o: m
 --> filenew.c: m
 --> fileoth: i
svn/.svn\r
        \r
I f p   test1/svn/.svn/format
I f p   test1/svn/.svn/whatever
I d p   test1/svn/.svn/wherever
svn/dirbad\r
          \r
Warning: test1/svn/dirbad: Directory should be under Subversion control
I f p   test1/svn/dirbad/fileoth
I f p   test1/svn/dirbad/fileutd
I d p   test1/svn/diroth
svn/dirutd\r
          \r
 -> Parsing Subversion entries
 --> fileoth: o
 --> fileutd: m
svn/dirutd/.svn\r
               \r
I f p   test1/svn/dirutd/.svn/format
I f p   test1/svn/dirutd/.svn/whatever
I f p   test1/svn/dirutd/fileoth
I f f   test1/svn/filemod.o
I f p   test1/svn/fileoth
I f p   test1/svn/fileutd.h
testdir\r
       \r
I f f   test1/testfile~
Backing up path: test2
testdir\r
       \r
Checking data, sizes: f=259072 z=300 (304)
R ~     test2/testfile2
Database modified: myhost
Database closed: myhost
Trying client 'other' using protocol 'ssh'
Error: other: Protocol not supported ssh
Missing checksums list updated
List of problematic checksums contains 1 item(s)
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"

Test: declared path missing
 -> Reading configuration file: etc/hbackup.conf
 --> DB path: test_db
 --> Automatic compression
 --> Clients:
 ---> Client: aClient
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Paths: 
 -----> Path: C:/Test Dir
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Parser: Subversion
 ------> Compress filter: compress_m
 ------> Ignore filter: backup
 ------> No error if same file fails copy again
 ----> Required subset: vista
 ---> Client: client
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ---> Client: myClient
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Required subset: xp
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> No error if same file fails copy again
 ----> Config: etc/localhost.list
 ----> Expiry: 86400s (1d)
 ---> Client: other
 ----> Protocol: ssh
 ----> Hostname: otherClient
 ----> Config: /home/backup/Backup.list
 ----> Expiry: 86400s (1d)
 ----> Filter: and subdir
 -----> Condition: path_start subdir
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Paths: 
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end .o
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Parser: CVS
 ------> Parser: Subversion
 ------> Compress filter: bigfile
 ------> Ignore filter: to_be_ignored
 -----> Path: test2
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end ~
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client: aClient.vista
Reading list of problematic checksums
 -> Missing: 59ca0efa9f5633cb0371bbc0355478d8-0
Database open r/w: aClient.vista
Backing up path: C:/Test Dir
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
Error: aClient.vista:C:/Test Dir: No such file or directory reading initial directory
Error: Aborting client
Database closed: aClient.vista
 -> umount -fl test_db/.mount/aClient.vista
List of problematic checksums contains 1 item(s)
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "name_end" "c"
    condition "name_regex" "d"
    condition "path" "e"
    condition "path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "filter" "backup"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
