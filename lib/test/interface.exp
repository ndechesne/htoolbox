
Test: typical backup
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database initialized in test_db
Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/mount
Backup client 'client' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
A C:/Test/Dir
 -> Dir Dir
A C:/Test/Dir/a File.TXT (2 B)
Adding file data to DB in: test_db/data/b026324c6904b2a9cb4b88d6d61c81d1-0
A C:/Test/Dir/another File.TXT (2 B)
Adding file data to DB in: test_db/data/26ab0db90d72e28ad0ba1e22ee510510-0
A C:/Test/File.TXT (0 B)
Adding file data to DB in: test_db/data/d41d8cd98f00b204e9800998ecf8427e-0
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
A /home/User/test/File2.txt (0 B)
A /home/User/test/dir
 -> Dir dir
A /home/User/test/dir/file3.txt (2 B)
Adding file data to DB in: test_db/data/6d7fce9fee471194aa8b5b6e47267f03-0
 -> umount -fl test_db/mount
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Client-wide filter and subdir
 ---> Condition path_start subdir
 ---> Condition not size< 100
 --> Client-wide filter and bigfile
 ---> Condition size>= 10
 ---> Condition type file
 --> Expiry 1 day(s)
 --> Path: test2
 --> Path: test1
 --> Path-wide filter and not_object
 ---> Condition not path_end .o
 --> Path-wide filter or to_be_ignored
 ---> Condition filter subdir
 ---> Condition filter backup
 ---> Condition not filter not_object
Backup path 'test1'
A test1/bzr
 -> Dir bzr
A test1/bzr/.bzr
 -> Dir bzr/.bzr
A test1/bzr/dirbad
 -> Dir bzr/dirbad
A test1/bzr/dirbad/fileoth (0 B)
A test1/bzr/dirbad/fileutd (0 B)
A test1/bzr/diroth
 -> Dir bzr/diroth
A test1/bzr/dirutd
 -> Dir bzr/dirutd
A test1/bzr/dirutd/fileoth (0 B)
A test1/bzr/dirutd/fileutd (0 B)
A test1/bzr/filenew.c (0 B)
A test1/bzr/fileoth (0 B)
A test1/bzr/fileutd.h (0 B)
A test1/cvs
 -> Dir cvs
 -> Parsing CVS entries
 --> filenew.c	f	0
 --> filemod.o	f	1159806431
 --> fileutd.h	f	1159985080
 --> dirbad	d	0
 --> dirutd	d	0
A test1/cvs/CVS
 -> Dir cvs/CVS
A test1/cvs/CVS/Entries (161 B)
Adding compressed file data to DB in: test_db/data/fef51838cd3cfe8ed96355742eb71fbd-0
A test1/cvs/CVS/Root (16 B)
Adding compressed file data to DB in: test_db/data/b90f8fa56ea1d39881d4a199c7a81d35-0
A test1/cvs/dirbad
 -> Dir cvs/dirbad
Warning: Directory should be under CVS control: test1/cvs/dirbad
A test1/cvs/dirutd
 -> Dir cvs/dirutd
 -> Parsing CVS entries
 --> fileutd	f	1159985080
A test1/cvs/dirutd/CVS
 -> Dir cvs/dirutd/CVS
A test1/cvs/dirutd/CVS/Entries (42 B)
Adding compressed file data to DB in: test_db/data/5252f242d27b8c2c9fdbdcbb33545d07-0
A test1/cvs/dirutd/CVS/Root (10 B)
Adding compressed file data to DB in: test_db/data/eb75fb33b2019ef3c840eb5ccdc2e795-0
A test1/cvs/dirutd/fileutd (0 B)
A test1/cvs/filenew.c (0 B)
A test1/cvs/fileutd.h (0 B)
A test1/dir space
 -> Dir dir space
A test1/dir space/file space (0 B)
A test1/svn
 -> Dir svn
 -> Parsing Subversion entries
 --> filenew.c	m
 --> filemod.o	m
 --> fileoth	i
 --> diroth	o
A test1/svn/.svn
 -> Dir svn/.svn
A test1/svn/.svn/entries (77 B)
Adding compressed file data to DB in: test_db/data/0f2ea973d77135dc3d06c8e68da6dc59-0
A test1/svn/dirbad
 -> Dir svn/dirbad
Warning: Directory should be under Subversion control: test1/svn/dirbad
A test1/svn/dirutd
 -> Dir svn/dirutd
 -> Parsing Subversion entries
 --> fileutd	m
 --> fileoth	o
A test1/svn/dirutd/.svn
 -> Dir svn/dirutd/.svn
A test1/svn/dirutd/.svn/entries (30 B)
Adding compressed file data to DB in: test_db/data/8bdef5751e46ed57d237cbe3f4a5061c-0
A test1/svn/dirutd/fileutd (0 B)
A test1/svn/filenew.c (0 B)
A test1/test space (0 B)
A test1/testdir
 -> Dir testdir
A test1/testfile (13 B)
Adding compressed file data to DB in: test_db/data/59ca0efa9f5633cb0371bbc0355478d8-0
A test1/testlink
A test1/testpipe
Backup path 'test2'
A test2/testdir
 -> Dir testdir
A test2/testfile (145 kB)
Adding file data to DB in: test_db/data/3d546a1ce46c6ae10ad34ab8a81c542e-0
A test2/testfile2 (259 kB)
Adding file data to DB in: test_db/data/fb00cd74a5f35e89a7fbdd3c1d05375a-0
A test2/testfile~ (524 kB)
Adding file data to DB in: test_db/data/59071590099d21dd439896592338bf95-0
A test2/testlink
Error: Protocol not supported: ssh
Database closed

Test: same backup
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/mount
Backup client 'client' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
 -> Dir dir
 -> umount -fl test_db/mount
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Client-wide filter and subdir
 ---> Condition path_start subdir
 ---> Condition not size< 100
 --> Client-wide filter and bigfile
 ---> Condition size>= 10
 ---> Condition type file
 --> Expiry 1 day(s)
 --> Path: test2
 --> Path: test1
 --> Path-wide filter and not_object
 ---> Condition not path_end .o
 --> Path-wide filter or to_be_ignored
 ---> Condition filter subdir
 ---> Condition filter backup
 ---> Condition not filter not_object
Backup path 'test1'
 -> Dir bzr
 -> Dir bzr/.bzr
 -> Dir bzr/dirbad
 -> Dir bzr/diroth
 -> Dir bzr/dirutd
 -> Dir cvs
 -> Parsing CVS entries
 --> filenew.c	f	0
 --> filemod.o	f	1159806431
 --> fileutd.h	f	1159985080
 --> dirbad	d	0
 --> dirutd	d	0
 -> Dir cvs/CVS
 -> Dir cvs/dirbad
Warning: Directory should be under CVS control: test1/cvs/dirbad
 -> Dir cvs/dirutd
 -> Parsing CVS entries
 --> fileutd	f	1159985080
 -> Dir cvs/dirutd/CVS
 -> Dir dir space
 -> Dir svn
 -> Parsing Subversion entries
 --> filenew.c	m
 --> filemod.o	m
 --> fileoth	i
 --> diroth	o
 -> Dir svn/.svn
 -> Dir svn/dirbad
Warning: Directory should be under Subversion control: test1/svn/dirbad
 -> Dir svn/dirutd
 -> Parsing Subversion entries
 --> fileutd	m
 --> fileoth	o
 -> Dir svn/dirutd/.svn
 -> Dir testdir
Backup path 'test2'
 -> Dir testdir
Error: Protocol not supported: ssh
Database not modified
Database closed

Test: interrupted backup
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/mount
Backup client 'client' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
 -> Dir dir
 -> umount -fl test_db/mount
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Client-wide filter and subdir
 ---> Condition path_start subdir
 ---> Condition not size< 100
 --> Client-wide filter and bigfile
 ---> Condition size>= 10
 ---> Condition type file
 --> Expiry 1 day(s)
 --> Path: test2
 --> Path: test1
 --> Path-wide filter and not_object
 ---> Condition not path_end .o
 --> Path-wide filter or to_be_ignored
 ---> Condition filter subdir
 ---> Condition filter backup
 ---> Condition not filter not_object
Backup path 'test1'
 -> Dir bzr
 -> Dir bzr/.bzr
 -> Dir bzr/dirbad
 -> Dir bzr/diroth
 -> Dir bzr/dirutd
 -> Dir cvs
 -> Parsing CVS entries
 --> filenew.c	f	0
 --> filemod.o	f	1159806431
 --> fileutd.h	f	1159985080
 --> dirbad	d	0
 --> dirutd	d	0
 -> Dir cvs/CVS
 -> Dir cvs/dirbad
Warning: Directory should be under CVS control: test1/cvs/dirbad
 -> Dir cvs/dirutd
 -> Parsing CVS entries
 --> fileutd	f	1159985080
 -> Dir cvs/dirutd/CVS
 -> Dir dir space
A test1/dir space/big_file (512 kB)
Killing inside data
Error: Operation canceled copying write file: test1/dir space/big_file
Database closed

Test: specify clients
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Warning: Backup was interrupted in a previous run, finishing up...
Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/mount
Backup client 'client' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount -fl test_db/mount
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Client-wide filter and subdir
 ---> Condition path_start subdir
 ---> Condition not size< 100
 --> Client-wide filter and bigfile
 ---> Condition size>= 10
 ---> Condition type file
 --> Expiry 1 day(s)
 --> Path: test2
 --> Path: test1
 --> Path-wide filter and not_object
 ---> Condition not path_end .o
 --> Path-wide filter or to_be_ignored
 ---> Condition filter subdir
 ---> Condition filter backup
 ---> Condition not filter not_object
Backup path 'test1'
 -> Dir bzr
 -> Dir bzr/.bzr
 -> Dir bzr/dirbad
 -> Dir bzr/diroth
 -> Dir bzr/dirutd
 -> Dir cvs
 -> Parsing CVS entries
 --> filenew.c	f	0
 --> filemod.o	f	1159806431
 --> fileutd.h	f	1159985080
 --> dirbad	d	0
 --> dirutd	d	0
 -> Dir cvs/CVS
 -> Dir cvs/dirbad
Warning: Directory should be under CVS control: test1/cvs/dirbad
 -> Dir cvs/dirutd
 -> Parsing CVS entries
 --> fileutd	f	1159985080
 -> Dir cvs/dirutd/CVS
 -> Dir dir space
! test1/dir space/big_file (512 kB)
Adding compressed file data to DB in: test_db/data/816df6f64deba63b029ca19d880ee10a-0
 -> Dir svn
 -> Parsing Subversion entries
 --> filenew.c	m
 --> filemod.o	m
 --> fileoth	i
 --> diroth	o
 -> Dir svn/.svn
 -> Dir svn/dirbad
Warning: Directory should be under Subversion control: test1/svn/dirbad
 -> Dir svn/dirutd
 -> Parsing Subversion entries
 --> fileutd	m
 --> fileoth	o
 -> Dir svn/dirutd/.svn
 -> Dir testdir
Backup path 'test2'
 -> Dir testdir
Database closed

Test: scan DB
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read/write mode
Reading list
Found 15 checksums
Crawling through DB
0f2ea973d77135dc3d06c8e68da6dc59-0\r
26ab0db90d72e28ad0ba1e22ee510510-0\r
3d546a1ce46c6ae10ad34ab8a81c542e-0\r
5252f242d27b8c2c9fdbdcbb33545d07-0\r
59071590099d21dd439896592338bf95-0\r
59ca0efa9f5633cb0371bbc0355478d8-0\r
6d7fce9fee471194aa8b5b6e47267f03-0\r
816df6f64deba63b029ca19d880ee10a-0\r
8bdef5751e46ed57d237cbe3f4a5061c-0\r
b026324c6904b2a9cb4b88d6d61c81d1-0\r
b90f8fa56ea1d39881d4a199c7a81d35-0\r
d41d8cd98f00b204e9800998ecf8427e-0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0\r
fb00cd74a5f35e89a7fbdd3c1d05375a-0\r
fef51838cd3cfe8ed96355742eb71fbd-0\r
                                  \r
Found 15 valid checksums
Checksum(s) from list:
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0
 -> 26ab0db90d72e28ad0ba1e22ee510510-0
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0
 -> 59071590099d21dd439896592338bf95-0
 -> 59ca0efa9f5633cb0371bbc0355478d8-0
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
 -> 816df6f64deba63b029ca19d880ee10a-0
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0
 -> b026324c6904b2a9cb4b88d6d61c81d1-0
 -> b90f8fa56ea1d39881d4a199c7a81d35-0
 -> d41d8cd98f00b204e9800998ecf8427e-0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0
 -> fef51838cd3cfe8ed96355742eb71fbd-0
Checksum(s) with data:
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0
 -> 26ab0db90d72e28ad0ba1e22ee510510-0
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0
 -> 59071590099d21dd439896592338bf95-0
 -> 59ca0efa9f5633cb0371bbc0355478d8-0
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
 -> 816df6f64deba63b029ca19d880ee10a-0
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0
 -> b026324c6904b2a9cb4b88d6d61c81d1-0
 -> b90f8fa56ea1d39881d4a199c7a81d35-0
 -> d41d8cd98f00b204e9800998ecf8427e-0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0
 -> fef51838cd3cfe8ed96355742eb71fbd-0
Database not modified
Database closed

Test: check DB
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read/write mode
Reading list
Found 15 checksums
Crawling through DB
0f2ea973d77135dc3d06c8e68da6dc59-0\r
26ab0db90d72e28ad0ba1e22ee510510-0\r
3d546a1ce46c6ae10ad34ab8a81c542e-0\r
5252f242d27b8c2c9fdbdcbb33545d07-0\r
59071590099d21dd439896592338bf95-0\r
59ca0efa9f5633cb0371bbc0355478d8-0\r
6d7fce9fee471194aa8b5b6e47267f03-0\r
816df6f64deba63b029ca19d880ee10a-0\r
8bdef5751e46ed57d237cbe3f4a5061c-0\r
b026324c6904b2a9cb4b88d6d61c81d1-0\r
b90f8fa56ea1d39881d4a199c7a81d35-0\r
d41d8cd98f00b204e9800998ecf8427e-0\r
eb75fb33b2019ef3c840eb5ccdc2e795-0\r
fb00cd74a5f35e89a7fbdd3c1d05375a-0\r
fef51838cd3cfe8ed96355742eb71fbd-0\r
                                  \r
Found 15 valid checksums
Checksum(s) from list:
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0
 -> 26ab0db90d72e28ad0ba1e22ee510510-0
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0
 -> 59071590099d21dd439896592338bf95-0
 -> 59ca0efa9f5633cb0371bbc0355478d8-0
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
 -> 816df6f64deba63b029ca19d880ee10a-0
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0
 -> b026324c6904b2a9cb4b88d6d61c81d1-0
 -> b90f8fa56ea1d39881d4a199c7a81d35-0
 -> d41d8cd98f00b204e9800998ecf8427e-0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0
 -> fef51838cd3cfe8ed96355742eb71fbd-0
Checksum(s) with data:
 -> 0f2ea973d77135dc3d06c8e68da6dc59-0
 -> 26ab0db90d72e28ad0ba1e22ee510510-0
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0
 -> 59071590099d21dd439896592338bf95-0
 -> 59ca0efa9f5633cb0371bbc0355478d8-0
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
 -> 816df6f64deba63b029ca19d880ee10a-0
 -> 8bdef5751e46ed57d237cbe3f4a5061c-0
 -> b026324c6904b2a9cb4b88d6d61c81d1-0
 -> b90f8fa56ea1d39881d4a199c7a81d35-0
 -> d41d8cd98f00b204e9800998ecf8427e-0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0
 -> fef51838cd3cfe8ed96355742eb71fbd-0
Database not modified
Database closed

Test: list clients
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
Database closed
List of clients: 3
 -> client
 -> myClient
 -> myhost

Test: list paths in UNIX client
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
Database closed
List of paths in 'myClient': 1
 -> /home

Test: list paths in DOS client
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
Database closed
List of paths in 'client': 1
 -> C:

Test: restore file
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r/test2/testfile
Database closed

Test: restore dir
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r/test1/bzr
U test_r/test1/bzr/.bzr
U test_r/test1/bzr/dirbad
U test_r/test1/bzr/dirbad/fileoth
U test_r/test1/bzr/dirbad/fileutd
U test_r/test1/bzr/diroth
U test_r/test1/bzr/dirutd
U test_r/test1/bzr/dirutd/fileoth
U test_r/test1/bzr/dirutd/fileutd
U test_r/test1/bzr/filenew.c
U test_r/test1/bzr/fileoth
U test_r/test1/bzr/fileutd.h
U test_r/test1/cvs
U test_r/test1/cvs/CVS
U test_r/test1/cvs/CVS/Entries
U test_r/test1/cvs/CVS/Root
U test_r/test1/cvs/dirbad
U test_r/test1/cvs/dirutd
U test_r/test1/cvs/dirutd/CVS
U test_r/test1/cvs/dirutd/CVS/Entries
U test_r/test1/cvs/dirutd/CVS/Root
U test_r/test1/cvs/dirutd/fileutd
U test_r/test1/cvs/filenew.c
U test_r/test1/cvs/fileutd.h
U test_r/test1/dir space
U test_r/test1/dir space/big_file
U test_r/test1/dir space/file space
U test_r/test1/svn
U test_r/test1/svn/.svn
U test_r/test1/svn/.svn/entries
U test_r/test1/svn/dirbad
U test_r/test1/svn/dirutd
U test_r/test1/svn/dirutd/.svn
U test_r/test1/svn/dirutd/.svn/entries
U test_r/test1/svn/dirutd/fileutd
U test_r/test1/svn/filenew.c
U test_r/test1/test space
U test_r/test1/testdir
U test_r/test1/testfile
U test_r/test1/testlink
U test_r/test1/testpipe
Database closed

Test: restore subdir
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r/test1/cvs
U test_r/test1/cvs/CVS
U test_r/test1/cvs/CVS/Entries
U test_r/test1/cvs/CVS/Root
U test_r/test1/cvs/dirbad
U test_r/test1/cvs/dirutd
U test_r/test1/cvs/dirutd/CVS
U test_r/test1/cvs/dirutd/CVS/Entries
U test_r/test1/cvs/dirutd/CVS/Root
U test_r/test1/cvs/dirutd/fileutd
U test_r/test1/cvs/filenew.c
U test_r/test1/cvs/fileutd.h
Database closed

Test: restore client
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r/test1/bzr
U test_r/test1/bzr/.bzr
U test_r/test1/bzr/dirbad
U test_r/test1/bzr/dirbad/fileoth
U test_r/test1/bzr/dirbad/fileutd
U test_r/test1/bzr/diroth
U test_r/test1/bzr/dirutd
U test_r/test1/bzr/dirutd/fileoth
U test_r/test1/bzr/dirutd/fileutd
U test_r/test1/bzr/filenew.c
U test_r/test1/bzr/fileoth
U test_r/test1/bzr/fileutd.h
U test_r/test1/cvs
U test_r/test1/cvs/CVS
U test_r/test1/cvs/CVS/Entries
U test_r/test1/cvs/CVS/Root
U test_r/test1/cvs/dirbad
U test_r/test1/cvs/dirutd
U test_r/test1/cvs/dirutd/CVS
U test_r/test1/cvs/dirutd/CVS/Entries
U test_r/test1/cvs/dirutd/CVS/Root
U test_r/test1/cvs/dirutd/fileutd
U test_r/test1/cvs/filenew.c
U test_r/test1/cvs/fileutd.h
U test_r/test1/dir space
U test_r/test1/dir space/big_file
U test_r/test1/dir space/file space
U test_r/test1/svn
U test_r/test1/svn/.svn
U test_r/test1/svn/.svn/entries
U test_r/test1/svn/dirbad
U test_r/test1/svn/dirutd
U test_r/test1/svn/dirutd/.svn
U test_r/test1/svn/dirutd/.svn/entries
U test_r/test1/svn/dirutd/fileutd
U test_r/test1/svn/filenew.c
U test_r/test1/test space
U test_r/test1/testdir
U test_r/test1/testfile
U test_r/test1/testlink
U test_r/test1/testpipe
U test_r/test2/testdir
U test_r/test2/testfile
U test_r/test2/testfile2
U test_r/test2/testfile~
U test_r/test2/testlink
Database closed

Test: add dual-boot client

Test: typical backup
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/mount
Backup client 'client' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
 -> Dir dir
 -> umount -fl test_db/mount
 -> mount -t cifs -o ro,noatime,nocase //myClient/C$ test_db/mount
Backup client 'myClient' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
A C:/Test/Dir
 -> Dir Dir
A C:/Test/Dir/a File.TXT (2 B)
A C:/Test/Dir/another File.TXT (2 B)
A C:/Test/File.TXT (0 B)
 -> umount -fl test_db/mount
Backup client 'myhost' using protocol 'file'
 -> Reading client configuration file
 --> Client-wide filter and subdir
 ---> Condition path_start subdir
 ---> Condition not size< 100
 --> Client-wide filter and bigfile
 ---> Condition size>= 10
 ---> Condition type file
 --> Expiry 1 day(s)
 --> Path: test2
 --> Path: test1
 --> Path-wide filter and not_object
 ---> Condition not path_end .o
 --> Path-wide filter or to_be_ignored
 ---> Condition filter subdir
 ---> Condition filter backup
 ---> Condition not filter not_object
Backup path 'test1'
 -> Dir bzr
 -> Dir bzr/.bzr
 -> Dir bzr/dirbad
 -> Dir bzr/diroth
 -> Dir bzr/dirutd
 -> Dir cvs
 -> Parsing CVS entries
 --> filenew.c	f	0
 --> filemod.o	f	1159806431
 --> fileutd.h	f	1159985080
 --> dirbad	d	0
 --> dirutd	d	0
 -> Dir cvs/CVS
 -> Dir cvs/dirbad
Warning: Directory should be under CVS control: test1/cvs/dirbad
 -> Dir cvs/dirutd
 -> Parsing CVS entries
 --> fileutd	f	1159985080
 -> Dir cvs/dirutd/CVS
 -> Dir dir space
 -> Dir svn
 -> Parsing Subversion entries
 --> filenew.c	m
 --> filemod.o	m
 --> fileoth	i
 --> diroth	o
 -> Dir svn/.svn
 -> Dir svn/dirbad
Warning: Directory should be under Subversion control: test1/svn/dirbad
 -> Dir svn/dirutd
 -> Parsing Subversion entries
 --> fileutd	m
 --> fileoth	o
 -> Dir svn/dirutd/.svn
 -> Dir testdir
Backup path 'test2'
 -> Dir testdir
Error: Protocol not supported: ssh
Database closed

Test: specify clients
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read/write mode
 -> mount -t cifs -o ro,noatime,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/mount
Backup client 'client' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/mount
Backup client 'myClient' using protocol 'nfs'
 -> Reading client configuration file
 --> Path: /home/User/test
Backup path '/home/User/test'
 -> umount -fl test_db/mount
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/mount
 -> Dir dir
 -> umount -fl test_db/mount
 -> mount -t cifs -o ro,noatime,nocase //myClient/C$ test_db/mount
Backup client 'myClient' using protocol 'smb'
 -> Reading client configuration file
 --> Path: C:/Test
Backup path 'C:/Test'
 -> Dir Dir
 -> umount -fl test_db/mount
Database not modified
Database closed

Test: user-mode backup
Database initialized in test_user/.hbackup
Database open in read/write mode
 -> Reading client configuration file
 --> Path: test_user/testuser
Backup path 'test_user/testuser'
A test_user/testuser/f1.txt (3 B)
Adding file data to DB in: test_user/.hbackup/data/31d30eea8d0968d6458e0ad0027c9f80-0
A test_user/testuser/subdir
 -> Dir subdir
A test_user/testuser/subdir/f2.txt (3 B)
Adding file data to DB in: test_user/.hbackup/data/dbbf8220893d497d403bb9cdf49db7a4-0
A test_user/testuser/subdir2
 -> Dir subdir2
A test_user/testuser/subdir2/f3.txt (3 B)
Adding file data to DB in: test_user/.hbackup/data/d5b4c7d9b06b60a7846c4529834c9812-0
A test_user/testuser/subdir2/f4.txt (3 B)
Adding file data to DB in: test_user/.hbackup/data/90e2a51705594d033a3abe9d77b2b7ad-0
Database closed

Test: list clients
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
Database closed
List of clients: 3
 -> client
 -> myClient
 -> myhost

Test: list paths in DUAL client
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
Database closed
List of paths in 'myClient': 2
 -> /home
 -> C:

Test: list sub-paths in UNIX client
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
Database closed
List of paths in 'myClient': 1
 -> /home/User

Test: list sub-paths in DOS client
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
Database closed
List of paths in 'myClient': 1
 -> C:/Test

Test: restore file (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r//home/User/test/File2.txt
Database closed

Test: restore subdir (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
U test_r//home/User/test/dir/file3.txt
Database closed

Test: restore dir (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
U test_r//home/User/test/dir/file3.txt
Database closed

Test: restore file (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r/C:/Test/File.TXT
Database closed

Test: restore subdir (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r/C:/Test/Dir
U test_r/C:/Test/Dir/a File.TXT
U test_r/C:/Test/Dir/another File.TXT
U test_r/C:/Test/File.TXT
Database closed

Test: restore dir (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r/C:/Test/Dir
U test_r/C:/Test/Dir/a File.TXT
U test_r/C:/Test/Dir/another File.TXT
U test_r/C:/Test/File.TXT
Database closed

Test: restore client
 -> Reading configuration file 'etc/hbackup.conf'
 --> Global filter all backup
 ---> Condition type file
 ---> Condition path_end ~
 --> Global filter any test_or
 ---> Condition filter backup
 ---> Condition not size< 1000
 --> Client: myClient
 ---> Config file: /home/User/hbackup.list
 --> Client: other
 ---> Config file: /home/backup/Backup.list
 --> Client: myhost
 ---> Config file: etc/localhost.list
 ---> Expiry: 1 day(s)
 --> Client: client
 ---> Config file: C:\Backup\Backup.LST
 --> Client: myClient
 ---> Config file: C:\Backup\Backup.LST
Database open in read-only mode
U test_r//home/User/test/File2.txt
U test_r//home/User/test/dir
U test_r//home/User/test/dir/file3.txt
U test_r/C:/Test/Dir
U test_r/C:/Test/Dir/a File.TXT
U test_r/C:/Test/Dir/another File.TXT
U test_r/C:/Test/File.TXT
Database closed
