
Test: wrong config file
 -> Reading configuration file ''
Error: failed to open configuration file '': No such file or directory

Test: backup, not initialized
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Error: Given DB path does not exist 'test_db'

Test: check config
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
 -> Reading client configuration file for 'localhost'
 -> Client: localhost
 --> Protocol: file
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Config: test_user/.hbackup/config
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: test_user/testuser
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing

Test: typical backup
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database initialized in 'test_db'
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
Register created for 'aClient.vista'
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
Ad      C:/Test Dir/My Dir
My Dir\r
Adding compressed data for b026324c6904b2a9cb4b88d6d61c81d1-0
Backup::addHash(b026324c6904b2a9cb4b88d6d61c81d1-0)
Af z    C:/Test Dir/My Dir/a File.TXT
Adding compressed data for 26ab0db90d72e28ad0ba1e22ee510510-0
Backup::addHash(26ab0db90d72e28ad0ba1e22ee510510-0)
Af z    C:/Test Dir/My Dir/another File.TXT
Adding compressed data for d41d8cd98f00b204e9800998ecf8427e-0
Backup::addHash(d41d8cd98f00b204e9800998ecf8427e-0)
Af z    C:/Test Dir/My File.TXT
Register modified for 'aClient.vista'
Database closed for 'aClient.vista'
Backup::add(test_db/aClient.vista)
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Register created for 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
Ad      C:/Test Dir/My Dir
My Dir\r
Checking data, sizes: f=2 z=22 (22)
Af ~    C:/Test Dir/My Dir/a File.TXT
Checking data, sizes: f=2 z=22 (22)
Af ~    C:/Test Dir/My Dir/another File.TXT
Checking data, sizes: f=0 z=20 (20)
Af ~    C:/Test Dir/My File.TXT
Register modified for 'client.xp'
Database closed for 'client.xp'
Backup::add(test_db/client.xp)
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Register created for 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
Af ~    /home/User/test/File2.txt
Ad      /home/User/test/dir
dir\r
Adding compressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
Backup::addHash(6d7fce9fee471194aa8b5b6e47267f03-0)
Af z    /home/User/test/dir/file3.txt
Register modified for 'myClient'
Database closed for 'myClient'
Backup::add(test_db/myClient)
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Register created for 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
Ad      C:/Test Dir/My Dir
My Dir\r
Checking data, sizes: f=2 z=22 (22)
Af ~    C:/Test Dir/My Dir/a File.TXT
Checking data, sizes: f=2 z=22 (22)
Af ~    C:/Test Dir/My Dir/another File.TXT
Checking data, sizes: f=0 z=20 (20)
Af ~    C:/Test Dir/My File.TXT
Register modified for 'myClient.xp'
Database closed for 'myClient.xp'
Backup::add(test_db/myClient.xp)
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Register created for 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
Copy:   1.0%\r
Copy:   2.0%\r
Copy:   2.9%\r
Copy:   3.9%\r
Copy:   4.9%\r
Copy:   5.9%\r
Copy:   6.8%\r
Copy:   7.8%\r
Copy:   8.8%\r
Copy:   9.8%\r
Copy:  10.7%\r
Copy:  11.7%\r
Copy:  12.7%\r
Copy:  13.7%\r
Copy:  14.6%\r
Copy:  15.6%\r
Copy:  16.6%\r
Copy:  17.6%\r
Copy:  18.6%\r
Copy:  19.5%\r
Copy:  20.5%\r
Copy:  21.5%\r
Copy:  22.5%\r
Copy:  23.4%\r
Copy:  24.4%\r
Copy:  25.4%\r
Copy:  26.4%\r
Copy:  27.3%\r
Copy:  28.3%\r
Copy:  29.3%\r
Copy:  30.3%\r
Copy:  31.2%\r
Copy:  32.2%\r
Copy:  33.2%\r
Copy:  34.2%\r
Copy:  35.2%\r
Copy:  36.1%\r
Copy:  37.1%\r
Copy:  38.1%\r
Copy:  39.1%\r
Copy:  40.0%\r
Copy:  41.0%\r
Copy:  42.0%\r
Copy:  43.0%\r
Copy:  43.9%\r
Copy:  44.9%\r
Copy:  45.9%\r
Copy:  46.9%\r
Copy:  47.9%\r
Copy:  48.8%\r
Copy:  49.8%\r
Copy:  50.8%\r
Copy:  51.8%\r
Copy:  52.7%\r
Copy:  53.7%\r
Copy:  54.7%\r
Copy:  55.7%\r
Copy:  56.6%\r
Copy:  57.6%\r
Copy:  58.6%\r
Copy:  59.6%\r
Copy:  60.5%\r
Copy:  61.5%\r
Copy:  62.5%\r
Copy:  63.5%\r
Copy:  64.5%\r
Copy:  65.4%\r
Copy:  66.4%\r
Copy:  67.4%\r
Copy:  68.4%\r
Copy:  69.3%\r
Copy:  70.3%\r
Copy:  71.3%\r
Copy:  72.3%\r
Copy:  73.2%\r
Copy:  74.2%\r
Copy:  75.2%\r
Copy:  76.2%\r
Copy:  77.1%\r
Copy:  78.1%\r
Copy:  79.1%\r
Copy:  80.1%\r
Copy:  81.1%\r
Copy:  82.0%\r
Copy:  83.0%\r
Copy:  84.0%\r
Copy:  85.0%\r
Copy:  85.9%\r
Copy:  86.9%\r
Copy:  87.9%\r
Copy:  88.9%\r
Copy:  89.8%\r
Copy:  90.8%\r
Copy:  91.8%\r
Copy:  92.8%\r
Copy:  93.8%\r
Copy:  94.7%\r
Copy:  95.7%\r
Copy:  96.7%\r
Copy:  97.7%\r
Copy:  98.6%\r
Copy:  99.6%\r
Copy: 100.0%\r
Adding compressed data for f1c9645dbc14efddc7d8a322685f26eb-0
Backup::addHash(f1c9645dbc14efddc7d8a322685f26eb-0)
Af z    test1/big_file
Ad      test1/cvs
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
Ad      test1/cvs/CVS
cvs/CVS\r
Adding uncompressed data for f899d6f61138a37484c8a2294656e903-0
Backup::addHash(f899d6f61138a37484c8a2294656e903-0)
Af f    test1/cvs/CVS/Entries
Adding compressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
Backup::addHash(b90f8fa56ea1d39881d4a199c7a81d35-0)
Af z    test1/cvs/CVS/Root
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
Ad      test1/cvs/dir space
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
Ad      test1/cvs/dir space/CVS
cvs/dir space/CVS\r
Adding uncompressed data for 662ae0524981c10b4736be799fc8650a-0
Backup::addHash(662ae0524981c10b4736be799fc8650a-0)
Af f    test1/cvs/dir space/CVS/Entries
Adding compressed data for 328b42839732650180b213aadebe494d-0
Backup::addHash(328b42839732650180b213aadebe494d-0)
Af z    test1/cvs/dir space/CVS/Root
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/cvs/dir space/file space
Ad      test1/cvs/dirbad
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
Ad      test1/cvs/dirutd
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
Ad      test1/cvs/dirutd/CVS
cvs/dirutd/CVS\r
Adding uncompressed data for 5252f242d27b8c2c9fdbdcbb33545d07-0
Backup::addHash(5252f242d27b8c2c9fdbdcbb33545d07-0)
Af f    test1/cvs/dirutd/CVS/Entries
Adding compressed data for eb75fb33b2019ef3c840eb5ccdc2e795-0
Backup::addHash(eb75fb33b2019ef3c840eb5ccdc2e795-0)
Af z    test1/cvs/dirutd/CVS/Root
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/cvs/dirutd/fileutd
If f    test1/cvs/filemod.o
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/cvs/filenew.c
If p    test1/cvs/fileoth
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/cvs/fileutd.h
Ad      test1/dir space
dir space\r
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/dir space/file space
Al      test1/dir space/link space
Al      test1/longlink
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/strange1TAB	CR\r

Checking data, sizes: f=0 z=20 (20)
Af ~    test1/strange2TAB	LF
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/strange3TAB	LF
CR\r

Id f    test1/subdir
Ad      test1/svn
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
Ad      test1/svn/.svn
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Adding compressed data for 5173c1e86196c05c124452a401e92a22-0
Backup::addHash(5173c1e86196c05c124452a401e92a22-0)
Af z    test1/svn/.svn/entries
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
Ad      test1/svn/dir space
svn/dir space\r
Ad      test1/svn/dir space/.svn
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Adding compressed data for f2b4c9d3f0830dea53972d208979feb0-0
Backup::addHash(f2b4c9d3f0830dea53972d208979feb0-0)
Af z    test1/svn/dir space/.svn/entries
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/svn/dir space/file space
Ad      test1/svn/dirbad
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
Ad      test1/svn/dirutd
svn/dirutd\r
Ad      test1/svn/dirutd/.svn
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Adding compressed data for 33b426a9cdc8a98729e5dbe6d5feb619-0
Backup::addHash(33b426a9cdc8a98729e5dbe6d5feb619-0)
Af z    test1/svn/dirutd/.svn/entries
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
Checking data, sizes: f=2 z=22 (22)
Af ~    test1/svn/dirutd/fileutd
If f    test1/svn/filemod.o
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/svn/filenew.c
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
Checking data, sizes: f=0 z=20 (20)
Af ~    test1/test space
Ad      test1/testdir
testdir\r
Adding compressed data for 59ca0efa9f5633cb0371bbc0355478d8-0
Backup::addHash(59ca0efa9f5633cb0371bbc0355478d8-0)
Af z    test1/testfile
If f    test1/testfile~
Al      test1/testlink
Ap      test1/testpipe
Backing up path 'test2'
Ad      test2/testdir
testdir\r
Copy:  70.4%\r
Copy: 100.0%\r
Checking data, sizes: f=145408 z=176 (178)
Adding compressed data for 3d546a1ce46c6ae10ad34ab8a81c542e-0
Backup::addHash(3d546a1ce46c6ae10ad34ab8a81c542e-0)
Af z    test2/testfile
Copy:  39.5%\r
Copy:  79.1%\r
Copy: 100.0%\r
Checking data, sizes: f=259072 z=286 (290)
Adding compressed data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
Backup::addHash(fb00cd74a5f35e89a7fbdd3c1d05375a-0)
Af z    test2/testfile2
Copy:  70.4%\r
Copy: 100.0%\r
Checking data, sizes: f=145461 z=145504 (147777)
Adding uncompressed data for f81f70dceaca8b0cec354f33fa3f0909-0
Backup::addHash(f81f70dceaca8b0cec354f33fa3f0909-0)
Af f    test2/testfile2.gz
If f    test2/testfile~
Al      test2/testlink
Register modified for 'myhost'
Database closed for 'myhost'
Backup::add(test_db/myhost)
Trying client 'newClient' using protocol 'ssh'
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah test_db/.mount/newClient
 -> Reading client configuration file for 'newClient'
 -> Client: newClient
 --> Protocol: ssh
 --> Options: username=user, password=p4sS?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/Blah/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'newClient'
Register created for 'newClient'
Database open r/w for 'newClient'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/.mount/newClient
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah/test test_db/.mount/newClient
Adding compressed data for b8bbb1294db5d59366b7d1827e2158d6-0
Backup::addHash(b8bbb1294db5d59366b7d1827e2158d6-0)
Af z    /home/Blah/test/File2.txt
Ad      /home/Blah/test/dir
dir\r
Adding compressed data for 8a61083e712200a30c6ccf5f5c697b76-0
Backup::addHash(8a61083e712200a30c6ccf5f5c697b76-0)
Af z    /home/Blah/test/dir/file3.txt
Register modified for 'newClient'
Database closed for 'newClient'
Backup::add(test_db/newClient)
 -> fusermount -u test_db/.mount/newClient
Trying client 'other' using protocol 'none'
Error: Protocol not supported 'none' for 'other'
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
CR\r

test_tree
test_tree/aClient.vista
test_tree/aClient.vista/2009-08-07_06:05:04_CEST
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/a File.TXT.gz
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/another File.TXT.gz
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir/My File.TXT.gz
test_tree/client.xp
test_tree/client.xp/2009-08-07_06:05:04_CEST
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/a File.TXT
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/another File.TXT
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My File.TXT
test_tree/myClient
test_tree/myClient/2009-08-07_06:05:04_CEST
test_tree/myClient/2009-08-07_06:05:04_CEST/home
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User/test
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User/test/dir
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User/test/dir/file3.txt.gz
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User/test/File2.txt.gz
test_tree/myClient.xp
test_tree/myClient.xp/2009-08-07_06:05:04_CEST
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/a File.TXT
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/another File.TXT
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My File.TXT
test_tree/myhost
test_tree/myhost/2009-08-07_06:05:04_CEST
test_tree/myhost/2009-08-07_06:05:04_CEST/test1
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/big_file.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/CVS
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/CVS/Entries
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirbad
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space/CVS
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space/CVS/Entries
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space/file space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd/CVS
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd/CVS/Entries
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd/fileutd
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/filenew.c
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/fileutd.h
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/dir space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/dir space/file space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/dir space/link space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/longlink
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/strange1TAB	CR\r

test_tree/myhost/2009-08-07_06:05:04_CEST/test1/strange2TAB	LF
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/strange3TAB	LF
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirbad
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dir space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dir space/file space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dir space/.svn
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dir space/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirutd
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirutd/fileutd
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirutd/.svn
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirutd/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/filenew.c
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/.svn
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/testdir
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/testfile.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/testlink
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/test space
test_tree/myhost/2009-08-07_06:05:04_CEST/test2
test_tree/myhost/2009-08-07_06:05:04_CEST/test2/testdir
test_tree/myhost/2009-08-07_06:05:04_CEST/test2/testfile2.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test2/testfile.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test2/testlink
test_tree/newClient
test_tree/newClient/2009-08-07_06:05:04_CEST
test_tree/newClient/2009-08-07_06:05:04_CEST/home
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah/test
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah/test/dir
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah/test/dir/file3.txt.gz
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah/test/File2.txt.gz

Test: same backup
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
Database closed for 'aClient.vista'
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
Database closed for 'myClient'
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myClient.xp'
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Id f    test1/subdir
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
svn/dir space\r
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
If f    test1/testfile~
Backing up path 'test2'
testdir\r
If f    test2/testfile~
Database closed for 'myhost'
Trying client 'newClient' using protocol 'ssh'
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah test_db/.mount/newClient
 -> Reading client configuration file for 'newClient'
 -> Client: newClient
 --> Protocol: ssh
 --> Options: username=user, password=p4sS?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/Blah/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'newClient'
Database open r/w for 'newClient'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/.mount/newClient
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah/test test_db/.mount/newClient
dir\r
Database closed for 'newClient'
 -> fusermount -u test_db/.mount/newClient
Trying client 'other' using protocol 'none'
Error: Protocol not supported 'none' for 'other'
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
CR\r

CR\r
.gz
test_tree
test_tree/aClient.vista
test_tree/aClient.vista/2009-08-07_06:05:04_CEST
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/a File.TXT.gz
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/another File.TXT.gz
test_tree/aClient.vista/2009-08-07_06:05:04_CEST/C:/Test Dir/My File.TXT.gz
test_tree/aClient.vista/2009-08-07_06:05:05_CEST
test_tree/aClient.vista/2009-08-07_06:05:05_CEST/C:
test_tree/aClient.vista/2009-08-07_06:05:05_CEST/C:/Test Dir
test_tree/aClient.vista/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir
test_tree/aClient.vista/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir/a File.TXT.gz
test_tree/aClient.vista/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir/another File.TXT.gz
test_tree/aClient.vista/2009-08-07_06:05:05_CEST/C:/Test Dir/My File.TXT.gz
test_tree/client.xp
test_tree/client.xp/2009-08-07_06:05:04_CEST
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/a File.TXT
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/another File.TXT
test_tree/client.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My File.TXT
test_tree/client.xp/2009-08-07_06:05:05_CEST
test_tree/client.xp/2009-08-07_06:05:05_CEST/C:
test_tree/client.xp/2009-08-07_06:05:05_CEST/C:/Test Dir
test_tree/client.xp/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir
test_tree/client.xp/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir/a File.TXT.gz
test_tree/client.xp/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir/another File.TXT.gz
test_tree/client.xp/2009-08-07_06:05:05_CEST/C:/Test Dir/My File.TXT.gz
test_tree/myClient
test_tree/myClient/2009-08-07_06:05:04_CEST
test_tree/myClient/2009-08-07_06:05:04_CEST/home
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User/test
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User/test/dir
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User/test/dir/file3.txt.gz
test_tree/myClient/2009-08-07_06:05:04_CEST/home/User/test/File2.txt.gz
test_tree/myClient/2009-08-07_06:05:05_CEST
test_tree/myClient/2009-08-07_06:05:05_CEST/home
test_tree/myClient/2009-08-07_06:05:05_CEST/home/User
test_tree/myClient/2009-08-07_06:05:05_CEST/home/User/test
test_tree/myClient/2009-08-07_06:05:05_CEST/home/User/test/dir
test_tree/myClient/2009-08-07_06:05:05_CEST/home/User/test/dir/file3.txt.gz
test_tree/myClient/2009-08-07_06:05:05_CEST/home/User/test/File2.txt.gz
test_tree/myClient.xp
test_tree/myClient.xp/2009-08-07_06:05:04_CEST
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/a File.TXT
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My Dir/another File.TXT
test_tree/myClient.xp/2009-08-07_06:05:04_CEST/C:/Test Dir/My File.TXT
test_tree/myClient.xp/2009-08-07_06:05:05_CEST
test_tree/myClient.xp/2009-08-07_06:05:05_CEST/C:
test_tree/myClient.xp/2009-08-07_06:05:05_CEST/C:/Test Dir
test_tree/myClient.xp/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir
test_tree/myClient.xp/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir/a File.TXT.gz
test_tree/myClient.xp/2009-08-07_06:05:05_CEST/C:/Test Dir/My Dir/another File.TXT.gz
test_tree/myClient.xp/2009-08-07_06:05:05_CEST/C:/Test Dir/My File.TXT.gz
test_tree/myhost
test_tree/myhost/2009-08-07_06:05:04_CEST
test_tree/myhost/2009-08-07_06:05:04_CEST/test1
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/big_file.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/CVS
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/CVS/Entries
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirbad
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space/CVS
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space/CVS/Entries
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dir space/file space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd/CVS
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd/CVS/Entries
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/dirutd/fileutd
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/filenew.c
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/cvs/fileutd.h
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/dir space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/dir space/file space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/dir space/link space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/longlink
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/strange1TAB	CR\r

test_tree/myhost/2009-08-07_06:05:04_CEST/test1/strange2TAB	LF
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/strange3TAB	LF
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirbad
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dir space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dir space/file space
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dir space/.svn
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dir space/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirutd
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirutd/fileutd
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirutd/.svn
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/dirutd/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/filenew.c
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/.svn
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/svn/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/testdir
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/testfile.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/testlink
test_tree/myhost/2009-08-07_06:05:04_CEST/test1/test space
test_tree/myhost/2009-08-07_06:05:04_CEST/test2
test_tree/myhost/2009-08-07_06:05:04_CEST/test2/testdir
test_tree/myhost/2009-08-07_06:05:04_CEST/test2/testfile2.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test2/testfile.gz
test_tree/myhost/2009-08-07_06:05:04_CEST/test2/testlink
test_tree/myhost/2009-08-07_06:05:05_CEST
test_tree/myhost/2009-08-07_06:05:05_CEST/test1
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/big_file.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/CVS
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/CVS/Entries
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dirbad
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dir space
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dir space/CVS
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dir space/CVS/Entries
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dir space/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dir space/file space.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dirutd
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dirutd/CVS
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dirutd/CVS/Entries
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dirutd/CVS/Root.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/dirutd/fileutd.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/filenew.c.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/cvs/fileutd.h.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/dir space
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/dir space/file space.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/dir space/link space
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/longlink
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/strange1TAB	CR\r
.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/strange2TAB	LF.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/strange3TAB	LF
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dirbad
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dir space
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dir space/file space.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dir space/.svn
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dir space/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dirutd
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dirutd/fileutd.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dirutd/.svn
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/dirutd/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/filenew.c.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/.svn
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/svn/.svn/entries.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/testdir
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/testfile.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/testlink
test_tree/myhost/2009-08-07_06:05:05_CEST/test1/test space.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test2
test_tree/myhost/2009-08-07_06:05:05_CEST/test2/testdir
test_tree/myhost/2009-08-07_06:05:05_CEST/test2/testfile2.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test2/testfile.gz
test_tree/myhost/2009-08-07_06:05:05_CEST/test2/testlink
test_tree/newClient
test_tree/newClient/2009-08-07_06:05:04_CEST
test_tree/newClient/2009-08-07_06:05:04_CEST/home
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah/test
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah/test/dir
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah/test/dir/file3.txt.gz
test_tree/newClient/2009-08-07_06:05:04_CEST/home/Blah/test/File2.txt.gz
test_tree/newClient/2009-08-07_06:05:05_CEST
test_tree/newClient/2009-08-07_06:05:05_CEST/home
test_tree/newClient/2009-08-07_06:05:05_CEST/home/Blah
test_tree/newClient/2009-08-07_06:05:05_CEST/home/Blah/test
test_tree/newClient/2009-08-07_06:05:05_CEST/home/Blah/test/dir
test_tree/newClient/2009-08-07_06:05:05_CEST/home/Blah/test/dir/file3.txt.gz
test_tree/newClient/2009-08-07_06:05:05_CEST/home/Blah/test/File2.txt.gz

Test: interrupted backup
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
Database closed for 'aClient.vista'
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
Database closed for 'myClient'
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myClient.xp'
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Copy:  20.0%\r
Killing trigger reached: 2
Error: Operation canceled backing up file 'myhost:test1/dir space/big_file'
Af !    test1/dir space/big_file
Database closed for 'myhost'
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Warning: Previous backup interrupted for 'myhost'
Register modified for 'myhost'
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
Database closed for 'aClient.vista'
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
Database closed for 'myClient'
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myClient.xp'
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Copy:  20.0%\r
Killing trigger reached: 2
Warning: Operation canceled backing up file 'myhost:test1/dir space/big_file'
!f !    test1/dir space/big_file
Database closed for 'myhost'
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"

Test: force-decompress DB data

Test: specify clients
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Reading list of problematic checksums
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Copy:  20.0%\r
Copy:  40.0%\r
Copy:  60.0%\r
Copy:  80.0%\r
Copy: 100.0%\r
Adding compressed data for 816df6f64deba63b029ca19d880ee10a-0
Backup::addHash(816df6f64deba63b029ca19d880ee10a-0)
!f z    test1/dir space/big_file
Id f    test1/subdir
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
svn/dir space\r
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
If f    test1/testfile~
Backing up path 'test2'
testdir\r
If f    test2/testfile~
Register modified for 'myhost'
Database closed for 'myhost'
Backup::add(test_db/myhost)
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"

Test: scan DB
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 21 unique [11549304 real, 11549314 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
59ca0efa9f5633cb0371bbc0355478d8-0 13 33\r
662ae0524981c10b4736be799fc8650a-0 45   \r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
b90f8fa56ea1d39881d4a199c7a81d35-0 16 36\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 21 valid and 0 broken data file(s)     
Data statistics: 21 checksum(s), 21 valid [157837 real, 11549304 virtual]
Checksum(s) from list: 21
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 21
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Database closed

Test: check DB
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Crawling through DB data
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
59ca0efa9f5633cb0371bbc0355478d8-0 13 33\r
662ae0524981c10b4736be799fc8650a-0 45   \r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
b90f8fa56ea1d39881d4a199c7a81d35-0 16 36\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
Copy:  70.4%                              \r
Copy: 100.0%\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461\r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 21 valid and 0 broken data file(s)     
Database closed

Test: list clients
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database closed
	aClient.vista
	client.xp
	myClient
	myClient.xp
	myhost
	newClient

Test: list paths in UNIX client 'myClient'
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
Database closed for 'myClient'
Database closed
	/home/

Test: list paths in DOS client 'client.xp'
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'client.xp'
Database closed for 'client.xp'
Database closed
	C:/

Test: restore file
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myhost'
U       test_r/test2/testfile
Database closed for 'myhost'
Database closed

Test: restore dir
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myhost'
U       test_r/test1/big_file
U       test_r/test1/cvs
U       test_r/test1/cvs/CVS
U       test_r/test1/cvs/CVS/Entries
U       test_r/test1/cvs/CVS/Root
U       test_r/test1/cvs/dir space
U       test_r/test1/cvs/dir space/CVS
U       test_r/test1/cvs/dir space/CVS/Entries
U       test_r/test1/cvs/dir space/CVS/Root
U       test_r/test1/cvs/dir space/file space
U       test_r/test1/cvs/dirbad
U       test_r/test1/cvs/dirutd
U       test_r/test1/cvs/dirutd/CVS
U       test_r/test1/cvs/dirutd/CVS/Entries
U       test_r/test1/cvs/dirutd/CVS/Root
U       test_r/test1/cvs/dirutd/fileutd
U       test_r/test1/cvs/filenew.c
U       test_r/test1/cvs/fileutd.h
U       test_r/test1/dir space
U       test_r/test1/dir space/big_file
U       test_r/test1/dir space/file space
U       test_r/test1/dir space/link space
U       test_r/test1/longlink
U       test_r/test1/strange1TAB	CR\r

U       test_r/test1/strange2TAB	LF
U       test_r/test1/strange3TAB	LF
CR\r

U       test_r/test1/svn
U       test_r/test1/svn/.svn
U       test_r/test1/svn/.svn/entries
U       test_r/test1/svn/dir space
U       test_r/test1/svn/dir space/.svn
U       test_r/test1/svn/dir space/.svn/entries
U       test_r/test1/svn/dir space/file space
U       test_r/test1/svn/dirbad
U       test_r/test1/svn/dirutd
U       test_r/test1/svn/dirutd/.svn
U       test_r/test1/svn/dirutd/.svn/entries
U       test_r/test1/svn/dirutd/fileutd
U       test_r/test1/svn/filenew.c
U       test_r/test1/test space
U       test_r/test1/testdir
U       test_r/test1/testfile
U       test_r/test1/testlink
U       test_r/test1/testpipe
Database closed for 'myhost'
Database closed
test1/testfile metadata: gid = 24, mtime = 1161475200, perms = 0750

Test: restore subdir
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myhost'
U       test_r/test1/cvs
U       test_r/test1/cvs/CVS
U       test_r/test1/cvs/CVS/Entries
U       test_r/test1/cvs/CVS/Root
U       test_r/test1/cvs/dir space
U       test_r/test1/cvs/dir space/CVS
U       test_r/test1/cvs/dir space/CVS/Entries
U       test_r/test1/cvs/dir space/CVS/Root
U       test_r/test1/cvs/dir space/file space
U       test_r/test1/cvs/dirbad
U       test_r/test1/cvs/dirutd
U       test_r/test1/cvs/dirutd/CVS
U       test_r/test1/cvs/dirutd/CVS/Entries
U       test_r/test1/cvs/dirutd/CVS/Root
U       test_r/test1/cvs/dirutd/fileutd
U       test_r/test1/cvs/filenew.c
U       test_r/test1/cvs/fileutd.h
Database closed for 'myhost'
Database closed

Test: restore client
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myhost'
U       test_r/test1/big_file
U       test_r/test1/cvs
U       test_r/test1/cvs/CVS
U       test_r/test1/cvs/CVS/Entries
U       test_r/test1/cvs/CVS/Root
U       test_r/test1/cvs/dir space
U       test_r/test1/cvs/dir space/CVS
U       test_r/test1/cvs/dir space/CVS/Entries
U       test_r/test1/cvs/dir space/CVS/Root
U       test_r/test1/cvs/dir space/file space
U       test_r/test1/cvs/dirbad
U       test_r/test1/cvs/dirutd
U       test_r/test1/cvs/dirutd/CVS
U       test_r/test1/cvs/dirutd/CVS/Entries
U       test_r/test1/cvs/dirutd/CVS/Root
U       test_r/test1/cvs/dirutd/fileutd
U       test_r/test1/cvs/filenew.c
U       test_r/test1/cvs/fileutd.h
U       test_r/test1/dir space
U       test_r/test1/dir space/big_file
U       test_r/test1/dir space/file space
U       test_r/test1/dir space/link space
U       test_r/test1/longlink
U       test_r/test1/strange1TAB	CR\r

U       test_r/test1/strange2TAB	LF
U       test_r/test1/strange3TAB	LF
CR\r

U       test_r/test1/svn
U       test_r/test1/svn/.svn
U       test_r/test1/svn/.svn/entries
U       test_r/test1/svn/dir space
U       test_r/test1/svn/dir space/.svn
U       test_r/test1/svn/dir space/.svn/entries
U       test_r/test1/svn/dir space/file space
U       test_r/test1/svn/dirbad
U       test_r/test1/svn/dirutd
U       test_r/test1/svn/dirutd/.svn
U       test_r/test1/svn/dirutd/.svn/entries
U       test_r/test1/svn/dirutd/fileutd
U       test_r/test1/svn/filenew.c
U       test_r/test1/test space
U       test_r/test1/testdir
U       test_r/test1/testfile
U       test_r/test1/testlink
U       test_r/test1/testpipe
U       test_r/test2/testdir
U       test_r/test2/testfile
U       test_r/test2/testfile2
U       test_r/test2/testfile2.gz
Copy:  70.4%\r
Copy: 100.0%\r
U       test_r/test2/testlink
Database closed for 'myhost'
Database closed

Test: typical backup
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
Database closed for 'aClient.vista'
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
Database closed for 'myClient'
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myClient.xp'
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Id f    test1/subdir
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
svn/dir space\r
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
If f    test1/testfile~
Backing up path 'test2'
testdir\r
If f    test2/testfile~
Database closed for 'myhost'
Trying client 'newClient' using protocol 'ssh'
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah test_db/.mount/newClient
 -> Reading client configuration file for 'newClient'
 -> Client: newClient
 --> Protocol: ssh
 --> Options: username=user, password=p4sS?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/Blah/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'newClient'
Database open r/w for 'newClient'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/.mount/newClient
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah/test test_db/.mount/newClient
dir\r
Database closed for 'newClient'
 -> fusermount -u test_db/.mount/newClient
Trying client 'other' using protocol 'none'
Error: Protocol not supported 'none' for 'other'
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"

Test: specify clients
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Reading list of problematic checksums
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
Database closed for 'myClient'
 -> umount -fl test_db/.mount/myClient
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"

Test: user-mode backup
Backup::Backup(test_user/.hbackup/.backup)
 --> No file logging
 --> DB path: 'test_user/.hbackup'
 --> DB compression: later
 --> Selected clients:
 ---> localhost
 --> Clients:
 ---> Client: localhost
 ----> Protocol: file
 ----> Config: test_user/.hbackup/config
 ----> Expiry: none
Database initialized in 'test_user/.hbackup'
Database open in read/write mode
 -> Reading client configuration file for 'localhost'
 -> Client: localhost
 --> Protocol: file
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Config: test_user/.hbackup/config
 --> Expiry: none
 --> Paths:
 ---> Path: test_user/testuser
 ----> No error if same file fails copy again
Reading list of problematic checksums
Register created for 'localhost'
Database open r/w for 'localhost'
Backing up path 'test_user/testuser'
Adding uncompressed data for 31d30eea8d0968d6458e0ad0027c9f80-0
Backup::addHash(31d30eea8d0968d6458e0ad0027c9f80-0)
Af f    test_user/testuser/f1.txt
Ad      test_user/testuser/subdir
subdir\r
Adding uncompressed data for dbbf8220893d497d403bb9cdf49db7a4-0
Backup::addHash(dbbf8220893d497d403bb9cdf49db7a4-0)
Af f    test_user/testuser/subdir/f2.txt
Ad      test_user/testuser/subdir2
subdir2\r
Adding uncompressed data for d5b4c7d9b06b60a7846c4529834c9812-0
Backup::addHash(d5b4c7d9b06b60a7846c4529834c9812-0)
Af f    test_user/testuser/subdir2/f3.txt
Adding uncompressed data for 90e2a51705594d033a3abe9d77b2b7ad-0
Backup::addHash(90e2a51705594d033a3abe9d77b2b7ad-0)
Af f    test_user/testuser/subdir2/f4.txt
Register modified for 'localhost'
Database closed for 'localhost'
Backup::add(test_user/.hbackup/localhost)
Database closed

Test: list clients
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database closed
	aClient.vista
	client.xp
	myClient
	myClient.xp
	myhost
	newClient

Test: list paths in DOS client 'myClient.xp'
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
Database closed for 'myClient.xp'
Database closed
	C:/

Test: list paths in dual-boot client 'myClient*'
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
Database closed for 'myClient'
Database open r-o for 'myClient.xp'
Database closed for 'myClient.xp'
Database closed
	/home/
	C:/

Test: list sub-paths in UNIX client 'myClient'
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
Database closed for 'myClient'
Database closed
	/home/User/

Test: list sub-paths in DOS client 'myClient.xp', 'C:'
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
Database closed for 'myClient.xp'
Database closed
	C:/Test Dir/

Test: restore file (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
U       test_r//home/User/test/File2.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
f	test_r/home/User/test/File2.txt

Test: restore subdir (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
U       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
U       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt

Test: restore dir (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
U       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
U       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt

Test: restore client (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
U       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
U       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt

Test: restore file (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
f	test_r/C:/Test Dir/My File.TXT

Test: restore subdir (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
U       test_r/C:/Test Dir/My Dir/a File.TXT
U       test_r/C:/Test Dir/My Dir/another File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT

Test: restore dir (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
U       test_r/C:/Test Dir/My Dir/a File.TXT
U       test_r/C:/Test Dir/My Dir/another File.TXT
U       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT

Test: restore client (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
U       test_r/C:/Test Dir/My Dir/a File.TXT
U       test_r/C:/Test Dir/My Dir/another File.TXT
U       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT

Test: restore client (dual-boot)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
U       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
U       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
U       test_r/C:/Test Dir/My Dir/a File.TXT
U       test_r/C:/Test Dir/My Dir/another File.TXT
U       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT
f	test_r/C:/Test Dir/My Dir/another File.TXT
f	test_r/C:/Test Dir/My File.TXT
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt

Test: restore (symlinks) file (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
L       test_r//home/User/test/File2.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
l	test_r/home/User/test/File2.txt.gz

Test: restore (symlinks) subdir (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
L       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
L       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
l	test_r/home/User/test/dir/file3.txt
l	test_r/home/User/test/File2.txt.gz

Test: restore (symlinks) dir (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
L       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
L       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
l	test_r/home/User/test/dir/file3.txt
l	test_r/home/User/test/File2.txt.gz

Test: restore (symlinks) client (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
L       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
L       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
l	test_r/home/User/test/dir/file3.txt
l	test_r/home/User/test/File2.txt.gz

Test: restore (symlinks) file (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
L       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
l	test_r/C:/Test Dir/My File.TXT.gz

Test: restore (symlinks) subdir (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
L       test_r/C:/Test Dir/My Dir/a File.TXT
L       test_r/C:/Test Dir/My Dir/another File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
l	test_r/C:/Test Dir/My Dir/a File.TXT.gz
l	test_r/C:/Test Dir/My Dir/another File.TXT.gz

Test: restore (symlinks) dir (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
L       test_r/C:/Test Dir/My Dir/a File.TXT
L       test_r/C:/Test Dir/My Dir/another File.TXT
L       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
l	test_r/C:/Test Dir/My Dir/a File.TXT.gz
l	test_r/C:/Test Dir/My Dir/another File.TXT.gz
l	test_r/C:/Test Dir/My File.TXT.gz

Test: restore (symlinks) client (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
L       test_r/C:/Test Dir/My Dir/a File.TXT
L       test_r/C:/Test Dir/My Dir/another File.TXT
L       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
l	test_r/C:/Test Dir/My Dir/a File.TXT.gz
l	test_r/C:/Test Dir/My Dir/another File.TXT.gz
l	test_r/C:/Test Dir/My File.TXT.gz

Test: restore (symlinks) client (dual-boot)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
L       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
L       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
L       test_r/C:/Test Dir/My Dir/a File.TXT
L       test_r/C:/Test Dir/My Dir/another File.TXT
L       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
test_db/.data/6d/7f/ce/9fee471194aa8b5b6e47267f03-0/data
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
l	test_r/C:/Test Dir/My Dir/a File.TXT.gz
l	test_r/C:/Test Dir/My Dir/another File.TXT.gz
l	test_r/C:/Test Dir/My File.TXT.gz
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
l	test_r/home/User/test/dir/file3.txt
l	test_r/home/User/test/File2.txt.gz

Test: restore (hard links) file (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
H       test_r//home/User/test/File2.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
f	test_r/home/User/test/File2.txt.gz

Test: restore (hard links) subdir (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
H       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
H       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt.gz

Test: restore (hard links) dir (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
H       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
H       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt.gz

Test: restore (hard links) client (UNIX)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
H       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
H       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database closed
d	test_r
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt.gz

Test: restore (hard links) file (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
H       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
f	test_r/C:/Test Dir/My File.TXT.gz

Test: restore (hard links) subdir (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
H       test_r/C:/Test Dir/My Dir/a File.TXT
H       test_r/C:/Test Dir/My Dir/another File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT.gz
f	test_r/C:/Test Dir/My Dir/another File.TXT.gz

Test: restore (hard links) dir (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
H       test_r/C:/Test Dir/My Dir/a File.TXT
H       test_r/C:/Test Dir/My Dir/another File.TXT
H       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT.gz
f	test_r/C:/Test Dir/My Dir/another File.TXT.gz
f	test_r/C:/Test Dir/My File.TXT.gz

Test: restore (hard links) client (DOS)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
H       test_r/C:/Test Dir/My Dir/a File.TXT
H       test_r/C:/Test Dir/My Dir/another File.TXT
H       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT.gz
f	test_r/C:/Test Dir/My Dir/another File.TXT.gz
f	test_r/C:/Test Dir/My File.TXT.gz

Test: restore (hard links) client (dual-boot)
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Selected clients:
 ---> myClient
 ---> myClient.xp
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Database open r-o for 'myClient'
H       test_r//home/User/test/File2.txt
U       test_r//home/User/test/dir
H       test_r//home/User/test/dir/file3.txt
Database closed for 'myClient'
Database open r-o for 'myClient.xp'
U       test_r/C:/Test Dir/My Dir
H       test_r/C:/Test Dir/My Dir/a File.TXT
H       test_r/C:/Test Dir/My Dir/another File.TXT
H       test_r/C:/Test Dir/My File.TXT
Database closed for 'myClient.xp'
Database closed
d	test_r
d	test_r/C:
d	test_r/C:/Test Dir
d	test_r/C:/Test Dir/My Dir
f	test_r/C:/Test Dir/My Dir/a File.TXT.gz
f	test_r/C:/Test Dir/My Dir/another File.TXT.gz
f	test_r/C:/Test Dir/My File.TXT.gz
d	test_r/home
d	test_r/home/User
d	test_r/home/User/test
d	test_r/home/User/test/dir
f	test_r/home/User/test/dir/file3.txt
f	test_r/home/User/test/File2.txt.gz

Test: check for corrupted data
sh: cannot create test_db/.data/0f/2e/a9/73d77135dc3d06c8e68da6dc59-0/data.gz: Directory nonexistent
sh: cannot create test_db/.data/fe/f5/18/38cd3cfe8ed96355742eb71fbd-0/data: Directory nonexistent
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Check
Database open in read-only mode
Crawling through DB data
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
Error: Data missing for 59ca0efa9f5633cb0371bbc0355478d8-0
662ae0524981c10b4736be799fc8650a-0 45\r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
Error: Data corrupted for b90f8fa56ea1d39881d4a199c7a81d35-0
Checksum: 68b329da9893e34099c7d8ad5cb9c940
Reported corruption for b90f8fa56ea1d39881d4a199c7a81d35-0
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
Copy:  70.4%                              \r
Copy: 100.0%\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461\r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 19 valid and 2 broken data file(s)     
Database closed

Test: check for corrupted data again
sh: cannot create test_db/.data/0f/2e/a9/73d77135dc3d06c8e68da6dc59-0/data.gz: Directory nonexistent
sh: cannot create test_db/.data/fe/f5/18/38cd3cfe8ed96355742eb71fbd-0/data: Directory nonexistent
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Check
Database open in read-only mode
Crawling through DB data
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
Error: Data missing for 59ca0efa9f5633cb0371bbc0355478d8-0
662ae0524981c10b4736be799fc8650a-0 45\r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
Warning: Data corruption reported for b90f8fa56ea1d39881d4a199c7a81d35-0
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
Copy:  70.4%                              \r
Copy: 100.0%\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461\r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 19 valid and 2 broken data file(s)     
Database closed

Test: scan for missing data
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Just scan
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
Error: Data missing for 59ca0efa9f5633cb0371bbc0355478d8-0
662ae0524981c10b4736be799fc8650a-0 45\r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
Removed corrupted data for b90f8fa56ea1d39881d4a199c7a81d35-0
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 19 valid and 2 broken data file(s)     
Data statistics: 19 checksum(s), 19 valid [157768 real, 11549275 virtual]
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 19
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Obsolete checksum(s): 1
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed
Just scan again
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
662ae0524981c10b4736be799fc8650a-0 45\r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 19 valid and 0 broken data file(s)     
Data statistics: 19 checksum(s), 19 valid [157768 real, 11549275 virtual]
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 19
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Obsolete checksum(s): 1
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed

Test: scan for obsolete data, case1
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Just scan
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
Crawling through DB
00000000000000000000000000000000-0 1\r
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
Error: No such file or directory opening metadata file 'test_db/.data/55/55/55/55555555555555555555555555-0/meta'
Error: No such file or directory opening metadata file 'test_db/.data/55/55/55/55555555555555555555555555-0/meta'
ALERT! failed to decompress, zlib error code is -5
Error: Structure needs cleaning reading file 'test_db/.data/55/55/55/55555555555555555555555555-0/data.gz'
Removed corrupted data for 55555555555555555555555555555555-0
662ae0524981c10b4736be799fc8650a-0 45\r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
88888888888888888888888888888888-0 1000      \r
8a61083e712200a30c6ccf5f5c697b76-0 5 25\r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
ffffffffffffffffffffffffffffffff-0 1000000   \r
Found 22 valid and 1 broken data file(s)  
Data statistics: 22 checksum(s), 22 valid [157768 real, 12550276 virtual]
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 22
 -> 00000000000000000000000000000000-0, 1
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 88888888888888888888888888888888-0, 1000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> ffffffffffffffffffffffffffffffff-0, 1000000
Obsolete checksum(s): 4
 -> 00000000000000000000000000000000-0
 -> 6d7fce9fee471194aa8b5b6e47267f03-0
 -> 88888888888888888888888888888888-0
 -> ffffffffffffffffffffffffffffffff-0
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed
Scan and remove
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
Crawling through DB
00000000000000000000000000000000-0 1\r
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
662ae0524981c10b4736be799fc8650a-0 45\r
6d7fce9fee471194aa8b5b6e47267f03-0 2 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
88888888888888888888888888888888-0 1000      \r
8a61083e712200a30c6ccf5f5c697b76-0 5 25\r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
ffffffffffffffffffffffffffffffff-0 1000000   \r
Found 22 valid and 0 broken data file(s)  
Data statistics: 22 checksum(s), 22 valid [157768 real, 12550276 virtual]
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 22
 -> 00000000000000000000000000000000-0, 1
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 88888888888888888888888888888888-0, 1000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
 -> ffffffffffffffffffffffffffffffff-0, 1000000
Obsolete checksum(s): 4
Backup::removeHash(00000000000000000000000000000000-0)
 -> removed data for 00000000000000000000000000000000-0
Backup::removeHash(6d7fce9fee471194aa8b5b6e47267f03-0)
 -> removed data for 6d7fce9fee471194aa8b5b6e47267f03-0
Backup::removeHash(88888888888888888888888888888888-0)
 -> removed data for 88888888888888888888888888888888-0
Backup::removeHash(ffffffffffffffffffffffffffffffff-0)
 -> removed data for ffffffffffffffffffffffffffffffff-0
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed
Just scan again
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
662ae0524981c10b4736be799fc8650a-0 45\r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 18 valid and 0 broken data file(s)     
Data statistics: 18 checksum(s), 18 valid [157766 real, 11549273 virtual]
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 18
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed

Test: scan for obsolete data, case 2
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Just scan
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33333333333333333333333333333333-0 3    \r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
662ae0524981c10b4736be799fc8650a-0 45\r
77777777777777777777777777777777-0 7 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
Error: No such file or directory opening metadata file 'test_db/.data/dd/dd/dd/dddddddddddddddddddddddddd-0/meta'
Warning: Setting missing metadata for dddddddddddddddddddddddddddddddd-0
dddddddddddddddddddddddddddddddd-0 2\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 21 valid and 0 broken data file(s)     
Data statistics: 21 checksum(s), 21 valid [157768 real, 11549285 virtual]
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 21
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33333333333333333333333333333333-0, 3
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 77777777777777777777777777777777-0, 7
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> dddddddddddddddddddddddddddddddd-0, 2
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Obsolete checksum(s): 3
 -> 33333333333333333333333333333333-0
 -> 77777777777777777777777777777777-0
 -> dddddddddddddddddddddddddddddddd-0
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed
Scan and remove
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33333333333333333333333333333333-0 3    \r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
662ae0524981c10b4736be799fc8650a-0 45\r
77777777777777777777777777777777-0 7 \r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
dddddddddddddddddddddddddddddddd-0 2   \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 21 valid and 0 broken data file(s)     
Data statistics: 21 checksum(s), 21 valid [157768 real, 11549285 virtual]
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 21
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33333333333333333333333333333333-0, 3
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 77777777777777777777777777777777-0, 7
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> dddddddddddddddddddddddddddddddd-0, 2
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Obsolete checksum(s): 3
Backup::removeHash(33333333333333333333333333333333-0)
 -> removed data for 33333333333333333333333333333333-0
Backup::removeHash(77777777777777777777777777777777-0)
 -> removed data for 77777777777777777777777777777777-0
Backup::removeHash(dddddddddddddddddddddddddddddddd-0)
 -> removed data for dddddddddddddddddddddddddddddddd-0
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed
Just scan again
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42     \r
662ae0524981c10b4736be799fc8650a-0 45\r
816df6f64deba63b029ca19d880ee10a-0 512000 531\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20\r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 259072 286\r
Found 18 valid and 0 broken data file(s)     
Data statistics: 18 checksum(s), 18 valid [157766 real, 11549273 virtual]
Checksum(s) from list: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 18
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> b90f8fa56ea1d39881d4a199c7a81d35-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed

Test: backup recovers broken checksums + replace data
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
 -> Missing 59ca0efa9f5633cb0371bbc0355478d8-0
 -> Missing b90f8fa56ea1d39881d4a199c7a81d35-0
 -> Inconsistent d41d8cd98f00b204e9800998ecf8427e-0
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
Database closed for 'aClient.vista'
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
Adding compressed data for 6d7fce9fee471194aa8b5b6e47267f03-0
Backup::addHash(6d7fce9fee471194aa8b5b6e47267f03-0)
Cf z    /home/User/test/dir/file3.txt
Register modified for 'myClient'
Database closed for 'myClient'
Backup::add(test_db/myClient)
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myClient.xp'
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
Adding compressed data for b90f8fa56ea1d39881d4a199c7a81d35-0
Backup::addHash(b90f8fa56ea1d39881d4a199c7a81d35-0)
Rf z    test1/cvs/CVS/Root
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Id f    test1/subdir
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
svn/dir space\r
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
If f    test1/testfile~
D       test1/testfile
Backing up path 'test2'
testdir\r
Copy:  39.5%\r
Copy:  79.1%\r
Copy: 100.0%\r
Checking data, sizes: f=259072 z=286 (290)
Replacing with compressed data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
Backup::addHash(fb00cd74a5f35e89a7fbdd3c1d05375a-0)
Mf zr   test2/testfile2
If f    test2/testfile~
Register modified for 'myhost'
Database closed for 'myhost'
Backup::add(test_db/myhost)
Trying client 'newClient' using protocol 'ssh'
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah test_db/.mount/newClient
 -> Reading client configuration file for 'newClient'
 -> Client: newClient
 --> Protocol: ssh
 --> Options: username=user, password=p4sS?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/Blah/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'newClient'
Database open r/w for 'newClient'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/.mount/newClient
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah/test test_db/.mount/newClient
dir\r
Database closed for 'newClient'
 -> fusermount -u test_db/.mount/newClient
Trying client 'other' using protocol 'none'
Error: Protocol not supported 'none' for 'other'
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 2 items
Database closed
data.gz
meta
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"

Test: second backup should not recover again
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
 -> Missing 59ca0efa9f5633cb0371bbc0355478d8-0
 -> Inconsistent d41d8cd98f00b204e9800998ecf8427e-0
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
Database closed for 'aClient.vista'
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
Database closed for 'myClient'
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myClient.xp'
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Id f    test1/subdir
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
svn/dir space\r
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
If f    test1/testfile~
Backing up path 'test2'
testdir\r
If f    test2/testfile~
Database closed for 'myhost'
Trying client 'newClient' using protocol 'ssh'
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah test_db/.mount/newClient
 -> Reading client configuration file for 'newClient'
 -> Client: newClient
 --> Protocol: ssh
 --> Options: username=user, password=p4sS?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/Blah/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'newClient'
Database open r/w for 'newClient'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/.mount/newClient
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah/test test_db/.mount/newClient
dir\r
Database closed for 'newClient'
 -> fusermount -u test_db/.mount/newClient
Trying client 'other' using protocol 'none'
Error: Protocol not supported 'none' for 'other'
List of problematic checksums contains 2 items
Database closed

Test: scan shows recovered data
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 43 checksum(s), 21 unique [11549304 real, 11808402 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
Error: No such file or directory opening metadata file 'test_db/.data/52/52/f2/42d27b8c2c9fdbdcbb33545d07-0/meta'
Error: No such file or directory opening metadata file 'test_db/.data/52/52/f2/42d27b8c2c9fdbdcbb33545d07-0/meta'
Warning: Adding missing metadata for 5252f242d27b8c2c9fdbdcbb33545d07-0
5252f242d27b8c2c9fdbdcbb33545d07-0 42 67\r
662ae0524981c10b4736be799fc8650a-0 45   \r
6d7fce9fee471194aa8b5b6e47267f03-0 2 22\r
816df6f64deba63b029ca19d880ee10a-0 512000 536\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
b90f8fa56ea1d39881d4a199c7a81d35-0 16 36\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
fb00cd74a5f35e89a7fbdd3c1d05375a-0 185\r
Found 20 valid and 0 broken data file(s)
Data statistics: 20 checksum(s), 20 valid [157685 real, 11290404 virtual]
Checksum(s) from list: 21
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 20
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 185
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0 inconsistent
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed

Test: check finds corrupted data
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read-only mode
Crawling through DB data
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42 67  \r
662ae0524981c10b4736be799fc8650a-0 45   \r
6d7fce9fee471194aa8b5b6e47267f03-0 2 22\r
816df6f64deba63b029ca19d880ee10a-0 512000 536\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
b90f8fa56ea1d39881d4a199c7a81d35-0 16 36\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
Copy:  70.4%                              \r
Copy: 100.0%\r
f81f70dceaca8b0cec354f33fa3f0909-0 145461\r
f899d6f61138a37484c8a2294656e903-0 177   \r
Error: Data corrupted for fb00cd74a5f35e89a7fbdd3c1d05375a-0
Checksum: 0de026794b4612fbca289ed619a3ea9a
Reported corruption for fb00cd74a5f35e89a7fbdd3c1d05375a-0
Found 19 valid and 1 broken data file(s)
Database closed

Test: scan removes corrupted data
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Reading list for 'aClient.vista'
Reading list for 'client.xp'
Reading list for 'myClient'
Reading list for 'myClient.xp'
Reading list for 'myhost'
Reading list for 'newClient'
Sorting list
List statistics: 43 checksum(s), 21 unique [11549304 real, 11808402 virtual]
Crawling through DB
26ab0db90d72e28ad0ba1e22ee510510-0 2 22\r
328b42839732650180b213aadebe494d-0 16 36\r
33b426a9cdc8a98729e5dbe6d5feb619-0 388 211\r
3d546a1ce46c6ae10ad34ab8a81c542e-0 145408 176\r
5173c1e86196c05c124452a401e92a22-0 602 260   \r
5252f242d27b8c2c9fdbdcbb33545d07-0 42 67  \r
662ae0524981c10b4736be799fc8650a-0 45   \r
6d7fce9fee471194aa8b5b6e47267f03-0 2 22\r
816df6f64deba63b029ca19d880ee10a-0 512000 536\r
8a61083e712200a30c6ccf5f5c697b76-0 5 25      \r
b026324c6904b2a9cb4b88d6d61c81d1-0 2 22\r
b8bbb1294db5d59366b7d1827e2158d6-0 5 25\r
b90f8fa56ea1d39881d4a199c7a81d35-0 16 36\r
d41d8cd98f00b204e9800998ecf8427e-0 0 20 \r
eb75fb33b2019ef3c840eb5ccdc2e795-0 10 30\r
f1c9645dbc14efddc7d8a322685f26eb-0 10485760 10208\r
f2b4c9d3f0830dea53972d208979feb0-0 278 189       \r
f81f70dceaca8b0cec354f33fa3f0909-0 145461 \r
f899d6f61138a37484c8a2294656e903-0 177   \r
Removed corrupted data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
Found 19 valid and 1 broken data file(s)
Data statistics: 19 checksum(s), 19 valid [157568 real, 11290219 virtual]
Checksum(s) from list: 21
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 59ca0efa9f5633cb0371bbc0355478d8-0, 13
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, -1
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0, 259072
Checksum(s) with data: 19
 -> 26ab0db90d72e28ad0ba1e22ee510510-0, 2
 -> 328b42839732650180b213aadebe494d-0, 16
 -> 33b426a9cdc8a98729e5dbe6d5feb619-0, 388
 -> 3d546a1ce46c6ae10ad34ab8a81c542e-0, 145408
 -> 5173c1e86196c05c124452a401e92a22-0, 602
 -> 5252f242d27b8c2c9fdbdcbb33545d07-0, 42
 -> 662ae0524981c10b4736be799fc8650a-0, 45
 -> 6d7fce9fee471194aa8b5b6e47267f03-0, 2
 -> 816df6f64deba63b029ca19d880ee10a-0, 512000
 -> 8a61083e712200a30c6ccf5f5c697b76-0, 5
 -> b026324c6904b2a9cb4b88d6d61c81d1-0, 2
 -> b8bbb1294db5d59366b7d1827e2158d6-0, 5
 -> b90f8fa56ea1d39881d4a199c7a81d35-0, 16
 -> d41d8cd98f00b204e9800998ecf8427e-0, 0
 -> eb75fb33b2019ef3c840eb5ccdc2e795-0, 10
 -> f1c9645dbc14efddc7d8a322685f26eb-0, 10485760
 -> f2b4c9d3f0830dea53972d208979feb0-0, 278
 -> f81f70dceaca8b0cec354f33fa3f0909-0, 145461
 -> f899d6f61138a37484c8a2294656e903-0, 177
Warning: Problematic checksum(s): 3
 -> 59ca0efa9f5633cb0371bbc0355478d8-0 missing
 -> d41d8cd98f00b204e9800998ecf8427e-0 inconsistent
 -> fb00cd74a5f35e89a7fbdd3c1d05375a-0 missing
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 3 items
Database closed

Test: third backup should not recover again
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
 -> Missing 59ca0efa9f5633cb0371bbc0355478d8-0
 -> Inconsistent d41d8cd98f00b204e9800998ecf8427e-0
 -> Missing fb00cd74a5f35e89a7fbdd3c1d05375a-0
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
My Dir\r
Database closed for 'aClient.vista'
 -> umount -fl test_db/.mount/aClient.vista
Trying client 'client.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase,username=Myself,password=flesyM,nocase //myClient/C$ test_db/.mount/client.xp
 -> Reading client configuration file for 'client.xp'
 -> Client: client
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Hostname: myClient
 --> Options: username=Myself, password=flesyM, nocase
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'client.xp'
Database open r/w for 'client.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'client.xp'
 -> umount -fl test_db/.mount/client.xp
Trying client 'myClient' using protocol 'nfs'
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User test_db/.mount/myClient
 -> Reading client configuration file for 'myClient'
 -> Client: myClient
 --> Protocol: nfs
 --> Users: backup, root
 --> Config: /home/User/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/User/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'myClient'
Database open r/w for 'myClient'
Backing up path '/home/User/test'
 -> umount -fl test_db/.mount/myClient
 -> mount -t nfs -o ro,noatime,nolock,soft,timeo=30,intr myClient:/home/User/test test_db/.mount/myClient
dir\r
Database closed for 'myClient'
 -> umount -fl test_db/.mount/myClient
Trying client 'myClient.xp' using protocol 'smb'
 -> mount -t cifs -o ro,nocase //myClient/C$ test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myClient.xp'
 -> Client: myClient
 --> Required subset: xp
 --> Subset: xp
 --> Protocol: smb
 --> Users: backup
 --> Config: C:/Backup/Backup.LST
 --> Expiry: none
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: C:/Test Dir
 ----> Filter: and silly
 -----> Condition: filter backup
 -----> Condition: type p
 -----> Condition: name 'a'
 -----> Condition: name_start 'b'
 -----> Condition: no case name_end 'c'
 -----> Condition: name_regex 'd'
 -----> Condition: not no case path 'e'
 -----> Condition: not path_start 'f'
 -----> Condition: path_end 'g'
 -----> Condition: name_regex 'h'
 -----> Condition: size>= 1
 -----> Condition: size> 2048
 -----> Condition: size<= 3000000
 -----> Condition: size< 4294967296
 -----> Condition: mode& 0777
 -----> Condition: mode= 0644
 ----> Ignore filters:
 -----> nothing
Backing up client 'myClient.xp'
Database open r/w for 'myClient.xp'
Backing up path 'C:/Test Dir'
My Dir\r
Database closed for 'myClient.xp'
 -> umount -fl test_db/.mount/myClient.xp
 -> Reading client configuration file for 'myhost'
 -> Client: myhost
 --> Protocol: file
 --> Hostname: myhost.mynetwork.lan
 --> Users: biloute, machin
 --> No warning on time out
 --> Config: etc/localhost.list
 --> Expiry: 86400 second(s) / 1 day(s)
 --> No error if same file fails copy again
 --> Filter: and subdir
 ---> Condition: path_start 'subdir'
 ---> Condition: not size< 100
 --> Filter: and bigfile
 ---> Condition: size>= 10
 ---> Condition: type f
 --> Ignore filters:
 ---> nothing
 ---> backup
 --> Paths:
 ---> Path: test1
 ----> Filter: and not_object
 -----> Condition: not path_end '.o'
 ----> Filter: or to_be_ignored
 -----> Condition: filter subdir
 -----> Condition: not filter not_object
 ----> Filter: and cvs_entries
 -----> Condition: name 'Entries'
 ----> Ignore filters:
 -----> nothing
 -----> backup
 -----> to_be_ignored
 ----> Compress filter: bigfile
 ----> No compress filter: cvs_entries
 ----> Parser: CVS
 ----> Parser: Subversion
 ---> Path: test2
 ----> Ignore filters:
 -----> nothing
 -----> backup
Backing up client 'myhost'
Database open r/w for 'myhost'
Backing up path 'test1'
cvs\r
 -> Parsing CVS entries
 --> dir space: D
 --> dirbad: D
 --> dirutd: D
 --> filemod.o: 1159806431
 --> filenew.c: 0
 --> fileutd.h: 1159985080
cvs/CVS\r
If p    test1/cvs/CVS/Whatever
Id p    test1/cvs/CVS/Wherever
cvs/dir space\r
 -> Parsing CVS entries
 --> file space: 1275257953
cvs/dir space/CVS\r
If p    test1/cvs/dir space/CVS/Whatever
If p    test1/cvs/dir space/file other
cvs/dirbad\r
Warning: Directory 'test1/cvs/dirbad' should be under CVS control
If p    test1/cvs/dirbad/fileoth
If p    test1/cvs/dirbad/fileutd
Id p    test1/cvs/diroth
cvs/dirutd\r
 -> Parsing CVS entries
 --> fileutd: 1159985080
cvs/dirutd/CVS\r
If p    test1/cvs/dirutd/CVS/Whatever
If p    test1/cvs/dirutd/fileoth
If f    test1/cvs/filemod.o
If p    test1/cvs/fileoth
dir space\r
Id f    test1/subdir
svn\r
 -> Parsing Subversion entries in 'test1/svn'
 -> Sorting Subversion entries
 --> test1/svn/dir space/file space: m
 --> test1/svn/dirbad: m
 --> test1/svn/diroth: o
 --> test1/svn/dirutd/fileoth: o
 --> test1/svn/dirutd/fileutd: m
 --> test1/svn/filemod.o: m
 --> test1/svn/filenew.c: m
 --> test1/svn/fileoth: i
svn/.svn\r
Control dir 'test1/svn/.svn'
If p    test1/svn/.svn/all-wcprops
If p    test1/svn/.svn/dir-prop-base
Id p    test1/svn/.svn/prop-base
Id p    test1/svn/.svn/props
Id p    test1/svn/.svn/text-base
Id p    test1/svn/.svn/tmp
svn/dir space\r
svn/dir space/.svn\r
Control dir 'test1/svn/dir space/.svn'
If p    test1/svn/dir space/.svn/all-wcprops
Id p    test1/svn/dir space/.svn/prop-base
Id p    test1/svn/dir space/.svn/props
Id p    test1/svn/dir space/.svn/text-base
Id p    test1/svn/dir space/.svn/tmp
svn/dirbad\r
Warning: Directory 'test1/svn/dirbad' should be under Subversion control
If p    test1/svn/dirbad/fileoth
If p    test1/svn/dirbad/fileutd
Id p    test1/svn/diroth
svn/dirutd\r
svn/dirutd/.svn\r
Control dir 'test1/svn/dirutd/.svn'
If p    test1/svn/dirutd/.svn/all-wcprops
Id p    test1/svn/dirutd/.svn/prop-base
Id p    test1/svn/dirutd/.svn/props
Id p    test1/svn/dirutd/.svn/text-base
Id p    test1/svn/dirutd/.svn/tmp
If p    test1/svn/dirutd/fileoth
If f    test1/svn/filemod.o
If p    test1/svn/fileoth
If p    test1/svn/fileutd.h
testdir\r
If f    test1/testfile~
Backing up path 'test2'
testdir\r
Copy:  39.5%\r
Copy:  79.1%\r
Copy: 100.0%\r
Checking data, sizes: f=259072 z=286 (290)
Rf ~    test2/testfile2
If f    test2/testfile~
Register modified for 'myhost'
Database closed for 'myhost'
Backup::add(test_db/myhost)
Trying client 'newClient' using protocol 'ssh'
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah test_db/.mount/newClient
 -> Reading client configuration file for 'newClient'
 -> Client: newClient
 --> Protocol: ssh
 --> Options: username=user, password=p4sS?
 --> Config: /home/Blah/hbackup.list
 --> Expiry: none
 --> No error if same file fails copy again
 --> Ignore filters:
 ---> nothing
 --> Paths:
 ---> Path: /home/Blah/test
 ----> Filter: or compress
 -----> Condition: name 'File2.txt'
 -----> Condition: path 'dir/file3.txt'
 ----> Ignore filters:
 -----> nothing
 ----> Compress filter: compress
Backing up client 'newClient'
Database open r/w for 'newClient'
Backing up path '/home/Blah/test'
 -> fusermount -u test_db/.mount/newClient
 -> echo p4sS? | sshfs -o password_stdin user@newClient:/home/Blah/test test_db/.mount/newClient
dir\r
Database closed for 'newClient'
 -> fusermount -u test_db/.mount/newClient
Trying client 'other' using protocol 'none'
Error: Protocol not supported 'none' for 'other'
Backup::add(test_db/.checksums)
Missing checksums list updated
List of problematic checksums contains 2 items
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"

Test: declared path missing
 -> Reading configuration file 'etc/hbackup.conf'
Backup::Backup(test_db/.backup)
 --> Log path: 'hbackup.log'
 ---> Max lines per log: 100000
 ---> Backup(s): 10
 ---> Level: verbose
 --> DB path: 'test_db'
 --> DB compression: automatic
 --> Parser plugins paths:
 ---> ../../../parsers/.libs
 --> Parsers found:
 ---> cvs (CVS)
 ---> svn (Subversion)
 --> Clients:
 ---> Client: aClient
 ----> Required subset: vista
 ----> Protocol: smb
 ----> Expiry: none
 ----> Filter: and huge_file
 -----> Condition: not filter backup
 -----> Condition: not size< 100
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: C:/Test Dir
 ------> No error if same file fails copy again
 ------> Filter: and compress_m
 -------> Condition: not filter huge_file
 ------> Ignore filters:
 -------> nothing
 -------> backup
 ------> Compress filter: compress_m
 ------> Parser: Subversion
 ---> Client: client
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Hostname: myClient
 ----> Options: username=Myself, password=flesyM, nocase
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 -----> backup
 ---> Client: myClient
 ----> Protocol: nfs
 ----> Users: backup, root
 ----> Config: /home/User/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myClient
 ----> Required subset: xp
 ----> Protocol: smb
 ----> Users: backup
 ----> Config: C:/Backup/Backup.LST
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: myhost
 ----> Protocol: file
 ----> Hostname: myhost.mynetwork.lan
 ----> No warning on time out
 ----> Config: etc/localhost.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> No error if same file fails copy again
 ----> Ignore filters:
 -----> nothing
 ---> Client: newClient
 ----> Protocol: ssh
 ----> Options: username=user, password=p4sS?
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: none
 ----> Ignore filters:
 -----> nothing
 ---> Client: other
 ----> Protocol: none
 ----> Hostname: otherClient
 ----> Options: username=foo, password=bar
 ----> Config: /home/Blah/hbackup.list
 ----> Expiry: 86400 second(s) / 1 day(s)
 ----> Filter: and subdir
 -----> Condition: path_start 'subdir'
 -----> Condition: not size< 100
 ----> Filter: and bigfile
 -----> Condition: size>= 10
 -----> Condition: type f
 ----> Ignore filters:
 -----> nothing
 ----> Paths:
 -----> Path: test1
 ------> Filter: and not_object
 -------> Condition: not path_end '.o'
 ------> Filter: or to_be_ignored
 -------> Condition: filter subdir
 -------> Condition: filter backup
 -------> Condition: not filter not_object
 ------> Ignore filters:
 -------> nothing
 -------> to_be_ignored
 ------> Compress filter: bigfile
 ------> Parser: CVS
 ------> Parser: Subversion
 -----> Path: test2
 ------> Ignore filters:
 -------> nothing
 --> Filter: and nothing
 ---> Condition: type p
 ---> Condition: size> 10
 --> Filter: and backup
 ---> Condition: type f
 ---> Condition: path_end '~'
 --> Filter: or test_or
 ---> Condition: filter backup
 ---> Condition: not size< 1000
 --> Ignore filters:
 ---> nothing
 --> Trees path: 'test_tree'
 ---> create symbolic links
 ---> check for compressed data (very slow)
 ---> 23 hourly
 ---> 6 daily
 ---> 52 weekly
Database open in read/write mode
Trying client 'aClient.vista' using protocol 'smb'
Backing up client 'aClient.vista'
Reading list of problematic checksums
 -> Missing 59ca0efa9f5633cb0371bbc0355478d8-0
 -> Inconsistent d41d8cd98f00b204e9800998ecf8427e-0
Database open r/w for 'aClient.vista'
Backing up path 'C:/Test Dir'
 -> mount -t cifs -o ro,nocase //aClient/C$ test_db/.mount/aClient.vista
Error: No such file or directory reading initial directory 'aClient.vista:C:/Test Dir'
Error: Aborting client
Database closed for 'aClient.vista'
 -> umount -fl test_db/.mount/aClient.vista
List of problematic checksums contains 2 items
Database closed
Config for test_db/.configs/client.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myClient
report_copy_error_once
path "/home/User/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
Config for test_db/.configs/myClient.xp
subset "xp"
path "C:\Test Dir\"
  filter "and" "silly"
    condition "filter" "backup"
    condition "type" "pipe"
    condition "name" "a"
    condition "name_start" "b"
    condition "iname_end" "c"
    condition "name_regex" "d"
    condition "!ipath" "e"
    condition "!path_start" "f"
    condition "path_end" "g"
    condition "path_regex" "h"
    condition "size>=" "1"
    condition "size>" "2ki"
    condition "size<=" "3MB"
    condition "size<" "4GiB"
    condition "mode&" "0777"
    condition "mode=" "0644"
Config for test_db/.configs/myhost
filter "and" "subdir"
  condition "path_start" "subdir"
  condition "!size<" "100"
users "biloute" "machin"
ignore "backup"
filter "and" "bigfile"
  condition "size>=" "10"
  condition "type" "file"
expire "1"
path "test2//"
path "test1"
  filter "and" "not_object"
    condition "!path_end" ".o"
  filter "or" "to_be_ignored"
    condition "filter" "subdir"
    condition "!filter" "not_object"
  ignore "to_be_ignored"
  compress "bigfile"
  parser "cvs" "controlled"
  parser "svn" "modified"
  filter "and" "cvs_entries"
    condition "name" "Entries"
  no_compress "cvs_entries"
Config for test_db/.configs/newClient
report_copy_error_once
path "/home/Blah/test/"
  filter "or" "compress"
    condition "name" "File2.txt"
    condition "path" "dir/file3.txt"
  compress "compress"
hbackup.log:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'aClient.vista' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'aClient.vista'
2009-08-07 06:05:06 VERB  missing.cpp:164 Reading list of problematic checksums
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'aClient.vista'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 ERROR paths.cpp:321 No such file or directory reading initial directory 'aClient.vista:C:/Test Dir'
2009-08-07 06:05:06 ERROR clients.cpp:384 Aborting client
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'aClient.vista'
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 2 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-1:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'aClient.vista' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'aClient.vista'
2009-08-07 06:05:06 VERB  missing.cpp:164 Reading list of problematic checksums
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'aClient.vista'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'aClient.vista'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'client.xp' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'client.xp'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'client.xp'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'myClient' using protocol 'nfs'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myClient'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path '/home/User/test'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myClient'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'myClient.xp' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myClient.xp'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myClient.xp'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myhost'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'test1'
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/cvs/CVS/Wherever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dir space/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dir space/file other
2009-08-07 06:05:06 WARN  cvs_parser.cpp:87 Directory 'test1/cvs/dirbad' should be under CVS control
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirbad/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirbad/fileutd
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/cvs/diroth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirutd/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirutd/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/cvs/filemod.o
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 Id f    test1/subdir
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/.svn/dir-prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/tmp
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dir space/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/tmp
2009-08-07 06:05:06 WARN  svn_parser.cpp:153 Directory 'test1/svn/dirbad' should be under Subversion control
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirbad/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirbad/fileutd
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/diroth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirutd/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/tmp
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirutd/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/svn/filemod.o
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/fileutd.h
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/testfile~
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'test2'
2009-08-07 06:05:06 INFO  paths.cpp:186 Rf ~    test2/testfile2
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test2/testfile~
2009-08-07 06:05:06 VERB  owner.cpp:367 Register modified for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myhost'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'newClient' using protocol 'ssh'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'newClient'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path '/home/Blah/test'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'newClient'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'other' using protocol 'none'
2009-08-07 06:05:06 ERROR clients.cpp:295 Protocol not supported 'none' for 'other'
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 2 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-10:
2009-08-07 06:05:06 VERB  db.cpp:218 Database open in read-only mode
2009-08-07 06:05:06 VERB  db.cpp:671 Crawling through DB data
2009-08-07 06:05:06 ERROR data.cpp:784 Data missing for 59ca0efa9f5633cb0371bbc0355478d8-0
2009-08-07 06:05:06 WARN  data.cpp:803 Data corruption reported for b90f8fa56ea1d39881d4a199c7a81d35-0
2009-08-07 06:05:06 VERB  data.cpp:941 Found 19 valid and 2 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-2:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 43 checksum(s), 21 unique [11549304 real, 11808402 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 INFO  data.cpp:864 Removed corrupted data for fb00cd74a5f35e89a7fbdd3c1d05375a-0
2009-08-07 06:05:06 VERB  data.cpp:941 Found 19 valid and 1 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 19 checksum(s), 19 valid [157568 real, 11290219 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 19
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-3:
2009-08-07 06:05:06 VERB  db.cpp:218 Database open in read-only mode
2009-08-07 06:05:06 VERB  db.cpp:671 Crawling through DB data
2009-08-07 06:05:06 ERROR data.cpp:834 Data corrupted for fb00cd74a5f35e89a7fbdd3c1d05375a-0
2009-08-07 06:05:06 INFO  data.cpp:843 Reported corruption for fb00cd74a5f35e89a7fbdd3c1d05375a-0
2009-08-07 06:05:06 VERB  data.cpp:941 Found 19 valid and 1 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-4:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 43 checksum(s), 21 unique [11549304 real, 11808402 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 ERROR data.cpp:231 No such file or directory opening metadata file 'test_db/.data/52/52/f2/42d27b8c2c9fdbdcbb33545d07-0/meta'
2009-08-07 06:05:06 ERROR data.cpp:231 No such file or directory opening metadata file 'test_db/.data/52/52/f2/42d27b8c2c9fdbdcbb33545d07-0/meta'
2009-08-07 06:05:06 WARN  data.cpp:852 Adding missing metadata for 5252f242d27b8c2c9fdbdcbb33545d07-0
2009-08-07 06:05:06 VERB  data.cpp:941 Found 20 valid and 0 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 20 checksum(s), 20 valid [157685 real, 11290404 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 20
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-5:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'aClient.vista' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'aClient.vista'
2009-08-07 06:05:06 VERB  missing.cpp:164 Reading list of problematic checksums
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'aClient.vista'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'aClient.vista'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'client.xp' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'client.xp'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'client.xp'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'myClient' using protocol 'nfs'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myClient'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path '/home/User/test'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myClient'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'myClient.xp' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myClient.xp'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myClient.xp'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myhost'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'test1'
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/cvs/CVS/Wherever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dir space/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dir space/file other
2009-08-07 06:05:06 WARN  cvs_parser.cpp:87 Directory 'test1/cvs/dirbad' should be under CVS control
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirbad/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirbad/fileutd
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/cvs/diroth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirutd/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirutd/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/cvs/filemod.o
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 Id f    test1/subdir
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/.svn/dir-prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/tmp
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dir space/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/tmp
2009-08-07 06:05:06 WARN  svn_parser.cpp:153 Directory 'test1/svn/dirbad' should be under Subversion control
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirbad/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirbad/fileutd
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/diroth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirutd/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/tmp
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirutd/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/svn/filemod.o
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/fileutd.h
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/testfile~
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'test2'
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test2/testfile~
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myhost'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'newClient' using protocol 'ssh'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'newClient'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path '/home/Blah/test'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'newClient'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'other' using protocol 'none'
2009-08-07 06:05:06 ERROR clients.cpp:295 Protocol not supported 'none' for 'other'
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 2 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-6:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'aClient.vista' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'aClient.vista'
2009-08-07 06:05:06 VERB  missing.cpp:164 Reading list of problematic checksums
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'aClient.vista'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'aClient.vista'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'client.xp' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'client.xp'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'client.xp'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'myClient' using protocol 'nfs'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myClient'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path '/home/User/test'
2009-08-07 06:05:06 INFO  paths.cpp:186 Cf z    /home/User/test/dir/file3.txt
2009-08-07 06:05:06 VERB  owner.cpp:367 Register modified for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myClient'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'myClient.xp' using protocol 'smb'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myClient.xp'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'C:/Test Dir'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myClient.xp'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'myhost'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'test1'
2009-08-07 06:05:06 INFO  paths.cpp:186 Rf z    test1/cvs/CVS/Root
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/cvs/CVS/Wherever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dir space/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dir space/file other
2009-08-07 06:05:06 WARN  cvs_parser.cpp:87 Directory 'test1/cvs/dirbad' should be under CVS control
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirbad/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirbad/fileutd
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/cvs/diroth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirutd/CVS/Whatever
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/dirutd/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/cvs/filemod.o
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/cvs/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 Id f    test1/subdir
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/.svn/dir-prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/.svn/tmp
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dir space/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dir space/.svn/tmp
2009-08-07 06:05:06 WARN  svn_parser.cpp:153 Directory 'test1/svn/dirbad' should be under Subversion control
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirbad/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirbad/fileutd
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/diroth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirutd/.svn/all-wcprops
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/prop-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/props
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/text-base
2009-08-07 06:05:06 VERB  paths.cpp:233 Id p    test1/svn/dirutd/.svn/tmp
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/dirutd/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/svn/filemod.o
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/fileoth
2009-08-07 06:05:06 VERB  paths.cpp:233 If p    test1/svn/fileutd.h
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test1/testfile~
2009-08-07 06:05:06 INFO  list.cpp:756 D       test1/testfile
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path 'test2'
2009-08-07 06:05:06 INFO  paths.cpp:186 Mf zr   test2/testfile2
2009-08-07 06:05:06 VERB  paths.cpp:233 If f    test2/testfile~
2009-08-07 06:05:06 VERB  owner.cpp:367 Register modified for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'myhost'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'newClient' using protocol 'ssh'
2009-08-07 06:05:06 INFO  clients.cpp:331 Backing up client 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:717 Database open r/w for 'newClient'
2009-08-07 06:05:06 INFO  clients.cpp:362 Backing up path '/home/Blah/test'
2009-08-07 06:05:06 VERB  db.cpp:726 Database closed for 'newClient'
2009-08-07 06:05:06 INFO  clients.cpp:269 Trying client 'other' using protocol 'none'
2009-08-07 06:05:06 ERROR clients.cpp:295 Protocol not supported 'none' for 'other'
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 2 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-7:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 ERROR data.cpp:231 No such file or directory opening metadata file 'test_db/.data/dd/dd/dd/dddddddddddddddddddddddddd-0/meta'
2009-08-07 06:05:06 WARN  data.cpp:876 Setting missing metadata for dddddddddddddddddddddddddddddddd-0
2009-08-07 06:05:06 VERB  data.cpp:941 Found 21 valid and 0 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 21 checksum(s), 21 valid [157768 real, 11549285 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 21
2009-08-07 06:05:06 INFO  db.cpp:639 Obsolete checksum(s): 3
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 VERB  data.cpp:941 Found 21 valid and 0 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 21 checksum(s), 21 valid [157768 real, 11549285 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 21
2009-08-07 06:05:06 INFO  db.cpp:639 Obsolete checksum(s): 3
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 VERB  data.cpp:941 Found 18 valid and 0 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 18 checksum(s), 18 valid [157766 real, 11549273 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 18
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-8:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 ERROR data.cpp:231 No such file or directory opening metadata file 'test_db/.data/55/55/55/55555555555555555555555555-0/meta'
2009-08-07 06:05:06 ERROR data.cpp:231 No such file or directory opening metadata file 'test_db/.data/55/55/55/55555555555555555555555555-0/meta'
2009-08-07 06:05:06 ALERT unzipreader.cpp:94 failed to decompress, zlib error code is -5
2009-08-07 06:05:06 ERROR data.cpp:818 Structure needs cleaning reading file 'test_db/.data/55/55/55/55555555555555555555555555-0/data.gz'
2009-08-07 06:05:06 INFO  data.cpp:823 Removed corrupted data for 55555555555555555555555555555555-0
2009-08-07 06:05:06 VERB  data.cpp:941 Found 22 valid and 1 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 22 checksum(s), 22 valid [157768 real, 12550276 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 22
2009-08-07 06:05:06 INFO  db.cpp:639 Obsolete checksum(s): 4
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 VERB  data.cpp:941 Found 22 valid and 0 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 22 checksum(s), 22 valid [157768 real, 12550276 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 22
2009-08-07 06:05:06 INFO  db.cpp:639 Obsolete checksum(s): 4
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 VERB  data.cpp:941 Found 18 valid and 0 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 18 checksum(s), 18 valid [157766 real, 11549273 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 18
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
hbackup.log-9:
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 ERROR data.cpp:784 Data missing for 59ca0efa9f5633cb0371bbc0355478d8-0
2009-08-07 06:05:06 INFO  data.cpp:864 Removed corrupted data for b90f8fa56ea1d39881d4a199c7a81d35-0
2009-08-07 06:05:06 VERB  data.cpp:941 Found 19 valid and 2 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 19 checksum(s), 19 valid [157768 real, 11549275 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 19
2009-08-07 06:05:06 INFO  db.cpp:639 Obsolete checksum(s): 1
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
2009-08-07 06:05:06 VERB  db.cpp:247 Database open in read/write mode
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'aClient.vista'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'client.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myClient.xp'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'myhost'
2009-08-07 06:05:06 VERB  db.cpp:521 Reading list for 'newClient'
2009-08-07 06:05:06 VERB  db.cpp:532 Sorting list
2009-08-07 06:05:06 VERB  db.cpp:561 List statistics: 40 checksum(s), 20 unique [11549302 real, 11549312 virtual]
2009-08-07 06:05:06 VERB  db.cpp:564 Crawling through DB
2009-08-07 06:05:06 VERB  data.cpp:941 Found 19 valid and 0 broken data file(s)
2009-08-07 06:05:06 VERB  db.cpp:585 Data statistics: 19 checksum(s), 19 valid [157768 real, 11549275 virtual]
2009-08-07 06:05:06 VERB  db.cpp:596 Checksum(s) with data: 19
2009-08-07 06:05:06 INFO  db.cpp:639 Obsolete checksum(s): 1
2009-08-07 06:05:06 WARN  missing.cpp:296 Problematic checksum(s): 3
2009-08-07 06:05:06 INFO  missing.cpp:100 Missing checksums list updated
2009-08-07 06:05:06 INFO  missing.cpp:142 List of problematic checksums contains 3 items
2009-08-07 06:05:06 VERB  db.cpp:272 Database closed
